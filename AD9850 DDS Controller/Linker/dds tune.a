;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.0 Professional
;Automatic Program Generator
;© Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 9/13/2013
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega32
;Program type            : Application
;AVR Core Clock frequency: 16.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*****************************************************/
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;// Alphanumeric LCD Module functions
;#include <alcd.h>
;
;// Declare your global variables here
;#include <delay.h>
;#include <stdlib.h>
;#include <stdint.h>
;#include <stdio.h>
;
;#define DAT_2   PORTB.0
;#define CLK     PORTB.1
;#define FUD     PORTB.2
;#define DAT     PORTB.3
;#define RST     PORTB.4
;
;#define T_DOWN  PINA.0
;#define T_UP    PINA.1
;#define S_DOWN  PINA.2
;#define S_UP    PINA.3
;
;#define LOW     0
;#define HIGH    1
;
;eeprom uint32_t freq = 1000000;
;eeprom uint32_t d_freq;
;eeprom uint32_t step = 1000000;
;eeprom uint32_t d_step;
;char lcd[32];
;
;void dds_reset(void)
; 0000 0038 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0039         CLK = LOW;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 003A         FUD = LOW;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 003B         DAT = LOW;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 003C 
; 0000 003D         RST = LOW;      delay_us(5);
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 003E         RST = HIGH;     delay_us(5);
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 003F         RST = LOW;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0040 
; 0000 0041         CLK = LOW;      delay_us(5);
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0042         CLK = HIGH;     delay_us(5);
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0043         CLK = LOW;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0044 
; 0000 0045         FUD = LOW;      delay_us(5);
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0046         FUD = HIGH;     delay_us(5);
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0047         FUD = LOW;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0048 }
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;
;flash unsigned char phase = ((90 * 100 / 1125) + 0);
;
;void send_data(void)
; 0000 004D {
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 004E         uint32_t data_word = (freq * 4294967296) / 100000000;
; 0000 004F         unsigned long data_word_2 = data_word + (phase << 35);
; 0000 0050         int i;
; 0000 0051 
; 0000 0052         FUD = HIGH;     delay_us(5);
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;	data_word -> Y+6
;	data_word_2 -> Y+2
;	i -> R16,R17
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0053         FUD = LOW;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0054 
; 0000 0055         for(i=0; i<40; i++)
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0056         {
; 0000 0057                 DAT = ((data_word >> i) & 0x01);
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0058                 DAT_2 = ((data_word_2 >> i) & 0x01);
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 0059                 delay_us(10);
;PCODE: $00000066 VOL: 0
; 0000 005A 
; 0000 005B                 CLK = HIGH;
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 005C                 delay_us(5);
;PCODE: $00000069 VOL: 0
; 0000 005D                 CLK = LOW;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 005E         }
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 005F 
; 0000 0060         delay_us(10);
;PCODE: $00000071 VOL: 0
; 0000 0061 
; 0000 0062         FUD = HIGH;
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 0063         delay_us(5);
;PCODE: $00000074 VOL: 0
; 0000 0064         FUD = LOW;
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 0065 }
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;
;void display(void)
; 0000 0068 {
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 0069         char string[32];
; 0000 006A 
; 0000 006B         uint32_t temp_freq = freq;
; 0000 006C         int mega;
; 0000 006D         int kilo;
; 0000 006E         int hertz;
; 0000 006F 
; 0000 0070         mega = (int)(temp_freq / 1000000);
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;	string -> Y+10
;	temp_freq -> Y+6
;	mega -> R16,R17
;	kilo -> R18,R19
;	hertz -> R20,R21
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0071         temp_freq = temp_freq % 1000000;
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0072         kilo = temp_freq / 1000;
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0073         hertz= temp_freq % 1000;
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 0074 
; 0000 0075         lcd_clear();
;PCODE: $00000095 VOL: 0
; 0000 0076         lcd_gotoxy(0,0);
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 0077         sprintf(lcd,"F: %2i.%03i.%03i Hz",mega,kilo,hertz);
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 0078         lcd_puts(lcd);
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 0079 
; 0000 007A         ltoa(step,string);
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 007B 
; 0000 007C         lcd_gotoxy(0,1);
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 007D         if(step == 1000000)
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 007E         {
; 0000 007F                     // 0123456789abcdef
; 0000 0080             lcd_putsf("      s:    1MHz");
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 0081         }
; 0000 0082         else if(step == 100000)
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0000 0083         {
; 0000 0084                     // 0123456789abcdef
; 0000 0085             lcd_putsf("      s:  100kHz");
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 0086         }
; 0000 0087         else if(step == 10000)
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
; 0000 0088         {
; 0000 0089                     // 0123456789abcdef
; 0000 008A             lcd_putsf("      s:   10kHz");
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0000 008B         }
; 0000 008C         else if(step == 1000)
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 008D         {
; 0000 008E                     // 0123456789abcdef
; 0000 008F             lcd_putsf("      s:    1kHz");
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 0090         }
; 0000 0091         else if(step == 100)
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 0092         {
; 0000 0093                     // 0123456789abcdef
; 0000 0094             lcd_putsf("      s:  100 Hz");
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0000 0095         }
; 0000 0096         else if(step == 10)
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
; 0000 0097         {
; 0000 0098                     // 0123456789abcdef
; 0000 0099             lcd_putsf("      s:   10 Hz");
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0000 009A         }
; 0000 009B         else if(step == 1)
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0000 009C         {
; 0000 009D                     // 0123456789abcdef
; 0000 009E             lcd_putsf("      s:    1 Hz");
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 009F         }
; 0000 00A0         else
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0000 00A1         {
; 0000 00A2                     // 0123456789abcdef
; 0000 00A3             lcd_putsf("      s:    0 Hz");
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
; 0000 00A4         }
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0000 00A5 }
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;
;void tuning (void)
; 0000 00A8 {
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
; 0000 00A9         if(!T_UP)
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0000 00AA         {
; 0000 00AB                 delay_ms(125);
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
; 0000 00AC 
; 0000 00AD                 d_freq = freq;
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
; 0000 00AE                 freq += step;
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0000 00AF                 if(freq > 30000000) freq = 30000000;
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
; 0000 00B0         }
;PCODE: $0000012C VOL: 0
; 0000 00B1 
; 0000 00B2         if(!T_DOWN)
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
; 0000 00B3         {
; 0000 00B4                 delay_ms(125);
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
; 0000 00B5 
; 0000 00B6                 d_freq = freq;
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 00B7                 if((step == 1)&&(freq == 1));
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
; 0000 00B8                 else
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
; 0000 00B9                 {
; 0000 00BA                         if((freq / step) < 2)   step /= 10;
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
; 0000 00BB                         freq -= step;
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0000 00BC                 }
;PCODE: $00000161 VOL: 0
; 0000 00BD                 if(freq < 0)        freq = 0;
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0000 00BE         }
;PCODE: $00000169 VOL: 0
; 0000 00BF 
; 0000 00C0         if(!S_UP)
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
; 0000 00C1         {
; 0000 00C2                 delay_ms(125);
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
; 0000 00C3 
; 0000 00C4                 d_step = step;
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
; 0000 00C5 
; 0000 00C6                 if(step == 0)
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
; 0000 00C7                 {
; 0000 00C8                     step = 1;
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
; 0000 00C9                 }
; 0000 00CA                 else if(step == 1)
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0000 00CB                 {
; 0000 00CC                     step = 10;
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0000 00CD                 }
; 0000 00CE                 else if(step == 10)
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
; 0000 00CF                 {
; 0000 00D0                     step = 100;
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0000 00D1                 }
; 0000 00D2                 else if(step == 100)
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
; 0000 00D3                 {
; 0000 00D4                     step = 1000;
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
; 0000 00D5                 }
; 0000 00D6                 else if(step == 1000)
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
; 0000 00D7                 {
; 0000 00D8                     step = 10000;
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
; 0000 00D9                 }
; 0000 00DA                 else if(step == 10000)
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
; 0000 00DB                 {
; 0000 00DC                     step = 100000;
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
; 0000 00DD                 }
; 0000 00DE                 else if(step == 100000)
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
; 0000 00DF                 {
; 0000 00E0                     step = 1000000;
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
; 0000 00E1                 }
; 0000 00E2         }
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
; 0000 00E3 
; 0000 00E4         if(!S_DOWN)
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
; 0000 00E5         {
; 0000 00E6                 delay_ms(125);
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
; 0000 00E7 
; 0000 00E8                 d_step = step;
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
; 0000 00E9 
; 0000 00EA                 if(step == 1000000)
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
; 0000 00EB                 {
; 0000 00EC                     step = 100000;
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
; 0000 00ED                 }
; 0000 00EE                 else if(step == 100000)
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
; 0000 00EF                 {
; 0000 00F0                     step = 10000;
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
; 0000 00F1                 }
; 0000 00F2                 else if(step == 10000)
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
; 0000 00F3                 {
; 0000 00F4                     step = 1000;
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
; 0000 00F5                 }
; 0000 00F6                 else if(step == 1000)
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
; 0000 00F7                 {
; 0000 00F8                     step = 100;
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
; 0000 00F9                 }
; 0000 00FA                 else if(step == 100)
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
; 0000 00FB                 {
; 0000 00FC                     step = 10;
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
; 0000 00FD                 }
; 0000 00FE                 else if(step == 10)
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
; 0000 00FF                 {
; 0000 0100                     step = 1;
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
; 0000 0101                 }
; 0000 0102                 else if(step == 1)
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
; 0000 0103                 {
; 0000 0104                     step = 0;
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
; 0000 0105                 }
; 0000 0106         }
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
; 0000 0107 
; 0000 0108         if(d_freq != freq)
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
; 0000 0109         {
; 0000 010A                 dds_reset();
;PCODE: $00000211 VOL: 0
; 0000 010B                 send_data();
;PCODE: $00000212 VOL: 0
; 0000 010C                 display();
;PCODE: $00000213 VOL: 0
; 0000 010D                 d_freq = freq;
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
; 0000 010E         }
; 0000 010F 
; 0000 0110         if(d_step != step)
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
; 0000 0111         {
; 0000 0112                 display();
;PCODE: $00000221 VOL: 0
; 0000 0113                 d_step = step;
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
; 0000 0114         }
; 0000 0115 }
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;
;void main(void)
; 0000 0118 {
;PCODE: $00000229 VOL: 0
; 0000 0119         PORTA=0xFF;
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
; 0000 011A         DDRA=0x00;
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
; 0000 011B         PORTB=0x00;
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
; 0000 011C         DDRB=0xFF;
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
; 0000 011D         PORTC=0xFF;
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
; 0000 011E         DDRC=0x00;
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
; 0000 011F         PORTD=0x00;
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
; 0000 0120         DDRD=0xFF;
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
; 0000 0121 
; 0000 0122         ACSR=0x80;
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
; 0000 0123         SFIOR=0x00;
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
; 0000 0124 
; 0000 0125 // Alphanumeric LCD initialization
; 0000 0126 // Connections specified in the
; 0000 0127 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 0128 // RS - PORTD Bit 7
; 0000 0129 // RD - PORTD Bit 6
; 0000 012A // EN - PORTD Bit 5
; 0000 012B // D4 - PORTD Bit 4
; 0000 012C // D5 - PORTD Bit 3
; 0000 012D // D6 - PORTD Bit 2
; 0000 012E // D7 - PORTD Bit 1
; 0000 012F // Characters/line: 16
; 0000 0130 lcd_init(16);
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
; 0000 0131 dds_reset();
;PCODE: $00000241 VOL: 0
; 0000 0132 send_data();
;PCODE: $00000242 VOL: 0
; 0000 0133 display();
;PCODE: $00000243 VOL: 0
; 0000 0134 
; 0000 0135 while (1)
;PCODE: $00000244 VOL: 0
; 0000 0136       {
; 0000 0137       // Place your code here
; 0000 0138       tuning();
;PCODE: $00000245 VOL: 0
; 0000 0139 
; 0000 013A       }
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
; 0000 013B }
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
