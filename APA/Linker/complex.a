;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.0 Professional
;Automatic Program Generator
;© Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 6/3/2012
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega32
;Program type            : Application
;AVR Core Clock frequency: 12.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*****************************************************/
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;#include <delay.h>
;
;// Alphanumeric LCD Module functions
;#include <alcd.h>
;
;// Standard Input/Output functions
;#include <stdio.h>
;
;#ifndef _ADC_SEL_
;	#define _ADC_SEL_
;	#define SEL_1	PORTD.2
;	#define SEL_2	PORTD.3
;	#define SEL_3	PORTD.4
;#endif
;
;#ifndef _SEV_SEL_
;	#define _SEV_SEL_
;        #define SEV_1	PORTB.0
;        #define SEV_2	PORTB.1
;        #define SEV_3	PORTB.2
;        #define SEV_4	PORTB.3
;
;        #define en_1	PORTB.0
;	#define en_2 	PORTB.1
;	#define en_3	PORTB.2
;	#define en_4	PORTB.3
;
;        #define DIG_1	PORTB.4
;        #define DIG_2	PORTB.5
;        #define DIG_3	PORTB.6
;        #define DIG_4	PORTB.7
;#endif
;
;#ifndef PTT
;#define PTT	PORTA.4
;#endif
;
;#ifndef BELL
;#define BELL 	PORTC.3
;#endif
;
;#ifndef TOM_ENT
;#define	TOM_ENT	PINA.6
;#endif
;
;#ifndef	TOM_BACK
;#define TOM_BACK PINA.5
;#endif
;
;#pragma optsize+
;
;unsigned int timebase=0,count=0;
;
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 0051 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0052 	// Reinitialize Timer 0 value
; 0000 0053 	TCNT0=0x6A;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0054 	// Place your code here
; 0000 0055         count++;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0056         if(count==10000)
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0057         {
; 0000 0058         	count=0;
;PCODE: $00000017 VOL: 0
; 0000 0059                 timebase++;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 005A         	if(timebase>120) timebase=0;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 005B         }
;PCODE: $0000001F VOL: 0
; 0000 005C }
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;
;#define ADC_VREF_TYPE 0x20
;
;// Read the 8 most significant bits
;// of the AD conversion result
;unsigned char read_adc(unsigned char adc_input)
; 0000 0063 {
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0064 	ADMUX=adc_input | (ADC_VREF_TYPE & 0xff);
;	adc_input -> Y+0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0065 	// Delay needed for the stabilization of the ADC input voltage
; 0000 0066 	delay_us(10);
;PCODE: $00000029 VOL: 0
; 0000 0067 	// Start the AD conversion
; 0000 0068 	ADCSRA|=0x40;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0069 	// Wait for the AD conversion to complete
; 0000 006A 	while ((ADCSRA & 0x10)==0);
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 006B 	ADCSRA|=0x10;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 006C 	return ADCH;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 006D }
;PCODE: $00000037 VOL: 0
;
;
;#define OVR 3
;
;#define FRAMING_ERROR (1<<FE)
;#define PARITY_ERROR (1<<UPE)
;#define DATA_OVERRUN (1<<OVR)
;#define DATA_REGISTER_EMPTY (1<<UDRE)
;#define RX_COMPLETE (1<<RXC)
;
;// USART Receiver buffer
;#define RX_BUFFER_SIZE 8
;char rx_buffer[RX_BUFFER_SIZE];
;
;#if RX_BUFFER_SIZE<256
;unsigned char rx_wr_index,rx_rd_index,rx_counter;
;#else
;unsigned int rx_wr_index,rx_rd_index,rx_counter;
;#endif
;
;// This flag is set on USART Receiver buffer overflow
;bit rx_buffer_overflow;
;
;// USART Receiver interrupt service routine
;interrupt [USART_RXC] void usart_rx_isr(void)
; 0000 0087 {
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0088 char status,data;
; 0000 0089 status=UCSRA;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;	status -> R17
;	data -> R16
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 008A data=UDR;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 008B if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 008C    {
; 0000 008D    rx_buffer[rx_wr_index]=data;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 008E    if (++rx_wr_index == RX_BUFFER_SIZE) rx_wr_index=0;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 008F    if (++rx_counter == RX_BUFFER_SIZE)
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0090       {
; 0000 0091       rx_counter=0;
;PCODE: $00000051 VOL: 0
; 0000 0092       rx_buffer_overflow=1;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0093       };
;PCODE: $00000055 VOL: 0
; 0000 0094    };
;PCODE: $00000056 VOL: 0
; 0000 0095 }
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;
;#ifndef _DEBUG_TERMINAL_IO_
;// Get a character from the USART Receiver buffer
;#define _ALTERNATE_GETCHAR_
;#pragma used+
;char getchar(void)
; 0000 009C {
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 009D char data;
; 0000 009E while (rx_counter==0);
;PCODE: $0000005D VOL: 0
;	data -> R17
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 009F data=rx_buffer[rx_rd_index];
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 00A0 if (++rx_rd_index == RX_BUFFER_SIZE) rx_rd_index=0;
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 00A1 #asm("cli")
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
	cli
;PCODE: $0000006E VOL: 0
; 0000 00A2 --rx_counter;
;PCODE: $0000006F VOL: 0
; 0000 00A3 #asm("sei")
;PCODE: $00000070 VOL: 0
	sei
;PCODE: $00000071 VOL: 0
; 0000 00A4 return data;
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 00A5 }
;PCODE: $00000075 VOL: 0
;#pragma used-
;#endif
;
;// USART Transmitter buffer
;#define TX_BUFFER_SIZE 8
;char tx_buffer[TX_BUFFER_SIZE];
;
;#if TX_BUFFER_SIZE<256
;unsigned char tx_wr_index,tx_rd_index,tx_counter;
;#else
;unsigned int tx_wr_index,tx_rd_index,tx_counter;
;#endif
;
;// USART Transmitter interrupt service routine
;interrupt [USART_TXC] void usart_tx_isr(void)
; 0000 00B5 {
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 00B6 if (tx_counter)
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 00B7    {
; 0000 00B8    --tx_counter;
;PCODE: $0000007A VOL: 0
; 0000 00B9    UDR=tx_buffer[tx_rd_index];
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 00BA    if (++tx_rd_index == TX_BUFFER_SIZE) tx_rd_index=0;
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 00BB    };
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 00BC }
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;
;#ifndef _DEBUG_TERMINAL_IO_
;// Write a character to the USART Transmitter buffer
;#define _ALTERNATE_PUTCHAR_
;#pragma used+
;void putchar(char c)
; 0000 00C3 {
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 00C4 while (tx_counter == TX_BUFFER_SIZE);
;	c -> Y+0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 00C5 #asm("cli")
;PCODE: $00000092 VOL: 0
	cli
;PCODE: $00000093 VOL: 0
; 0000 00C6 if (tx_counter || ((UCSRA & DATA_REGISTER_EMPTY)==0))
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 00C7    {
; 0000 00C8    tx_buffer[tx_wr_index]=c;
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 00C9    if (++tx_wr_index == TX_BUFFER_SIZE) tx_wr_index=0;
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 00CA    ++tx_counter;
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 00CB    }
; 0000 00CC else
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 00CD    UDR=c;
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 00CE #asm("sei")
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
	sei
;PCODE: $000000AD VOL: 0
; 0000 00CF }
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;#pragma used-
;#endif
;
;// Declare your global variables here
;void menu(void);
;void navi_mode(void);
;void mode_manual(void);
;void mode_automatis(void);
;void run_manual(void);
;void run_automatis(void);
;void sev_seg(unsigned int value);
;void analyzing(void);
;void hitung_skor(void);
;void clear_sensor(void);
;void kirim_to_pc(void);
;
;char lcd[32],
;	no_menu=0,
;        detik;
;
;unsigned char adc_menu;
;unsigned int skor;
;
;unsigned char senbuff[25],
;	sen[25];
;
;void menu(void)
; 0000 00EB {
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 00EC 	lcd_clear();
;PCODE: $000000B3 VOL: 0
; 0000 00ED         for(;;)
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 00EE         {
; 0000 00EF         	adc_menu = read_adc(7);
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0000 00F0                 if(no_menu==0)	{navi_mode();}
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 00F1                 else if(no_menu==1)	{run_manual();}
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 00F2                 else if(no_menu==2)	{run_automatis();}
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 00F3         }
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0000 00F4 }
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;
;void navi_mode(void)
; 0000 00F7 {
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 00F8         adc_menu = read_adc(7);
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 00F9         if(adc_menu < 128)
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 00FA         {
; 0000 00FB         	mode_manual();
;PCODE: $000000DB VOL: 0
; 0000 00FC         }
; 0000 00FD         else if(adc_menu > 128)
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 00FE         {
; 0000 00FF         	mode_automatis();
;PCODE: $000000E1 VOL: 0
; 0000 0100         }
; 0000 0101 }
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;
;void mode_manual(void)
; 0000 0104 {
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0000 0105   	lcd_clear();
;PCODE: $000000E8 VOL: 0
; 0000 0106         lcd_gotoxy(0,0);
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0000 0107         	// 0123456789abcdef
; 0000 0108         lcd_putsf("Mode Manual  <==");
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
; 0000 0109       	lcd_gotoxy(0,1);
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0000 010A         lcd_putsf("Mode Automat    ");
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0000 010B         delay_ms(100);
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0000 010C         if(!TOM_ENT)
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0000 010D         {
; 0000 010E         	delay_ms(125);
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
; 0000 010F                 no_menu = 1;
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 0110         }
; 0000 0111 }
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;
;void mode_automatis(void)
; 0000 0114 {
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0000 0115         lcd_clear();
;PCODE: $0000010B VOL: 0
; 0000 0116         lcd_gotoxy(0,0);
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
; 0000 0117         	// 0123456789abcdef
; 0000 0118         lcd_putsf("Mode Manual     ");
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0000 0119       	lcd_gotoxy(0,1);
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 011A         lcd_putsf("Mode Automat <==");
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
; 0000 011B         delay_ms(100);
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0000 011C         if(!TOM_ENT)
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0000 011D         {
; 0000 011E         	delay_ms(125);
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0000 011F                 no_menu = 2;
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
; 0000 0120         }
; 0000 0121 }
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;
;void run_manual(void)
; 0000 0124 {
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
; 0000 0125                 lagi:
;PCODE: $0000012E VOL: 0
; 0000 0126         lcd_clear();
;PCODE: $0000012F VOL: 0
; 0000 0127         lcd_gotoxy(0,0);
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
; 0000 0128         lcd_putsf("RUN ???");
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0000 0129         lcd_gotoxy(0,1);
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 012A         lcd_putsf("ENTER AGAIN..");
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
; 0000 012B         delay_ms(250);
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0000 012C         if(!TOM_ENT)
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
; 0000 012D         {
; 0000 012E         	delay_ms(250);
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0000 012F                 goto run_manual;
;PCODE: $0000014B VOL: 0
; 0000 0130         }
; 0000 0131         if(!TOM_BACK)
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
; 0000 0132         {
; 0000 0133         	no_menu=0;
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
; 0000 0134         	goto exit;
;PCODE: $00000152 VOL: 0
; 0000 0135         }
; 0000 0136         	goto lagi;
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
; 0000 0137                 run_manual:
;PCODE: $00000155 VOL: 0
; 0000 0138 
; 0000 0139        	lcd_clear();
;PCODE: $00000156 VOL: 0
; 0000 013A         lcd_putsf("Hitung mundur");
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
; 0000 013B 
; 0000 013C         timebase = 0;
;PCODE: $0000015B VOL: 0
; 0000 013D         count=0;
;PCODE: $0000015C VOL: 0
; 0000 013E 
; 0000 013F         do
;PCODE: $0000015D VOL: 0
; 0000 0140         {
; 0000 0141         	detik = 120 - timebase;
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0000 0142                 sev_seg(detik);
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
; 0000 0143                 lcd_clear();
;PCODE: $00000165 VOL: 0
; 0000 0144                 sprintf(lcd,"waktu = %d",detik);
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
; 0000 0145                 lcd_puts(lcd);
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
; 0000 0146                 if(!TOM_ENT) goto keluar;
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
; 0000 0147         }
;PCODE: $00000179 VOL: 0
; 0000 0148         while(detik>0);
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
; 0000 0149         keluar:
;PCODE: $00000180 VOL: 0
; 0000 014A         sev_seg(0);
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
; 0000 014B         delay_ms(400);
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
; 0000 014C 
; 0000 014D         BELL = 1;
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
; 0000 014E         lcd_clear();
;PCODE: $00000189 VOL: 0
; 0000 014F         lcd_putsf("WAKTU HABIS !!");
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0000 0150         delay_ms(4000);
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
; 0000 0151         BELL = 0;
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
; 0000 0152 
; 0000 0153         while(TOM_ENT);
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
; 0000 0154         lcd_clear();
;PCODE: $00000199 VOL: 0
; 0000 0155         lcd_putsf("ANALYZING");
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
; 0000 0156         delay_ms(500);
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
; 0000 0157 
; 0000 0158         timebase=0;
;PCODE: $000001A1 VOL: 0
; 0000 0159         count=0;
;PCODE: $000001A2 VOL: 0
; 0000 015A         PTT = 1;
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
; 0000 015B         delay_ms(250);
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
; 0000 015C         clear_sensor();
;PCODE: $000001A8 VOL: 0
; 0000 015D 
; 0000 015E         do
;PCODE: $000001A9 VOL: 0
; 0000 015F         {
; 0000 0160         	detik = 5 - timebase;
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
; 0000 0161                 analyzing();
;PCODE: $000001AD VOL: 0
; 0000 0162         }
; 0000 0163 
; 0000 0164         while(detik>0);
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
; 0000 0165 
; 0000 0166         PTT = 0;
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
; 0000 0167         delay_ms(500);
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
; 0000 0168         hitung_skor();
;PCODE: $000001B9 VOL: 0
; 0000 0169 
; 0000 016A         lcd_clear();
;PCODE: $000001BA VOL: 0
; 0000 016B 
; 0000 016C         lcd_gotoxy(0,0);
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
; 0000 016D         sprintf(lcd,"%d %d %d %d",sen[0],sen[1],sen[2],sen[3]);
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
; 0000 016E         lcd_puts(lcd);
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
; 0000 016F         lcd_gotoxy(0,1);
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
; 0000 0170         sprintf(lcd,"%d %d %d %d",sen[4],sen[5],sen[6],sen[7]);
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
; 0000 0171         lcd_puts(lcd);
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
; 0000 0172         delay_ms(500);
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
; 0000 0173 
; 0000 0174         lcd_clear();
;PCODE: $000001FF VOL: 0
; 0000 0175         lcd_gotoxy(0,0);
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
; 0000 0176         sprintf(lcd,"%d %d %d %d",sen[8],sen[9],sen[10],sen[11]);
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
; 0000 0177         lcd_puts(lcd);
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
; 0000 0178         lcd_gotoxy(0,1);
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
; 0000 0179         sprintf(lcd,"%d %d %d %d",sen[12],sen[13],sen[14],sen[15]);
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
; 0000 017A         lcd_puts(lcd);
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
; 0000 017B         delay_ms(500);
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
; 0000 017C 
; 0000 017D         lcd_clear();
;PCODE: $00000245 VOL: 0
; 0000 017E         lcd_gotoxy(0,0);
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
; 0000 017F         sprintf(lcd,"%d %d %d %d",sen[16],sen[17],sen[18],sen[19]);
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
; 0000 0180         lcd_puts(lcd);
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
; 0000 0181         lcd_gotoxy(0,1);
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
; 0000 0182         sprintf(lcd,"%d %d %d %d",sen[20],sen[21],sen[22],sen[23]);
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
; 0000 0183         lcd_puts(lcd);
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
; 0000 0184         delay_ms(500);
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
; 0000 0185 
; 0000 0186         lcd_clear();
;PCODE: $0000028B VOL: 0
; 0000 0187         lcd_gotoxy(0,0);
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
; 0000 0188         sprintf(lcd,"%d",sen[24]);
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
; 0000 0189         lcd_puts(lcd);
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
; 0000 018A         lcd_gotoxy(0,1);
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
; 0000 018B         sprintf(lcd,"%d",skor);
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
; 0000 018C         lcd_puts(lcd);
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
; 0000 018D         delay_ms(500);
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
; 0000 018E 
; 0000 018F         //kirim_to_pc();
; 0000 0190 
; 0000 0191         do
;PCODE: $000002B8 VOL: 0
; 0000 0192         {
; 0000 0193         	sev_seg(skor);
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
; 0000 0194                 lcd_clear();
;PCODE: $000002BC VOL: 0
; 0000 0195         	lcd_putsf("COMPLETE..!!");
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
; 0000 0196         }
; 0000 0197         while(TOM_ENT);
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
; 0000 0198 
; 0000 0199         delay_ms(100);
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
; 0000 019A         no_menu=0;
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
; 0000 019B                 exit:
;PCODE: $000002CC VOL: 0
; 0000 019C }
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
;
;void run_automatis(void)
; 0000 019F {
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
; 0000 01A0 		autom:
;PCODE: $000002D1 VOL: 0
; 0000 01A1         lcd_clear();
;PCODE: $000002D2 VOL: 0
; 0000 01A2         lcd_gotoxy(0,0);
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
; 0000 01A3         lcd_putsf("RUN ???");
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
; 0000 01A4         lcd_gotoxy(0,1);
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
; 0000 01A5         lcd_putsf("ENTER AGAIN..");
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
; 0000 01A6         delay_ms(250);
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
; 0000 01A7         if(!TOM_ENT)
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
; 0000 01A8         {
; 0000 01A9         	delay_ms(125);
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
; 0000 01AA                 goto run_autom;
;PCODE: $000002EE VOL: 0
; 0000 01AB         }
; 0000 01AC         if(!TOM_BACK)
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
; 0000 01AD         {
; 0000 01AE         	no_menu=0;
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
; 0000 01AF         	goto exit;
;PCODE: $000002F5 VOL: 0
; 0000 01B0         }
; 0000 01B1         	goto autom;
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
; 0000 01B2        	run_autom:
;PCODE: $000002F8 VOL: 0
; 0000 01B3         lcd_clear();
;PCODE: $000002F9 VOL: 0
; 0000 01B4         lcd_puts("Wait Command");
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
; 0000 01B5 
; 0000 01B6         while(getchar()!='a');
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
; 0000 01B7 
; 0000 01B8         lcd_clear();
;PCODE: $00000304 VOL: 0
; 0000 01B9         lcd_putsf("Hitung mundur");
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
; 0000 01BA 
; 0000 01BB         timebase = 0;
;PCODE: $00000309 VOL: 0
; 0000 01BC         count=0;
;PCODE: $0000030A VOL: 0
; 0000 01BD 
; 0000 01BE         do
;PCODE: $0000030B VOL: 0
; 0000 01BF         {
; 0000 01C0         	detik = 120 - timebase;
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
; 0000 01C1                 sev_seg(detik);
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
; 0000 01C2                 lcd_clear();
;PCODE: $00000313 VOL: 0
; 0000 01C3                 sprintf(lcd,"waktu = %d",detik);
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
; 0000 01C4                 lcd_puts(lcd);
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
; 0000 01C5                 if(!TOM_ENT) goto lanjut;
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
; 0000 01C6         }
;PCODE: $00000327 VOL: 0
; 0000 01C7         while(detik>0);
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
; 0000 01C8 
; 0000 01C9         BELL = 1;
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
; 0000 01CA         lanjut:
;PCODE: $00000330 VOL: 0
; 0000 01CB         lcd_clear();
;PCODE: $00000331 VOL: 0
; 0000 01CC         lcd_putsf("WAKTU HABIS !!");
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
; 0000 01CD         delay_ms(4000);
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
;PCODE: $00000338 VOL: 0
; 0000 01CE         BELL = 0;
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
; 0000 01CF 
; 0000 01D0         while(getchar()!='b');
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
; 0000 01D1 
; 0000 01D2         lcd_clear();
;PCODE: $00000341 VOL: 0
; 0000 01D3         lcd_putsf("ANALYZING");
;PCODE: $00000342 VOL: 0
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
; 0000 01D4 
; 0000 01D5         timebase=0;
;PCODE: $00000346 VOL: 0
; 0000 01D6         count=0;
;PCODE: $00000347 VOL: 0
; 0000 01D7         PTT = 1;
;PCODE: $00000348 VOL: 0
;PCODE: $00000349 VOL: 0
; 0000 01D8         delay_ms(250);
;PCODE: $0000034A VOL: 0
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
; 0000 01D9         clear_sensor();
;PCODE: $0000034D VOL: 0
; 0000 01DA 
; 0000 01DB         do
;PCODE: $0000034E VOL: 0
; 0000 01DC         {
; 0000 01DD         	detik = 5 - timebase;
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
; 0000 01DE                 analyzing();
;PCODE: $00000352 VOL: 0
; 0000 01DF         }
; 0000 01E0         while(detik>0);
;PCODE: $00000353 VOL: 0
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
; 0000 01E1 
; 0000 01E2         PTT = 0;
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
; 0000 01E3         delay_ms(500);
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
; 0000 01E4         hitung_skor();
;PCODE: $0000035E VOL: 0
; 0000 01E5 
; 0000 01E6         lcd_clear();
;PCODE: $0000035F VOL: 0
; 0000 01E7 
; 0000 01E8         lcd_gotoxy(0,0);
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
; 0000 01E9         sprintf(lcd,"%d %d %d %d",sen[0],sen[1],sen[2],sen[3]);
;PCODE: $00000365 VOL: 0
;PCODE: $00000366 VOL: 0
;PCODE: $00000367 VOL: 0
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
;PCODE: $00000375 VOL: 0
;PCODE: $00000376 VOL: 0
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
;PCODE: $0000037B VOL: 0
;PCODE: $0000037C VOL: 0
; 0000 01EA         lcd_gotoxy(0,1);
;PCODE: $0000037D VOL: 0
;PCODE: $0000037E VOL: 0
;PCODE: $0000037F VOL: 0
;PCODE: $00000380 VOL: 0
;PCODE: $00000381 VOL: 0
; 0000 01EB         sprintf(lcd,"%d %d %d %d",sen[4],sen[5],sen[6],sen[7]);
;PCODE: $00000382 VOL: 0
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
;PCODE: $00000387 VOL: 0
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
;PCODE: $0000038A VOL: 0
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
;PCODE: $00000396 VOL: 0
;PCODE: $00000397 VOL: 0
;PCODE: $00000398 VOL: 0
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
; 0000 01EC         delay_ms(300);
;PCODE: $0000039B VOL: 0
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
; 0000 01ED 
; 0000 01EE         lcd_gotoxy(0,0);
;PCODE: $0000039E VOL: 0
;PCODE: $0000039F VOL: 0
;PCODE: $000003A0 VOL: 0
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
; 0000 01EF         sprintf(lcd,"%d %d %d %d",sen[8],sen[9],sen[10],sen[11]);
;PCODE: $000003A3 VOL: 0
;PCODE: $000003A4 VOL: 0
;PCODE: $000003A5 VOL: 0
;PCODE: $000003A6 VOL: 0
;PCODE: $000003A7 VOL: 0
;PCODE: $000003A8 VOL: 0
;PCODE: $000003A9 VOL: 0
;PCODE: $000003AA VOL: 0
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
;PCODE: $000003AD VOL: 0
;PCODE: $000003AE VOL: 0
;PCODE: $000003AF VOL: 0
;PCODE: $000003B0 VOL: 0
;PCODE: $000003B1 VOL: 0
;PCODE: $000003B2 VOL: 0
;PCODE: $000003B3 VOL: 0
;PCODE: $000003B4 VOL: 0
;PCODE: $000003B5 VOL: 0
;PCODE: $000003B6 VOL: 0
;PCODE: $000003B7 VOL: 0
;PCODE: $000003B8 VOL: 0
;PCODE: $000003B9 VOL: 0
;PCODE: $000003BA VOL: 0
;PCODE: $000003BB VOL: 0
; 0000 01F0         lcd_gotoxy(0,1);
;PCODE: $000003BC VOL: 0
;PCODE: $000003BD VOL: 0
;PCODE: $000003BE VOL: 0
;PCODE: $000003BF VOL: 0
;PCODE: $000003C0 VOL: 0
; 0000 01F1         sprintf(lcd,"%d %d %d %d",sen[12],sen[13],sen[14],sen[15]);
;PCODE: $000003C1 VOL: 0
;PCODE: $000003C2 VOL: 0
;PCODE: $000003C3 VOL: 0
;PCODE: $000003C4 VOL: 0
;PCODE: $000003C5 VOL: 0
;PCODE: $000003C6 VOL: 0
;PCODE: $000003C7 VOL: 0
;PCODE: $000003C8 VOL: 0
;PCODE: $000003C9 VOL: 0
;PCODE: $000003CA VOL: 0
;PCODE: $000003CB VOL: 0
;PCODE: $000003CC VOL: 0
;PCODE: $000003CD VOL: 0
;PCODE: $000003CE VOL: 0
;PCODE: $000003CF VOL: 0
;PCODE: $000003D0 VOL: 0
;PCODE: $000003D1 VOL: 0
;PCODE: $000003D2 VOL: 0
;PCODE: $000003D3 VOL: 0
;PCODE: $000003D4 VOL: 0
;PCODE: $000003D5 VOL: 0
;PCODE: $000003D6 VOL: 0
;PCODE: $000003D7 VOL: 0
;PCODE: $000003D8 VOL: 0
;PCODE: $000003D9 VOL: 0
; 0000 01F2         delay_ms(300);
;PCODE: $000003DA VOL: 0
;PCODE: $000003DB VOL: 0
;PCODE: $000003DC VOL: 0
; 0000 01F3 
; 0000 01F4         lcd_gotoxy(0,0);
;PCODE: $000003DD VOL: 0
;PCODE: $000003DE VOL: 0
;PCODE: $000003DF VOL: 0
;PCODE: $000003E0 VOL: 0
;PCODE: $000003E1 VOL: 0
; 0000 01F5         sprintf(lcd,"%d %d %d %d",sen[16],sen[17],sen[18],sen[19]);
;PCODE: $000003E2 VOL: 0
;PCODE: $000003E3 VOL: 0
;PCODE: $000003E4 VOL: 0
;PCODE: $000003E5 VOL: 0
;PCODE: $000003E6 VOL: 0
;PCODE: $000003E7 VOL: 0
;PCODE: $000003E8 VOL: 0
;PCODE: $000003E9 VOL: 0
;PCODE: $000003EA VOL: 0
;PCODE: $000003EB VOL: 0
;PCODE: $000003EC VOL: 0
;PCODE: $000003ED VOL: 0
;PCODE: $000003EE VOL: 0
;PCODE: $000003EF VOL: 0
;PCODE: $000003F0 VOL: 0
;PCODE: $000003F1 VOL: 0
;PCODE: $000003F2 VOL: 0
;PCODE: $000003F3 VOL: 0
;PCODE: $000003F4 VOL: 0
;PCODE: $000003F5 VOL: 0
;PCODE: $000003F6 VOL: 0
;PCODE: $000003F7 VOL: 0
;PCODE: $000003F8 VOL: 0
;PCODE: $000003F9 VOL: 0
;PCODE: $000003FA VOL: 0
; 0000 01F6         lcd_gotoxy(0,1);
;PCODE: $000003FB VOL: 0
;PCODE: $000003FC VOL: 0
;PCODE: $000003FD VOL: 0
;PCODE: $000003FE VOL: 0
;PCODE: $000003FF VOL: 0
; 0000 01F7         sprintf(lcd,"%d %d %d %d",sen[20],sen[21],sen[22],sen[23]);
;PCODE: $00000400 VOL: 0
;PCODE: $00000401 VOL: 0
;PCODE: $00000402 VOL: 0
;PCODE: $00000403 VOL: 0
;PCODE: $00000404 VOL: 0
;PCODE: $00000405 VOL: 0
;PCODE: $00000406 VOL: 0
;PCODE: $00000407 VOL: 0
;PCODE: $00000408 VOL: 0
;PCODE: $00000409 VOL: 0
;PCODE: $0000040A VOL: 0
;PCODE: $0000040B VOL: 0
;PCODE: $0000040C VOL: 0
;PCODE: $0000040D VOL: 0
;PCODE: $0000040E VOL: 0
;PCODE: $0000040F VOL: 0
;PCODE: $00000410 VOL: 0
;PCODE: $00000411 VOL: 0
;PCODE: $00000412 VOL: 0
;PCODE: $00000413 VOL: 0
;PCODE: $00000414 VOL: 0
;PCODE: $00000415 VOL: 0
;PCODE: $00000416 VOL: 0
;PCODE: $00000417 VOL: 0
;PCODE: $00000418 VOL: 0
; 0000 01F8         delay_ms(300);
;PCODE: $00000419 VOL: 0
;PCODE: $0000041A VOL: 0
;PCODE: $0000041B VOL: 0
; 0000 01F9 
; 0000 01FA         lcd_gotoxy(0,0);
;PCODE: $0000041C VOL: 0
;PCODE: $0000041D VOL: 0
;PCODE: $0000041E VOL: 0
;PCODE: $0000041F VOL: 0
;PCODE: $00000420 VOL: 0
; 0000 01FB         sprintf(lcd,"%d",sen[24]);
;PCODE: $00000421 VOL: 0
;PCODE: $00000422 VOL: 0
;PCODE: $00000423 VOL: 0
;PCODE: $00000424 VOL: 0
;PCODE: $00000425 VOL: 0
;PCODE: $00000426 VOL: 0
;PCODE: $00000427 VOL: 0
;PCODE: $00000428 VOL: 0
;PCODE: $00000429 VOL: 0
;PCODE: $0000042A VOL: 0
;PCODE: $0000042B VOL: 0
;PCODE: $0000042C VOL: 0
;PCODE: $0000042D VOL: 0
; 0000 01FC         lcd_gotoxy(0,1);
;PCODE: $0000042E VOL: 0
;PCODE: $0000042F VOL: 0
;PCODE: $00000430 VOL: 0
;PCODE: $00000431 VOL: 0
;PCODE: $00000432 VOL: 0
; 0000 01FD         sprintf(lcd,"%d",skor);
;PCODE: $00000433 VOL: 0
;PCODE: $00000434 VOL: 0
;PCODE: $00000435 VOL: 0
;PCODE: $00000436 VOL: 0
;PCODE: $00000437 VOL: 0
;PCODE: $00000438 VOL: 0
;PCODE: $00000439 VOL: 0
;PCODE: $0000043A VOL: 0
;PCODE: $0000043B VOL: 0
;PCODE: $0000043C VOL: 0
;PCODE: $0000043D VOL: 0
;PCODE: $0000043E VOL: 0
; 0000 01FE         delay_ms(300);
;PCODE: $0000043F VOL: 0
;PCODE: $00000440 VOL: 0
;PCODE: $00000441 VOL: 0
; 0000 01FF 
; 0000 0200         kirim_to_pc();
;PCODE: $00000442 VOL: 0
; 0000 0201 
; 0000 0202         do
;PCODE: $00000443 VOL: 0
; 0000 0203         {
; 0000 0204         	sev_seg(skor);
;PCODE: $00000444 VOL: 0
;PCODE: $00000445 VOL: 0
;PCODE: $00000446 VOL: 0
; 0000 0205                 lcd_clear();
;PCODE: $00000447 VOL: 0
; 0000 0206         	lcd_putsf("COMPLETE..!!");
;PCODE: $00000448 VOL: 0
;PCODE: $00000449 VOL: 0
;PCODE: $0000044A VOL: 0
;PCODE: $0000044B VOL: 0
; 0000 0207         }
; 0000 0208         while(getchar()!='c');
;PCODE: $0000044C VOL: 0
;PCODE: $0000044D VOL: 0
;PCODE: $0000044E VOL: 0
;PCODE: $0000044F VOL: 0
;PCODE: $00000450 VOL: 0
;PCODE: $00000451 VOL: 0
; 0000 0209 
; 0000 020A         goto run_autom;
;PCODE: $00000452 VOL: 0
; 0000 020B         exit:
;PCODE: $00000453 VOL: 0
; 0000 020C }
;PCODE: $00000454 VOL: 0
;PCODE: $00000455 VOL: 0

	.DSEG
_0x46:
	.BYTE 0xD
;
;void sev_seg(unsigned int value)
; 0000 020F {

	.CSEG
;PCODE: $00000456 VOL: 0
;PCODE: $00000457 VOL: 0
; 0000 0210 	char 	ribuan,
; 0000 0211         	ratusan,
; 0000 0212                 puluhan,
; 0000 0213                 satuan;
; 0000 0214 
; 0000 0215         satuan=value%10;
;PCODE: $00000458 VOL: 0
;	value -> Y+4
;	ribuan -> R17
;	ratusan -> R16
;	puluhan -> R19
;	satuan -> R18
;PCODE: $00000459 VOL: 0
;PCODE: $0000045A VOL: 0
;PCODE: $0000045B VOL: 0
;PCODE: $0000045C VOL: 0
; 0000 0216         value/=10;
;PCODE: $0000045D VOL: 0
;PCODE: $0000045E VOL: 0
;PCODE: $0000045F VOL: 0
;PCODE: $00000460 VOL: 0
; 0000 0217         puluhan=value%10;
;PCODE: $00000461 VOL: 0
;PCODE: $00000462 VOL: 0
;PCODE: $00000463 VOL: 0
;PCODE: $00000464 VOL: 0
; 0000 0218         value/=10;
;PCODE: $00000465 VOL: 0
;PCODE: $00000466 VOL: 0
;PCODE: $00000467 VOL: 0
;PCODE: $00000468 VOL: 0
; 0000 0219         ratusan=value%10;
;PCODE: $00000469 VOL: 0
;PCODE: $0000046A VOL: 0
;PCODE: $0000046B VOL: 0
;PCODE: $0000046C VOL: 0
; 0000 021A         value/=10;
;PCODE: $0000046D VOL: 0
;PCODE: $0000046E VOL: 0
;PCODE: $0000046F VOL: 0
;PCODE: $00000470 VOL: 0
; 0000 021B         ribuan=value%10;
;PCODE: $00000471 VOL: 0
;PCODE: $00000472 VOL: 0
;PCODE: $00000473 VOL: 0
;PCODE: $00000474 VOL: 0
; 0000 021C 
; 0000 021D 	PORTB = 0;
;PCODE: $00000475 VOL: 0
;PCODE: $00000476 VOL: 0
; 0000 021E         en_1 = 1;
;PCODE: $00000477 VOL: 0
;PCODE: $00000478 VOL: 0
; 0000 021F         en_2 = 0;
;PCODE: $00000479 VOL: 0
;PCODE: $0000047A VOL: 0
; 0000 0220         en_3 = 0;
;PCODE: $0000047B VOL: 0
;PCODE: $0000047C VOL: 0
; 0000 0221         en_4 = 0;
;PCODE: $0000047D VOL: 0
;PCODE: $0000047E VOL: 0
; 0000 0222         PORTB |= (ribuan << 4);
;PCODE: $0000047F VOL: 0
;PCODE: $00000480 VOL: 0
;PCODE: $00000481 VOL: 0
;PCODE: $00000482 VOL: 0
;PCODE: $00000483 VOL: 0
;PCODE: $00000484 VOL: 0
; 0000 0223         delay_ms(5);
;PCODE: $00000485 VOL: 0
;PCODE: $00000486 VOL: 0
;PCODE: $00000487 VOL: 0
; 0000 0224 
; 0000 0225         PORTB = 0;
;PCODE: $00000488 VOL: 0
;PCODE: $00000489 VOL: 0
; 0000 0226         en_1 = 0;
;PCODE: $0000048A VOL: 0
;PCODE: $0000048B VOL: 0
; 0000 0227         en_2 = 1;
;PCODE: $0000048C VOL: 0
;PCODE: $0000048D VOL: 0
; 0000 0228         en_3 = 0;
;PCODE: $0000048E VOL: 0
;PCODE: $0000048F VOL: 0
; 0000 0229         en_4 = 0;
;PCODE: $00000490 VOL: 0
;PCODE: $00000491 VOL: 0
; 0000 022A         PORTB |= (ratusan << 4);
;PCODE: $00000492 VOL: 0
;PCODE: $00000493 VOL: 0
;PCODE: $00000494 VOL: 0
;PCODE: $00000495 VOL: 0
;PCODE: $00000496 VOL: 0
;PCODE: $00000497 VOL: 0
; 0000 022B         delay_ms(5);
;PCODE: $00000498 VOL: 0
;PCODE: $00000499 VOL: 0
;PCODE: $0000049A VOL: 0
; 0000 022C 
; 0000 022D 	PORTB = 0;
;PCODE: $0000049B VOL: 0
;PCODE: $0000049C VOL: 0
; 0000 022E         en_1 = 0;
;PCODE: $0000049D VOL: 0
;PCODE: $0000049E VOL: 0
; 0000 022F         en_2 = 0;
;PCODE: $0000049F VOL: 0
;PCODE: $000004A0 VOL: 0
; 0000 0230         en_3 = 1;
;PCODE: $000004A1 VOL: 0
;PCODE: $000004A2 VOL: 0
; 0000 0231         en_4 = 0;
;PCODE: $000004A3 VOL: 0
;PCODE: $000004A4 VOL: 0
; 0000 0232         PORTB |= (puluhan << 4);
;PCODE: $000004A5 VOL: 0
;PCODE: $000004A6 VOL: 0
;PCODE: $000004A7 VOL: 0
;PCODE: $000004A8 VOL: 0
;PCODE: $000004A9 VOL: 0
;PCODE: $000004AA VOL: 0
; 0000 0233         delay_ms(5);
;PCODE: $000004AB VOL: 0
;PCODE: $000004AC VOL: 0
;PCODE: $000004AD VOL: 0
; 0000 0234 
; 0000 0235         PORTB = 0;
;PCODE: $000004AE VOL: 0
;PCODE: $000004AF VOL: 0
; 0000 0236         en_1 = 0;
;PCODE: $000004B0 VOL: 0
;PCODE: $000004B1 VOL: 0
; 0000 0237         en_2 = 0;
;PCODE: $000004B2 VOL: 0
;PCODE: $000004B3 VOL: 0
; 0000 0238         en_3 = 0;
;PCODE: $000004B4 VOL: 0
;PCODE: $000004B5 VOL: 0
; 0000 0239         en_4 = 1;
;PCODE: $000004B6 VOL: 0
;PCODE: $000004B7 VOL: 0
; 0000 023A         PORTB |= (satuan << 4);
;PCODE: $000004B8 VOL: 0
;PCODE: $000004B9 VOL: 0
;PCODE: $000004BA VOL: 0
;PCODE: $000004BB VOL: 0
;PCODE: $000004BC VOL: 0
;PCODE: $000004BD VOL: 0
; 0000 023B         delay_ms(5);
;PCODE: $000004BE VOL: 0
;PCODE: $000004BF VOL: 0
;PCODE: $000004C0 VOL: 0
; 0000 023C }
;PCODE: $000004C1 VOL: 0
;PCODE: $000004C2 VOL: 0
;PCODE: $000004C3 VOL: 0
;PCODE: $000004C4 VOL: 0
;
;void analyzing(void)
; 0000 023F {
;PCODE: $000004C5 VOL: 0
;PCODE: $000004C6 VOL: 0
; 0000 0240 	char i;
; 0000 0241 
; 0000 0242         SEL_1 = 0;
;PCODE: $000004C7 VOL: 0
;	i -> R17
;PCODE: $000004C8 VOL: 0
;PCODE: $000004C9 VOL: 0
; 0000 0243         SEL_2 = 0;
;PCODE: $000004CA VOL: 0
;PCODE: $000004CB VOL: 0
; 0000 0244         SEL_3 = 0;
;PCODE: $000004CC VOL: 0
;PCODE: $000004CD VOL: 0
; 0000 0245         delay_ms(10);
;PCODE: $000004CE VOL: 0
;PCODE: $000004CF VOL: 0
;PCODE: $000004D0 VOL: 0
; 0000 0246         for(i=0;i<3;i++)
;PCODE: $000004D1 VOL: 0
;PCODE: $000004D2 VOL: 0
;PCODE: $000004D3 VOL: 0
;PCODE: $000004D4 VOL: 0
;PCODE: $000004D5 VOL: 0
;PCODE: $000004D6 VOL: 0
;PCODE: $000004D7 VOL: 0
;PCODE: $000004D8 VOL: 0
;PCODE: $000004D9 VOL: 0
; 0000 0247         {
; 0000 0248         	senbuff[i] = read_adc(i);
;PCODE: $000004DA VOL: 0
;PCODE: $000004DB VOL: 0
;PCODE: $000004DC VOL: 0
;PCODE: $000004DD VOL: 0
;PCODE: $000004DE VOL: 0
;PCODE: $000004DF VOL: 0
;PCODE: $000004E0 VOL: 0
;PCODE: $000004E1 VOL: 0
; 0000 0249                 if(senbuff[i]>sen[i]) sen[i]=senbuff[i];
;PCODE: $000004E2 VOL: 0
;PCODE: $000004E3 VOL: 0
;PCODE: $000004E4 VOL: 0
;PCODE: $000004E5 VOL: 0
;PCODE: $000004E6 VOL: 0
;PCODE: $000004E7 VOL: 0
;PCODE: $000004E8 VOL: 0
;PCODE: $000004E9 VOL: 0
;PCODE: $000004EA VOL: 0
;PCODE: $000004EB VOL: 0
;PCODE: $000004EC VOL: 0
;PCODE: $000004ED VOL: 0
;PCODE: $000004EE VOL: 0
;PCODE: $000004EF VOL: 0
;PCODE: $000004F0 VOL: 0
;PCODE: $000004F1 VOL: 0
;PCODE: $000004F2 VOL: 0
;PCODE: $000004F3 VOL: 0
; 0000 024A         }
;PCODE: $000004F4 VOL: 0
;PCODE: $000004F5 VOL: 0
;PCODE: $000004F6 VOL: 0
;PCODE: $000004F7 VOL: 0
;PCODE: $000004F8 VOL: 0
;PCODE: $000004F9 VOL: 0
; 0000 024B 
; 0000 024C         SEL_1 = 1;
;PCODE: $000004FA VOL: 0
;PCODE: $000004FB VOL: 0
; 0000 024D         SEL_2 = 0;
;PCODE: $000004FC VOL: 0
;PCODE: $000004FD VOL: 0
; 0000 024E         SEL_3 = 0;
;PCODE: $000004FE VOL: 0
;PCODE: $000004FF VOL: 0
; 0000 024F         delay_ms(10);
;PCODE: $00000500 VOL: 0
;PCODE: $00000501 VOL: 0
;PCODE: $00000502 VOL: 0
; 0000 0250         for(i=0;i<3;i++)
;PCODE: $00000503 VOL: 0
;PCODE: $00000504 VOL: 0
;PCODE: $00000505 VOL: 0
;PCODE: $00000506 VOL: 0
;PCODE: $00000507 VOL: 0
;PCODE: $00000508 VOL: 0
;PCODE: $00000509 VOL: 0
;PCODE: $0000050A VOL: 0
;PCODE: $0000050B VOL: 0
; 0000 0251         {
; 0000 0252         	senbuff[i+3] = read_adc(i);
;PCODE: $0000050C VOL: 0
;PCODE: $0000050D VOL: 0
;PCODE: $0000050E VOL: 0
;PCODE: $0000050F VOL: 0
;PCODE: $00000510 VOL: 0
;PCODE: $00000511 VOL: 0
;PCODE: $00000512 VOL: 0
;PCODE: $00000513 VOL: 0
;PCODE: $00000514 VOL: 0
; 0000 0253                 if(senbuff[i+3]>sen[i+3]) sen[i+3]=senbuff[i+3];
;PCODE: $00000515 VOL: 0
;PCODE: $00000516 VOL: 0
;PCODE: $00000517 VOL: 0
;PCODE: $00000518 VOL: 0
;PCODE: $00000519 VOL: 0
;PCODE: $0000051A VOL: 0
;PCODE: $0000051B VOL: 0
;PCODE: $0000051C VOL: 0
;PCODE: $0000051D VOL: 0
;PCODE: $0000051E VOL: 0
;PCODE: $0000051F VOL: 0
;PCODE: $00000520 VOL: 0
;PCODE: $00000521 VOL: 0
;PCODE: $00000522 VOL: 0
;PCODE: $00000523 VOL: 0
;PCODE: $00000524 VOL: 0
;PCODE: $00000525 VOL: 0
;PCODE: $00000526 VOL: 0
;PCODE: $00000527 VOL: 0
;PCODE: $00000528 VOL: 0
;PCODE: $00000529 VOL: 0
;PCODE: $0000052A VOL: 0
;PCODE: $0000052B VOL: 0
; 0000 0254         }
;PCODE: $0000052C VOL: 0
;PCODE: $0000052D VOL: 0
;PCODE: $0000052E VOL: 0
;PCODE: $0000052F VOL: 0
;PCODE: $00000530 VOL: 0
;PCODE: $00000531 VOL: 0
; 0000 0255 
; 0000 0256         SEL_1 = 0;
;PCODE: $00000532 VOL: 0
;PCODE: $00000533 VOL: 0
; 0000 0257         SEL_2 = 1;
;PCODE: $00000534 VOL: 0
;PCODE: $00000535 VOL: 0
; 0000 0258         SEL_3 = 0;
;PCODE: $00000536 VOL: 0
;PCODE: $00000537 VOL: 0
; 0000 0259         delay_ms(10);
;PCODE: $00000538 VOL: 0
;PCODE: $00000539 VOL: 0
;PCODE: $0000053A VOL: 0
; 0000 025A         for(i=0;i<3;i++)
;PCODE: $0000053B VOL: 0
;PCODE: $0000053C VOL: 0
;PCODE: $0000053D VOL: 0
;PCODE: $0000053E VOL: 0
;PCODE: $0000053F VOL: 0
;PCODE: $00000540 VOL: 0
;PCODE: $00000541 VOL: 0
;PCODE: $00000542 VOL: 0
;PCODE: $00000543 VOL: 0
; 0000 025B         {
; 0000 025C         	senbuff[i+6] = read_adc(i);
;PCODE: $00000544 VOL: 0
;PCODE: $00000545 VOL: 0
;PCODE: $00000546 VOL: 0
;PCODE: $00000547 VOL: 0
;PCODE: $00000548 VOL: 0
;PCODE: $00000549 VOL: 0
;PCODE: $0000054A VOL: 0
;PCODE: $0000054B VOL: 0
;PCODE: $0000054C VOL: 0
; 0000 025D                 if(senbuff[i+6]>sen[i+6]) sen[i+6]=senbuff[i+6];
;PCODE: $0000054D VOL: 0
;PCODE: $0000054E VOL: 0
;PCODE: $0000054F VOL: 0
;PCODE: $00000550 VOL: 0
;PCODE: $00000551 VOL: 0
;PCODE: $00000552 VOL: 0
;PCODE: $00000553 VOL: 0
;PCODE: $00000554 VOL: 0
;PCODE: $00000555 VOL: 0
;PCODE: $00000556 VOL: 0
;PCODE: $00000557 VOL: 0
;PCODE: $00000558 VOL: 0
;PCODE: $00000559 VOL: 0
;PCODE: $0000055A VOL: 0
;PCODE: $0000055B VOL: 0
;PCODE: $0000055C VOL: 0
;PCODE: $0000055D VOL: 0
;PCODE: $0000055E VOL: 0
;PCODE: $0000055F VOL: 0
;PCODE: $00000560 VOL: 0
;PCODE: $00000561 VOL: 0
;PCODE: $00000562 VOL: 0
;PCODE: $00000563 VOL: 0
; 0000 025E         }
;PCODE: $00000564 VOL: 0
;PCODE: $00000565 VOL: 0
;PCODE: $00000566 VOL: 0
;PCODE: $00000567 VOL: 0
;PCODE: $00000568 VOL: 0
;PCODE: $00000569 VOL: 0
; 0000 025F 
; 0000 0260         SEL_1 = 1;
;PCODE: $0000056A VOL: 0
;PCODE: $0000056B VOL: 0
; 0000 0261         SEL_2 = 1;
;PCODE: $0000056C VOL: 0
;PCODE: $0000056D VOL: 0
; 0000 0262         SEL_3 = 0;
;PCODE: $0000056E VOL: 0
;PCODE: $0000056F VOL: 0
; 0000 0263         delay_ms(10);
;PCODE: $00000570 VOL: 0
;PCODE: $00000571 VOL: 0
;PCODE: $00000572 VOL: 0
; 0000 0264         for(i=0;i<3;i++)
;PCODE: $00000573 VOL: 0
;PCODE: $00000574 VOL: 0
;PCODE: $00000575 VOL: 0
;PCODE: $00000576 VOL: 0
;PCODE: $00000577 VOL: 0
;PCODE: $00000578 VOL: 0
;PCODE: $00000579 VOL: 0
;PCODE: $0000057A VOL: 0
;PCODE: $0000057B VOL: 0
; 0000 0265         {
; 0000 0266         	senbuff[i+9] = read_adc(i);
;PCODE: $0000057C VOL: 0
;PCODE: $0000057D VOL: 0
;PCODE: $0000057E VOL: 0
;PCODE: $0000057F VOL: 0
;PCODE: $00000580 VOL: 0
;PCODE: $00000581 VOL: 0
;PCODE: $00000582 VOL: 0
;PCODE: $00000583 VOL: 0
;PCODE: $00000584 VOL: 0
; 0000 0267                 if(senbuff[i+9]>sen[i+9]) sen[i+9]=senbuff[i+9];
;PCODE: $00000585 VOL: 0
;PCODE: $00000586 VOL: 0
;PCODE: $00000587 VOL: 0
;PCODE: $00000588 VOL: 0
;PCODE: $00000589 VOL: 0
;PCODE: $0000058A VOL: 0
;PCODE: $0000058B VOL: 0
;PCODE: $0000058C VOL: 0
;PCODE: $0000058D VOL: 0
;PCODE: $0000058E VOL: 0
;PCODE: $0000058F VOL: 0
;PCODE: $00000590 VOL: 0
;PCODE: $00000591 VOL: 0
;PCODE: $00000592 VOL: 0
;PCODE: $00000593 VOL: 0
;PCODE: $00000594 VOL: 0
;PCODE: $00000595 VOL: 0
;PCODE: $00000596 VOL: 0
;PCODE: $00000597 VOL: 0
;PCODE: $00000598 VOL: 0
;PCODE: $00000599 VOL: 0
;PCODE: $0000059A VOL: 0
;PCODE: $0000059B VOL: 0
; 0000 0268         }
;PCODE: $0000059C VOL: 0
;PCODE: $0000059D VOL: 0
;PCODE: $0000059E VOL: 0
;PCODE: $0000059F VOL: 0
;PCODE: $000005A0 VOL: 0
;PCODE: $000005A1 VOL: 0
; 0000 0269 
; 0000 026A         SEL_1 = 0;
;PCODE: $000005A2 VOL: 0
;PCODE: $000005A3 VOL: 0
; 0000 026B         SEL_2 = 0;
;PCODE: $000005A4 VOL: 0
;PCODE: $000005A5 VOL: 0
; 0000 026C         SEL_3 = 1;
;PCODE: $000005A6 VOL: 0
;PCODE: $000005A7 VOL: 0
; 0000 026D         delay_ms(10);
;PCODE: $000005A8 VOL: 0
;PCODE: $000005A9 VOL: 0
;PCODE: $000005AA VOL: 0
; 0000 026E         for(i=0;i<3;i++)
;PCODE: $000005AB VOL: 0
;PCODE: $000005AC VOL: 0
;PCODE: $000005AD VOL: 0
;PCODE: $000005AE VOL: 0
;PCODE: $000005AF VOL: 0
;PCODE: $000005B0 VOL: 0
;PCODE: $000005B1 VOL: 0
;PCODE: $000005B2 VOL: 0
;PCODE: $000005B3 VOL: 0
; 0000 026F         {
; 0000 0270         	senbuff[i+12] = read_adc(i);
;PCODE: $000005B4 VOL: 0
;PCODE: $000005B5 VOL: 0
;PCODE: $000005B6 VOL: 0
;PCODE: $000005B7 VOL: 0
;PCODE: $000005B8 VOL: 0
;PCODE: $000005B9 VOL: 0
;PCODE: $000005BA VOL: 0
;PCODE: $000005BB VOL: 0
;PCODE: $000005BC VOL: 0
; 0000 0271                 if(senbuff[i+12]>sen[i+12]) sen[i+12]=senbuff[i+12];
;PCODE: $000005BD VOL: 0
;PCODE: $000005BE VOL: 0
;PCODE: $000005BF VOL: 0
;PCODE: $000005C0 VOL: 0
;PCODE: $000005C1 VOL: 0
;PCODE: $000005C2 VOL: 0
;PCODE: $000005C3 VOL: 0
;PCODE: $000005C4 VOL: 0
;PCODE: $000005C5 VOL: 0
;PCODE: $000005C6 VOL: 0
;PCODE: $000005C7 VOL: 0
;PCODE: $000005C8 VOL: 0
;PCODE: $000005C9 VOL: 0
;PCODE: $000005CA VOL: 0
;PCODE: $000005CB VOL: 0
;PCODE: $000005CC VOL: 0
;PCODE: $000005CD VOL: 0
;PCODE: $000005CE VOL: 0
;PCODE: $000005CF VOL: 0
;PCODE: $000005D0 VOL: 0
;PCODE: $000005D1 VOL: 0
;PCODE: $000005D2 VOL: 0
;PCODE: $000005D3 VOL: 0
; 0000 0272         }
;PCODE: $000005D4 VOL: 0
;PCODE: $000005D5 VOL: 0
;PCODE: $000005D6 VOL: 0
;PCODE: $000005D7 VOL: 0
;PCODE: $000005D8 VOL: 0
;PCODE: $000005D9 VOL: 0
; 0000 0273 
; 0000 0274         SEL_1 = 1;
;PCODE: $000005DA VOL: 0
;PCODE: $000005DB VOL: 0
; 0000 0275         SEL_2 = 0;
;PCODE: $000005DC VOL: 0
;PCODE: $000005DD VOL: 0
; 0000 0276         SEL_3 = 1;
;PCODE: $000005DE VOL: 0
;PCODE: $000005DF VOL: 0
; 0000 0277         delay_ms(10);
;PCODE: $000005E0 VOL: 0
;PCODE: $000005E1 VOL: 0
;PCODE: $000005E2 VOL: 0
; 0000 0278         for(i=0;i<3;i++)
;PCODE: $000005E3 VOL: 0
;PCODE: $000005E4 VOL: 0
;PCODE: $000005E5 VOL: 0
;PCODE: $000005E6 VOL: 0
;PCODE: $000005E7 VOL: 0
;PCODE: $000005E8 VOL: 0
;PCODE: $000005E9 VOL: 0
;PCODE: $000005EA VOL: 0
;PCODE: $000005EB VOL: 0
; 0000 0279         {
; 0000 027A         	senbuff[i+15] = read_adc(i);
;PCODE: $000005EC VOL: 0
;PCODE: $000005ED VOL: 0
;PCODE: $000005EE VOL: 0
;PCODE: $000005EF VOL: 0
;PCODE: $000005F0 VOL: 0
;PCODE: $000005F1 VOL: 0
;PCODE: $000005F2 VOL: 0
;PCODE: $000005F3 VOL: 0
;PCODE: $000005F4 VOL: 0
; 0000 027B                 if(senbuff[i+15]>sen[i+15]) sen[i+15]=senbuff[i+15];
;PCODE: $000005F5 VOL: 0
;PCODE: $000005F6 VOL: 0
;PCODE: $000005F7 VOL: 0
;PCODE: $000005F8 VOL: 0
;PCODE: $000005F9 VOL: 0
;PCODE: $000005FA VOL: 0
;PCODE: $000005FB VOL: 0
;PCODE: $000005FC VOL: 0
;PCODE: $000005FD VOL: 0
;PCODE: $000005FE VOL: 0
;PCODE: $000005FF VOL: 0
;PCODE: $00000600 VOL: 0
;PCODE: $00000601 VOL: 0
;PCODE: $00000602 VOL: 0
;PCODE: $00000603 VOL: 0
;PCODE: $00000604 VOL: 0
;PCODE: $00000605 VOL: 0
;PCODE: $00000606 VOL: 0
;PCODE: $00000607 VOL: 0
;PCODE: $00000608 VOL: 0
;PCODE: $00000609 VOL: 0
;PCODE: $0000060A VOL: 0
;PCODE: $0000060B VOL: 0
; 0000 027C         }
;PCODE: $0000060C VOL: 0
;PCODE: $0000060D VOL: 0
;PCODE: $0000060E VOL: 0
;PCODE: $0000060F VOL: 0
;PCODE: $00000610 VOL: 0
;PCODE: $00000611 VOL: 0
; 0000 027D 
; 0000 027E         SEL_1 = 0;
;PCODE: $00000612 VOL: 0
;PCODE: $00000613 VOL: 0
; 0000 027F         SEL_2 = 1;
;PCODE: $00000614 VOL: 0
;PCODE: $00000615 VOL: 0
; 0000 0280         SEL_3 = 1;
;PCODE: $00000616 VOL: 0
;PCODE: $00000617 VOL: 0
; 0000 0281         delay_ms(10);
;PCODE: $00000618 VOL: 0
;PCODE: $00000619 VOL: 0
;PCODE: $0000061A VOL: 0
; 0000 0282         for(i=0;i<3;i++)
;PCODE: $0000061B VOL: 0
;PCODE: $0000061C VOL: 0
;PCODE: $0000061D VOL: 0
;PCODE: $0000061E VOL: 0
;PCODE: $0000061F VOL: 0
;PCODE: $00000620 VOL: 0
;PCODE: $00000621 VOL: 0
;PCODE: $00000622 VOL: 0
;PCODE: $00000623 VOL: 0
; 0000 0283         {
; 0000 0284         	senbuff[i+18] = read_adc(i);
;PCODE: $00000624 VOL: 0
;PCODE: $00000625 VOL: 0
;PCODE: $00000626 VOL: 0
;PCODE: $00000627 VOL: 0
;PCODE: $00000628 VOL: 0
;PCODE: $00000629 VOL: 0
;PCODE: $0000062A VOL: 0
;PCODE: $0000062B VOL: 0
;PCODE: $0000062C VOL: 0
; 0000 0285                 if(senbuff[i+18]>sen[i+18]) sen[i+18]=senbuff[i+18];
;PCODE: $0000062D VOL: 0
;PCODE: $0000062E VOL: 0
;PCODE: $0000062F VOL: 0
;PCODE: $00000630 VOL: 0
;PCODE: $00000631 VOL: 0
;PCODE: $00000632 VOL: 0
;PCODE: $00000633 VOL: 0
;PCODE: $00000634 VOL: 0
;PCODE: $00000635 VOL: 0
;PCODE: $00000636 VOL: 0
;PCODE: $00000637 VOL: 0
;PCODE: $00000638 VOL: 0
;PCODE: $00000639 VOL: 0
;PCODE: $0000063A VOL: 0
;PCODE: $0000063B VOL: 0
;PCODE: $0000063C VOL: 0
;PCODE: $0000063D VOL: 0
;PCODE: $0000063E VOL: 0
;PCODE: $0000063F VOL: 0
;PCODE: $00000640 VOL: 0
;PCODE: $00000641 VOL: 0
;PCODE: $00000642 VOL: 0
;PCODE: $00000643 VOL: 0
; 0000 0286         }
;PCODE: $00000644 VOL: 0
;PCODE: $00000645 VOL: 0
;PCODE: $00000646 VOL: 0
;PCODE: $00000647 VOL: 0
;PCODE: $00000648 VOL: 0
;PCODE: $00000649 VOL: 0
; 0000 0287 
; 0000 0288         SEL_1 = 1;
;PCODE: $0000064A VOL: 0
;PCODE: $0000064B VOL: 0
; 0000 0289         SEL_2 = 1;
;PCODE: $0000064C VOL: 0
;PCODE: $0000064D VOL: 0
; 0000 028A         SEL_3 = 1;
;PCODE: $0000064E VOL: 0
;PCODE: $0000064F VOL: 0
; 0000 028B         delay_ms(10);
;PCODE: $00000650 VOL: 0
;PCODE: $00000651 VOL: 0
;PCODE: $00000652 VOL: 0
; 0000 028C         for(i=0;i<3;i++)
;PCODE: $00000653 VOL: 0
;PCODE: $00000654 VOL: 0
;PCODE: $00000655 VOL: 0
;PCODE: $00000656 VOL: 0
;PCODE: $00000657 VOL: 0
;PCODE: $00000658 VOL: 0
;PCODE: $00000659 VOL: 0
;PCODE: $0000065A VOL: 0
;PCODE: $0000065B VOL: 0
; 0000 028D         {
; 0000 028E         	senbuff[i+21] = read_adc(i);
;PCODE: $0000065C VOL: 0
;PCODE: $0000065D VOL: 0
;PCODE: $0000065E VOL: 0
;PCODE: $0000065F VOL: 0
;PCODE: $00000660 VOL: 0
;PCODE: $00000661 VOL: 0
;PCODE: $00000662 VOL: 0
;PCODE: $00000663 VOL: 0
;PCODE: $00000664 VOL: 0
; 0000 028F                 if(senbuff[i+21]>sen[i+21]) sen[i+21]=senbuff[i+21];
;PCODE: $00000665 VOL: 0
;PCODE: $00000666 VOL: 0
;PCODE: $00000667 VOL: 0
;PCODE: $00000668 VOL: 0
;PCODE: $00000669 VOL: 0
;PCODE: $0000066A VOL: 0
;PCODE: $0000066B VOL: 0
;PCODE: $0000066C VOL: 0
;PCODE: $0000066D VOL: 0
;PCODE: $0000066E VOL: 0
;PCODE: $0000066F VOL: 0
;PCODE: $00000670 VOL: 0
;PCODE: $00000671 VOL: 0
;PCODE: $00000672 VOL: 0
;PCODE: $00000673 VOL: 0
;PCODE: $00000674 VOL: 0
;PCODE: $00000675 VOL: 0
;PCODE: $00000676 VOL: 0
;PCODE: $00000677 VOL: 0
;PCODE: $00000678 VOL: 0
;PCODE: $00000679 VOL: 0
;PCODE: $0000067A VOL: 0
;PCODE: $0000067B VOL: 0
; 0000 0290         }
;PCODE: $0000067C VOL: 0
;PCODE: $0000067D VOL: 0
;PCODE: $0000067E VOL: 0
;PCODE: $0000067F VOL: 0
;PCODE: $00000680 VOL: 0
;PCODE: $00000681 VOL: 0
; 0000 0291 
; 0000 0292         senbuff[24] = read_adc(3);
;PCODE: $00000682 VOL: 0
;PCODE: $00000683 VOL: 0
;PCODE: $00000684 VOL: 0
;PCODE: $00000685 VOL: 0
;PCODE: $00000686 VOL: 0
; 0000 0293         if(senbuff[24]>sen[24]) sen[24]=senbuff[24];
;PCODE: $00000687 VOL: 0
;PCODE: $00000688 VOL: 0
;PCODE: $00000689 VOL: 0
;PCODE: $0000068A VOL: 0
;PCODE: $0000068B VOL: 0
;PCODE: $0000068C VOL: 0
;PCODE: $0000068D VOL: 0
;PCODE: $0000068E VOL: 0
;PCODE: $0000068F VOL: 0
;PCODE: $00000690 VOL: 0
; 0000 0294 }
;PCODE: $00000691 VOL: 0
;PCODE: $00000692 VOL: 0
;PCODE: $00000693 VOL: 0
;PCODE: $00000694 VOL: 0
;
;void hitung_skor(void)
; 0000 0297 {
;PCODE: $00000695 VOL: 0
;PCODE: $00000696 VOL: 0
; 0000 0298 	long skor_temp=0;
; 0000 0299 
; 0000 029A         skor_temp = (long)(sen[0]+
;PCODE: $00000697 VOL: 0
;PCODE: $00000698 VOL: 0
;PCODE: $00000699 VOL: 0
;PCODE: $0000069A VOL: 0
;PCODE: $0000069B VOL: 0
;PCODE: $0000069C VOL: 0
;PCODE: $0000069D VOL: 0
;PCODE: $0000069E VOL: 0
;PCODE: $0000069F VOL: 0
;	skor_temp -> Y+0
; 0000 029B         		sen[1]+
; 0000 029C                         sen[2]+
; 0000 029D                         sen[3]+
; 0000 029E                         sen[4]+
; 0000 029F                         sen[5]+
; 0000 02A0                         sen[6]+
; 0000 02A1                         sen[7]+
; 0000 02A2                         sen[8]+
; 0000 02A3                         sen[9]+
; 0000 02A4                         sen[10]+
; 0000 02A5                         sen[11]+
; 0000 02A6                         sen[12]+
; 0000 02A7                         sen[13]+
; 0000 02A8                         sen[14]+
; 0000 02A9                         sen[15]+
; 0000 02AA                         sen[16]+
; 0000 02AB                         sen[17]+
; 0000 02AC                         sen[18]+
; 0000 02AD                         sen[19]+
; 0000 02AE                         sen[20]+
; 0000 02AF                         sen[21]+
; 0000 02B0                         sen[22]+
; 0000 02B1                         sen[23]+
; 0000 02B2                         sen[24]);
;PCODE: $000006A0 VOL: 0
;PCODE: $000006A1 VOL: 0
;PCODE: $000006A2 VOL: 0
;PCODE: $000006A3 VOL: 0
;PCODE: $000006A4 VOL: 0
;PCODE: $000006A5 VOL: 0
;PCODE: $000006A6 VOL: 0
;PCODE: $000006A7 VOL: 0
;PCODE: $000006A8 VOL: 0
;PCODE: $000006A9 VOL: 0
;PCODE: $000006AA VOL: 0
;PCODE: $000006AB VOL: 0
;PCODE: $000006AC VOL: 0
;PCODE: $000006AD VOL: 0
;PCODE: $000006AE VOL: 0
;PCODE: $000006AF VOL: 0
;PCODE: $000006B0 VOL: 0
;PCODE: $000006B1 VOL: 0
;PCODE: $000006B2 VOL: 0
;PCODE: $000006B3 VOL: 0
;PCODE: $000006B4 VOL: 0
;PCODE: $000006B5 VOL: 0
;PCODE: $000006B6 VOL: 0
;PCODE: $000006B7 VOL: 0
;PCODE: $000006B8 VOL: 0
;PCODE: $000006B9 VOL: 0
;PCODE: $000006BA VOL: 0
;PCODE: $000006BB VOL: 0
;PCODE: $000006BC VOL: 0
;PCODE: $000006BD VOL: 0
;PCODE: $000006BE VOL: 0
;PCODE: $000006BF VOL: 0
;PCODE: $000006C0 VOL: 0
;PCODE: $000006C1 VOL: 0
;PCODE: $000006C2 VOL: 0
;PCODE: $000006C3 VOL: 0
;PCODE: $000006C4 VOL: 0
;PCODE: $000006C5 VOL: 0
;PCODE: $000006C6 VOL: 0
;PCODE: $000006C7 VOL: 0
;PCODE: $000006C8 VOL: 0
;PCODE: $000006C9 VOL: 0
;PCODE: $000006CA VOL: 0
;PCODE: $000006CB VOL: 0
;PCODE: $000006CC VOL: 0
;PCODE: $000006CD VOL: 0
;PCODE: $000006CE VOL: 0
;PCODE: $000006CF VOL: 0
;PCODE: $000006D0 VOL: 0
;PCODE: $000006D1 VOL: 0
;PCODE: $000006D2 VOL: 0
;PCODE: $000006D3 VOL: 0
;PCODE: $000006D4 VOL: 0
;PCODE: $000006D5 VOL: 0
;PCODE: $000006D6 VOL: 0
;PCODE: $000006D7 VOL: 0
;PCODE: $000006D8 VOL: 0
;PCODE: $000006D9 VOL: 0
;PCODE: $000006DA VOL: 0
;PCODE: $000006DB VOL: 0
;PCODE: $000006DC VOL: 0
;PCODE: $000006DD VOL: 0
;PCODE: $000006DE VOL: 0
;PCODE: $000006DF VOL: 0
;PCODE: $000006E0 VOL: 0
;PCODE: $000006E1 VOL: 0
;PCODE: $000006E2 VOL: 0
;PCODE: $000006E3 VOL: 0
;PCODE: $000006E4 VOL: 0
;PCODE: $000006E5 VOL: 0
;PCODE: $000006E6 VOL: 0
;PCODE: $000006E7 VOL: 0
;PCODE: $000006E8 VOL: 0
;PCODE: $000006E9 VOL: 0
;PCODE: $000006EA VOL: 0
;PCODE: $000006EB VOL: 0
;PCODE: $000006EC VOL: 0
;PCODE: $000006ED VOL: 0
;PCODE: $000006EE VOL: 0
;PCODE: $000006EF VOL: 0
;PCODE: $000006F0 VOL: 0
;PCODE: $000006F1 VOL: 0
;PCODE: $000006F2 VOL: 0
;PCODE: $000006F3 VOL: 0
;PCODE: $000006F4 VOL: 0
;PCODE: $000006F5 VOL: 0
;PCODE: $000006F6 VOL: 0
;PCODE: $000006F7 VOL: 0
;PCODE: $000006F8 VOL: 0
;PCODE: $000006F9 VOL: 0
;PCODE: $000006FA VOL: 0
;PCODE: $000006FB VOL: 0
;PCODE: $000006FC VOL: 0
;PCODE: $000006FD VOL: 0
;PCODE: $000006FE VOL: 0
;PCODE: $000006FF VOL: 0
;PCODE: $00000700 VOL: 0
;PCODE: $00000701 VOL: 0
;PCODE: $00000702 VOL: 0
;PCODE: $00000703 VOL: 0
; 0000 02B3         skor_temp*=1000;
;PCODE: $00000704 VOL: 0
;PCODE: $00000705 VOL: 0
;PCODE: $00000706 VOL: 0
;PCODE: $00000707 VOL: 0
; 0000 02B4         skor_temp/=6375;
;PCODE: $00000708 VOL: 0
;PCODE: $00000709 VOL: 0
;PCODE: $0000070A VOL: 0
;PCODE: $0000070B VOL: 0
; 0000 02B5         skor=skor_temp;
;PCODE: $0000070C VOL: 0
;PCODE: $0000070D VOL: 0
; 0000 02B6 }
;PCODE: $0000070E VOL: 0
;PCODE: $0000070F VOL: 0
;PCODE: $00000710 VOL: 0
;
;void clear_sensor(void)
; 0000 02B9 {
;PCODE: $00000711 VOL: 0
;PCODE: $00000712 VOL: 0
; 0000 02BA 	char i;
; 0000 02BB 
; 0000 02BC         for(i=0;i<25;i++)
;PCODE: $00000713 VOL: 0
;	i -> R17
;PCODE: $00000714 VOL: 0
;PCODE: $00000715 VOL: 0
;PCODE: $00000716 VOL: 0
;PCODE: $00000717 VOL: 0
;PCODE: $00000718 VOL: 0
;PCODE: $00000719 VOL: 0
;PCODE: $0000071A VOL: 0
;PCODE: $0000071B VOL: 0
;PCODE: $0000071C VOL: 0
; 0000 02BD         {
; 0000 02BE         	sen[i]=0;
;PCODE: $0000071D VOL: 0
;PCODE: $0000071E VOL: 0
;PCODE: $0000071F VOL: 0
;PCODE: $00000720 VOL: 0
;PCODE: $00000721 VOL: 0
; 0000 02BF         }
;PCODE: $00000722 VOL: 0
;PCODE: $00000723 VOL: 0
;PCODE: $00000724 VOL: 0
;PCODE: $00000725 VOL: 0
;PCODE: $00000726 VOL: 0
; 0000 02C0 }
;PCODE: $00000727 VOL: 0
;PCODE: $00000728 VOL: 0
;PCODE: $00000729 VOL: 0
;
;void kirim_to_pc(void)
; 0000 02C3 {
;PCODE: $0000072A VOL: 0
;PCODE: $0000072B VOL: 0
; 0000 02C4 	char 	ribuan,
; 0000 02C5         	ratusan,
; 0000 02C6                 puluhan,
; 0000 02C7                 satuan,
; 0000 02C8                 i;
; 0000 02C9 
; 0000 02CA         ribuan = skor/1000;
;PCODE: $0000072C VOL: 0
;	ribuan -> R17
;	ratusan -> R16
;	puluhan -> R19
;	satuan -> R18
;	i -> R21
;PCODE: $0000072D VOL: 0
;PCODE: $0000072E VOL: 0
;PCODE: $0000072F VOL: 0
;PCODE: $00000730 VOL: 0
; 0000 02CB         ratusan = (skor%1000)/100;
;PCODE: $00000731 VOL: 0
;PCODE: $00000732 VOL: 0
;PCODE: $00000733 VOL: 0
;PCODE: $00000734 VOL: 0
;PCODE: $00000735 VOL: 0
;PCODE: $00000736 VOL: 0
;PCODE: $00000737 VOL: 0
; 0000 02CC         puluhan = ((skor%1000)%100)/10;
;PCODE: $00000738 VOL: 0
;PCODE: $00000739 VOL: 0
;PCODE: $0000073A VOL: 0
;PCODE: $0000073B VOL: 0
;PCODE: $0000073C VOL: 0
;PCODE: $0000073D VOL: 0
;PCODE: $0000073E VOL: 0
;PCODE: $0000073F VOL: 0
;PCODE: $00000740 VOL: 0
;PCODE: $00000741 VOL: 0
; 0000 02CD         satuan = ((skor%1000)%100)%10;
;PCODE: $00000742 VOL: 0
;PCODE: $00000743 VOL: 0
;PCODE: $00000744 VOL: 0
;PCODE: $00000745 VOL: 0
;PCODE: $00000746 VOL: 0
;PCODE: $00000747 VOL: 0
;PCODE: $00000748 VOL: 0
;PCODE: $00000749 VOL: 0
;PCODE: $0000074A VOL: 0
;PCODE: $0000074B VOL: 0
; 0000 02CE 
; 0000 02CF         putchar('c');putchar(ribuan+'0');putchar(ratusan+'0');putchar(puluhan+'0');putchar(satuan+'0');
;PCODE: $0000074C VOL: 0
;PCODE: $0000074D VOL: 0
;PCODE: $0000074E VOL: 0
;PCODE: $0000074F VOL: 0
;PCODE: $00000750 VOL: 0
;PCODE: $00000751 VOL: 0
;PCODE: $00000752 VOL: 0
;PCODE: $00000753 VOL: 0
;PCODE: $00000754 VOL: 0
;PCODE: $00000755 VOL: 0
;PCODE: $00000756 VOL: 0
;PCODE: $00000757 VOL: 0
;PCODE: $00000758 VOL: 0
;PCODE: $00000759 VOL: 0
;PCODE: $0000075A VOL: 0
;PCODE: $0000075B VOL: 0
;PCODE: $0000075C VOL: 0
;PCODE: $0000075D VOL: 0
;PCODE: $0000075E VOL: 0
; 0000 02D0         putchar(13);
;PCODE: $0000075F VOL: 0
;PCODE: $00000760 VOL: 0
;PCODE: $00000761 VOL: 0
; 0000 02D1         for(i=0;i<25;i++)
;PCODE: $00000762 VOL: 0
;PCODE: $00000763 VOL: 0
;PCODE: $00000764 VOL: 0
;PCODE: $00000765 VOL: 0
;PCODE: $00000766 VOL: 0
;PCODE: $00000767 VOL: 0
;PCODE: $00000768 VOL: 0
;PCODE: $00000769 VOL: 0
;PCODE: $0000076A VOL: 0
; 0000 02D2         {
; 0000 02D3         	putchar(sen[i]+'0');
;PCODE: $0000076B VOL: 0
;PCODE: $0000076C VOL: 0
;PCODE: $0000076D VOL: 0
;PCODE: $0000076E VOL: 0
;PCODE: $0000076F VOL: 0
;PCODE: $00000770 VOL: 0
;PCODE: $00000771 VOL: 0
; 0000 02D4         }
;PCODE: $00000772 VOL: 0
;PCODE: $00000773 VOL: 0
;PCODE: $00000774 VOL: 0
;PCODE: $00000775 VOL: 0
;PCODE: $00000776 VOL: 0
; 0000 02D5         putchar(13);
;PCODE: $00000777 VOL: 0
;PCODE: $00000778 VOL: 0
;PCODE: $00000779 VOL: 0
; 0000 02D6 }
;PCODE: $0000077A VOL: 0
;PCODE: $0000077B VOL: 0
;PCODE: $0000077C VOL: 0
;PCODE: $0000077D VOL: 0
;
;void main(void)
; 0000 02D9 {
;PCODE: $0000077E VOL: 0
; 0000 02DA 	// Declare your local variables here
; 0000 02DB 
; 0000 02DC 	// Input/Output Ports initialization
; 0000 02DD 	// Port A initialization
; 0000 02DE 	// Func7=In Func6=In Func5=In Func4=Out Func3=In Func2=In Func1=In Func0=In
; 0000 02DF 	// State7=T State6=P State5=P State4=0 State3=T State2=T State1=T State0=T
; 0000 02E0 	PORTA=0x60;
;PCODE: $0000077F VOL: 0
;PCODE: $00000780 VOL: 0
; 0000 02E1 	DDRA=0x10;
;PCODE: $00000781 VOL: 0
;PCODE: $00000782 VOL: 0
; 0000 02E2 
; 0000 02E3 	// Port B initialization
; 0000 02E4 	// Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 02E5 	// State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 02E6 	PORTB=0x00;
;PCODE: $00000783 VOL: 0
;PCODE: $00000784 VOL: 0
; 0000 02E7 	DDRB=0xFF;
;PCODE: $00000785 VOL: 0
;PCODE: $00000786 VOL: 0
; 0000 02E8 
; 0000 02E9 	// Port C initialization
; 0000 02EA 	// Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 02EB 	// State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 02EC 	PORTC=0x00;
;PCODE: $00000787 VOL: 0
;PCODE: $00000788 VOL: 0
; 0000 02ED 	DDRC=0xFF;
;PCODE: $00000789 VOL: 0
;PCODE: $0000078A VOL: 0
; 0000 02EE 
; 0000 02EF 	// Port D initialization
; 0000 02F0 	// Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=In
; 0000 02F1 	// State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=1 State0=P
; 0000 02F2 	PORTD=0x03;
;PCODE: $0000078B VOL: 0
;PCODE: $0000078C VOL: 0
; 0000 02F3 	DDRD=0xFE;
;PCODE: $0000078D VOL: 0
;PCODE: $0000078E VOL: 0
; 0000 02F4 
; 0000 02F5 	// Timer/Counter 0 initialization
; 0000 02F6 	// Clock source: System Clock
; 0000 02F7 	// Clock value: 1500.000 kHz
; 0000 02F8 	// Mode: Normal top=0xFF
; 0000 02F9 	// OC0 output: Disconnected
; 0000 02FA 	TCCR0=0x02;
;PCODE: $0000078F VOL: 0
;PCODE: $00000790 VOL: 0
; 0000 02FB 	TCNT0=0x6A;
;PCODE: $00000791 VOL: 0
;PCODE: $00000792 VOL: 0
; 0000 02FC 	OCR0=0x00;
;PCODE: $00000793 VOL: 0
;PCODE: $00000794 VOL: 0
; 0000 02FD 
; 0000 02FE 	// Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 02FF 	TIMSK=0x01;
;PCODE: $00000795 VOL: 0
;PCODE: $00000796 VOL: 0
; 0000 0300 
; 0000 0301 	// USART initialization
; 0000 0302 	// Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0303 	// USART Receiver: On
; 0000 0304 	// USART Transmitter: On
; 0000 0305 	// USART Mode: Asynchronous
; 0000 0306 	// USART Baud Rate: 9600
; 0000 0307 	UCSRA=0x00;
;PCODE: $00000797 VOL: 0
;PCODE: $00000798 VOL: 0
; 0000 0308 	UCSRB=0x18;
;PCODE: $00000799 VOL: 0
;PCODE: $0000079A VOL: 0
; 0000 0309 	UCSRC=0x86;
;PCODE: $0000079B VOL: 0
;PCODE: $0000079C VOL: 0
; 0000 030A 	UBRRH=0x00;
;PCODE: $0000079D VOL: 0
;PCODE: $0000079E VOL: 0
; 0000 030B 	UBRRL=0x4D;
;PCODE: $0000079F VOL: 0
;PCODE: $000007A0 VOL: 0
; 0000 030C 
; 0000 030D 	// Analog Comparator initialization
; 0000 030E 	// Analog Comparator: Off
; 0000 030F 	// Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 0310 	ACSR=0x80;
;PCODE: $000007A1 VOL: 0
;PCODE: $000007A2 VOL: 0
; 0000 0311 	SFIOR=0x00;
;PCODE: $000007A3 VOL: 0
;PCODE: $000007A4 VOL: 0
; 0000 0312 
; 0000 0313 	// ADC initialization
; 0000 0314 	// ADC Clock frequency: 750.000 kHz
; 0000 0315 	// ADC Voltage Reference: AREF pin
; 0000 0316 	// Only the 8 most significant bits of
; 0000 0317 	// the AD conversion result are used
; 0000 0318 	ADMUX=ADC_VREF_TYPE & 0xff;
;PCODE: $000007A5 VOL: 0
;PCODE: $000007A6 VOL: 0
; 0000 0319 	ADCSRA=0x84;
;PCODE: $000007A7 VOL: 0
;PCODE: $000007A8 VOL: 0
; 0000 031A 
; 0000 031B 	// Alphanumeric LCD initialization
; 0000 031C 	// Connections specified in the
; 0000 031D 	// Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 031E 	// RS - PORTC Bit 0
; 0000 031F 	// RD - PORTC Bit 1
; 0000 0320 	// EN - PORTC Bit 2
; 0000 0321 	// D4 - PORTC Bit 4
; 0000 0322 	// D5 - PORTC Bit 5
; 0000 0323 	// D6 - PORTC Bit 6
; 0000 0324 	// D7 - PORTC Bit 7
; 0000 0325 	// Characters/line: 16
; 0000 0326 	lcd_init(16);
;PCODE: $000007A9 VOL: 0
;PCODE: $000007AA VOL: 0
;PCODE: $000007AB VOL: 0
; 0000 0327 
; 0000 0328 	// Global enable interrupts
; 0000 0329         lcd_clear();
;PCODE: $000007AC VOL: 0
; 0000 032A         lcd_putsf("Anten P Analyzer");
;PCODE: $000007AD VOL: 0
;PCODE: $000007AE VOL: 0
;PCODE: $000007AF VOL: 0
;PCODE: $000007B0 VOL: 0
; 0000 032B 	lcd_gotoxy(0,1);
;PCODE: $000007B1 VOL: 0
;PCODE: $000007B2 VOL: 0
;PCODE: $000007B3 VOL: 0
;PCODE: $000007B4 VOL: 0
;PCODE: $000007B5 VOL: 0
; 0000 032C         lcd_putsf(" Techno  Antena ");
;PCODE: $000007B6 VOL: 0
;PCODE: $000007B7 VOL: 0
;PCODE: $000007B8 VOL: 0
;PCODE: $000007B9 VOL: 0
; 0000 032D 
; 0000 032E         delay_ms(500);
;PCODE: $000007BA VOL: 0
;PCODE: $000007BB VOL: 0
;PCODE: $000007BC VOL: 0
; 0000 032F 
; 0000 0330 	lcd_clear();
;PCODE: $000007BD VOL: 0
; 0000 0331         lcd_putsf(" Teknik  Fisika ");
;PCODE: $000007BE VOL: 0
;PCODE: $000007BF VOL: 0
;PCODE: $000007C0 VOL: 0
;PCODE: $000007C1 VOL: 0
; 0000 0332 	lcd_gotoxy(0,1);
;PCODE: $000007C2 VOL: 0
;PCODE: $000007C3 VOL: 0
;PCODE: $000007C4 VOL: 0
;PCODE: $000007C5 VOL: 0
;PCODE: $000007C6 VOL: 0
; 0000 0333         lcd_putsf("    U  G  M    ");
;PCODE: $000007C7 VOL: 0
;PCODE: $000007C8 VOL: 0
;PCODE: $000007C9 VOL: 0
;PCODE: $000007CA VOL: 0
; 0000 0334 
; 0000 0335         no_menu=0;
;PCODE: $000007CB VOL: 0
;PCODE: $000007CC VOL: 0
; 0000 0336 
; 0000 0337         #asm("sei")
;PCODE: $000007CD VOL: 0
	sei
;PCODE: $000007CE VOL: 0
; 0000 0338 
; 0000 0339 	while (1)
;PCODE: $000007CF VOL: 0
; 0000 033A       	{
; 0000 033B       		// Place your code here
; 0000 033C                 //menu();
; 0000 033D                 PORTB = 0;
;PCODE: $000007D0 VOL: 0
;PCODE: $000007D1 VOL: 0
; 0000 033E                 PORTB.4 = 1;
;PCODE: $000007D2 VOL: 0
;PCODE: $000007D3 VOL: 0
; 0000 033F                 PORTB.0 = 1;
;PCODE: $000007D4 VOL: 0
;PCODE: $000007D5 VOL: 0
; 0000 0340                 delay_ms(1000);
;PCODE: $000007D6 VOL: 0
;PCODE: $000007D7 VOL: 0
;PCODE: $000007D8 VOL: 0
; 0000 0341                 PORTB.0 = 0;
;PCODE: $000007D9 VOL: 0
;PCODE: $000007DA VOL: 0
; 0000 0342                 PORTB.1 = 1;
;PCODE: $000007DB VOL: 0
;PCODE: $000007DC VOL: 0
; 0000 0343                 delay_ms(1000);
;PCODE: $000007DD VOL: 0
;PCODE: $000007DE VOL: 0
;PCODE: $000007DF VOL: 0
; 0000 0344                 PORTB.1 = 0;
;PCODE: $000007E0 VOL: 0
;PCODE: $000007E1 VOL: 0
; 0000 0345                 PORTB.2 = 1;
;PCODE: $000007E2 VOL: 0
;PCODE: $000007E3 VOL: 0
; 0000 0346                 delay_ms(1000);
;PCODE: $000007E4 VOL: 0
;PCODE: $000007E5 VOL: 0
;PCODE: $000007E6 VOL: 0
; 0000 0347                 PORTB.2 = 0;
;PCODE: $000007E7 VOL: 0
;PCODE: $000007E8 VOL: 0
; 0000 0348                 PORTB.3 = 1;
;PCODE: $000007E9 VOL: 0
;PCODE: $000007EA VOL: 0
; 0000 0349                 delay_ms(1000);
;PCODE: $000007EB VOL: 0
;PCODE: $000007EC VOL: 0
;PCODE: $000007ED VOL: 0
; 0000 034A                 PORTB.3 = 0;
;PCODE: $000007EE VOL: 0
;PCODE: $000007EF VOL: 0
; 0000 034B 
; 0000 034C                 PORTB.5 = 1;
;PCODE: $000007F0 VOL: 0
;PCODE: $000007F1 VOL: 0
; 0000 034D                 PORTB.0 = 1;
;PCODE: $000007F2 VOL: 0
;PCODE: $000007F3 VOL: 0
; 0000 034E                 delay_ms(1000);
;PCODE: $000007F4 VOL: 0
;PCODE: $000007F5 VOL: 0
;PCODE: $000007F6 VOL: 0
; 0000 034F                 PORTB.0 = 0;
;PCODE: $000007F7 VOL: 0
;PCODE: $000007F8 VOL: 0
; 0000 0350                 PORTB.1 = 1;
;PCODE: $000007F9 VOL: 0
;PCODE: $000007FA VOL: 0
; 0000 0351                 delay_ms(1000);
;PCODE: $000007FB VOL: 0
;PCODE: $000007FC VOL: 0
;PCODE: $000007FD VOL: 0
; 0000 0352                 PORTB.1 = 0;
;PCODE: $000007FE VOL: 0
;PCODE: $000007FF VOL: 0
; 0000 0353                 PORTB.2 = 1;
;PCODE: $00000800 VOL: 0
;PCODE: $00000801 VOL: 0
; 0000 0354                 delay_ms(1000);
;PCODE: $00000802 VOL: 0
;PCODE: $00000803 VOL: 0
;PCODE: $00000804 VOL: 0
; 0000 0355                 PORTB.2 = 0;
;PCODE: $00000805 VOL: 0
;PCODE: $00000806 VOL: 0
; 0000 0356                 PORTB.3 = 1;
;PCODE: $00000807 VOL: 0
;PCODE: $00000808 VOL: 0
; 0000 0357                 delay_ms(1000);
;PCODE: $00000809 VOL: 0
;PCODE: $0000080A VOL: 0
;PCODE: $0000080B VOL: 0
; 0000 0358                 PORTB.3 = 0;
;PCODE: $0000080C VOL: 0
;PCODE: $0000080D VOL: 0
; 0000 0359 
; 0000 035A                 PORTB.6 = 1;
;PCODE: $0000080E VOL: 0
;PCODE: $0000080F VOL: 0
; 0000 035B                 PORTB.0 = 1;
;PCODE: $00000810 VOL: 0
;PCODE: $00000811 VOL: 0
; 0000 035C                 delay_ms(1000);
;PCODE: $00000812 VOL: 0
;PCODE: $00000813 VOL: 0
;PCODE: $00000814 VOL: 0
; 0000 035D                 PORTB.0 = 0;
;PCODE: $00000815 VOL: 0
;PCODE: $00000816 VOL: 0
; 0000 035E                 PORTB.1 = 1;
;PCODE: $00000817 VOL: 0
;PCODE: $00000818 VOL: 0
; 0000 035F                 delay_ms(1000);
;PCODE: $00000819 VOL: 0
;PCODE: $0000081A VOL: 0
;PCODE: $0000081B VOL: 0
; 0000 0360                 PORTB.1 = 0;
;PCODE: $0000081C VOL: 0
;PCODE: $0000081D VOL: 0
; 0000 0361                 PORTB.2 = 1;
;PCODE: $0000081E VOL: 0
;PCODE: $0000081F VOL: 0
; 0000 0362                 delay_ms(1000);
;PCODE: $00000820 VOL: 0
;PCODE: $00000821 VOL: 0
;PCODE: $00000822 VOL: 0
; 0000 0363                 PORTB.2 = 0;
;PCODE: $00000823 VOL: 0
;PCODE: $00000824 VOL: 0
; 0000 0364                 PORTB.3 = 1;
;PCODE: $00000825 VOL: 0
;PCODE: $00000826 VOL: 0
; 0000 0365                 delay_ms(1000);
;PCODE: $00000827 VOL: 0
;PCODE: $00000828 VOL: 0
;PCODE: $00000829 VOL: 0
; 0000 0366                 PORTB.3 = 0;
;PCODE: $0000082A VOL: 0
;PCODE: $0000082B VOL: 0
; 0000 0367 
; 0000 0368                 PORTB.7 = 1;
;PCODE: $0000082C VOL: 0
;PCODE: $0000082D VOL: 0
; 0000 0369                 PORTB.0 = 1;
;PCODE: $0000082E VOL: 0
;PCODE: $0000082F VOL: 0
; 0000 036A                 delay_ms(1000);
;PCODE: $00000830 VOL: 0
;PCODE: $00000831 VOL: 0
;PCODE: $00000832 VOL: 0
; 0000 036B                 PORTB.0 = 0;
;PCODE: $00000833 VOL: 0
;PCODE: $00000834 VOL: 0
; 0000 036C                 PORTB.1 = 1;
;PCODE: $00000835 VOL: 0
;PCODE: $00000836 VOL: 0
; 0000 036D                 delay_ms(1000);
;PCODE: $00000837 VOL: 0
;PCODE: $00000838 VOL: 0
;PCODE: $00000839 VOL: 0
; 0000 036E                 PORTB.1 = 0;
;PCODE: $0000083A VOL: 0
;PCODE: $0000083B VOL: 0
; 0000 036F                 PORTB.2 = 1;
;PCODE: $0000083C VOL: 0
;PCODE: $0000083D VOL: 0
; 0000 0370                 delay_ms(1000);
;PCODE: $0000083E VOL: 0
;PCODE: $0000083F VOL: 0
;PCODE: $00000840 VOL: 0
; 0000 0371                 PORTB.2 = 0;
;PCODE: $00000841 VOL: 0
;PCODE: $00000842 VOL: 0
; 0000 0372                 PORTB.3 = 1;
;PCODE: $00000843 VOL: 0
;PCODE: $00000844 VOL: 0
; 0000 0373                 delay_ms(1000);
;PCODE: $00000845 VOL: 0
;PCODE: $00000846 VOL: 0
;PCODE: $00000847 VOL: 0
; 0000 0374                 PORTB.3 = 0;
;PCODE: $00000848 VOL: 0
;PCODE: $00000849 VOL: 0
; 0000 0375       	}
;PCODE: $0000084A VOL: 0
;PCODE: $0000084B VOL: 0
; 0000 0376 }
;PCODE: $0000084C VOL: 0
;PCODE: $0000084D VOL: 0
;PCODE: $0000084E VOL: 0
;#pragma optsize-
