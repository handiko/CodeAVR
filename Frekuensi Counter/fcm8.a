;/*****************************************************
;This program was produced by the
;CodeWizardAVR V1.25.3 Professional
;Automatic Program Generator
;© Copyright 1998-2007 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 2/17/2012
;Author  : F4CG
;Company : F4CG
;Comments:
;
;
;Chip type           : ATmega8
;Program type        : Application
;Clock frequency     : 16.000000 MHz
;Memory model        : Small
;External SRAM size  : 0
;Data Stack size     : 256
;*****************************************************/
;
;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <lcd.h>
;#include <stdio.h>
;
;#define	INPUT	PIND.0
;#define CONST	1
;
;#asm
;PCODE: $0000000D VOL: 0
   .equ __lcd_port=0x12 ;PORTD
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0021 #endasm
;
;//void tampil_nilai(char x, char y);
;void tampil_nilai_digit(char x, char y);
;
;long hitung = 0;
;long frek = 0;
;char lcd_buff[33];
;
;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
; 0000 002B {	TCNT1H=0xC2;

	.CSEG
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 002C 	TCNT1L=0xF7;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 002D 
; 0000 002E         frek = hitung * CONST;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 002F         hitung = 0;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0030 
; 0000 0031         lcd_putsf_pos("Frekuensi :",1,0);
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0032         tampil_nilai_digit(1,1);
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0033         //tampil_nilai(frek,1,1);
; 0000 0034 }
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;
;/*void tampil_nilai(char x, char y)
;{	sprintf(lcd_buff, "%d Hz", frek);
;        lcd_puts_pos(lcd_buff,x,y);
;}*/
;
;void tampil_nilai_digit(char x, char y)
; 0000 003C {	int mega, kilo, hertz;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 003D 
; 0000 003E 	mega = (frek / 1000000);
;PCODE: $0000002C VOL: 0
;	x -> Y+7
;	y -> Y+6
;	mega -> R16,R17
;	kilo -> R18,R19
;	hertz -> R20,R21
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 003F         kilo = (frek / 1000);
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0040  	hertz = (frek % 1000);
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0041 
; 0000 0042         sprintf(lcd_buff, "%03d", mega);
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0043         lcd_puts_pos(lcd_buff,x,y);
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0044 
; 0000 0045         lcd_putsf_pos(".",x+4,y);
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0046 
; 0000 0047         sprintf(lcd_buff, "%03d", kilo);
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0048         lcd_puts_pos(lcd_buff,x+5,y);
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 0049 
; 0000 004A         lcd_putsf_pos(".",x+8,y);
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 004B 
; 0000 004C         sprintf(lcd_buff, "%03d", hertz);
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 004D         lcd_puts_pos(lcd_buff,x+9,y);
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 004E }
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;
;void init_ports(void)
; 0000 0051 {	PORTC=0x7F;
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 0052 	DDRC=0x00;
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 0053 	PORTD=0x00;
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 0054 	DDRD=0xFF;
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 0055 }
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;
;void init_timer(void)
; 0000 0058 { 	// Timer/Counter 1 initialization
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 0059 	// Clock source: System Clock
; 0000 005A 	// Clock value: 15.625 kHz
; 0000 005B 	// Mode: Normal top=FFFFh
; 0000 005C 	// OC1A output: Discon.
; 0000 005D 	// OC1B output: Discon.
; 0000 005E 	// Noise Canceler: Off
; 0000 005F 	// Input Capture on Falling Edge
; 0000 0060 	// Timer 1 Overflow Interrupt: On
; 0000 0061 	// Input Capture Interrupt: Off
; 0000 0062 	// Compare A Match Interrupt: Off
; 0000 0063 	// Compare B Match Interrupt: Off
; 0000 0064 	TCCR1A=0x00;
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 0065 	TCCR1B=0x05;
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 0066 	TCNT1H=0xC2;
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 0067 	TCNT1L=0xF7;
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 0068 	ICR1H=0x00;
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 0069 	ICR1L=0x00;
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 006A 	OCR1AH=0x00;
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 006B 	OCR1AL=0x00;
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 006C 	OCR1BH=0x00;
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 006D 	OCR1BL=0x00;
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 006E 	TIMSK=0x04;
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 006F }
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;
;void main(void)
; 0000 0072 {       init_ports();
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 0073 	init_timer();
;PCODE: $000000B2 VOL: 0
; 0000 0074         lcd_init(16);
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 0075 
; 0000 0076 	ACSR=0x80;
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 0077 	SFIOR=0x00;
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0000 0078 
; 0000 0079 	#asm("sei")
;PCODE: $000000BA VOL: 0
	sei
;PCODE: $000000BB VOL: 0
; 0000 007A 
; 0000 007B 	while (1)
;PCODE: $000000BC VOL: 0
; 0000 007C       	{   	if(!INPUT)	hitung++;
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 007D         	while(!INPUT);
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0000 007E       	};
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 007F }
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
