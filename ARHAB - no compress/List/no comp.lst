
AVRASM ver. 2.1.30  H:\Punya Koko\LPKTA\ARHAB - no compress\List\no comp.asm Mon Jun 23 19:50:26 2014

H:\Punya Koko\LPKTA\ARHAB - no compress\List\no comp.asm(1057): warning: Register r7 already defined by the .DEF directive
H:\Punya Koko\LPKTA\ARHAB - no compress\List\no comp.asm(1058): warning: Register r8 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega8
                 ;Program type             : Application
                 ;Clock frequency          : 11.059200 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 800 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : No
                 ;'char' is unsigned       : No
                 ;8 bit enums              : Yes
                 ;global 'const' stored in FLASH: No
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1119
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0320
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _xcount=R7
                 	.DEF _crc=R8
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c07d      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 c0a4      	RJMP _timer1_ovf_isr
000009 cff6      	RJMP 0x00
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
                 
                 _tbl10_G100:
000013 2710
000014 03e8
000015 0064
000016 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000017 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000018 1000
000019 0100
00001a 0010
00001b 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
00001c 0000      	.DW  0x0000
                 
                 _0x3:
00001d 3230
00001e 2e30
00001f 4330      	.DB  0x30,0x32,0x30,0x2E,0x30,0x43
                 _0x4:
000020 3130
000021 2e33
000022 5638      	.DB  0x30,0x31,0x33,0x2E,0x38,0x56
                 _0x5:
000023 2121
H:\Punya Koko\LPKTA\ARHAB - no compress\List\no comp.asm(1102): warning: .cseg .db misalignment - padding zero byte
000024 0057      	.DB  0x21,0x21,0x57
                 _0x1A8:
H:\Punya Koko\LPKTA\ARHAB - no compress\List\no comp.asm(1104): warning: .cseg .db misalignment - padding zero byte
000025 0000      	.DB  0x0
                 _0x0:
000026 4e45
000027 4554
000028 4952
000029 474e      	.DB  0x45,0x4E,0x54,0x45,0x52,0x49,0x4E,0x47
00002a 4320
00002b 4e4f
00002c 4946
00002d 5547      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x49,0x47,0x55
00002e 4152
00002f 4954
000030 4e4f
000031 4d20      	.DB  0x52,0x41,0x54,0x49,0x4F,0x4E,0x20,0x4D
000032 444f
000033 2e45
000034 2e2e
000035 4300      	.DB  0x4F,0x44,0x45,0x2E,0x2E,0x2E,0x0,0x43
000036 4e4f
000037 4946
000038 5547
000039 4552      	.DB  0x4F,0x4E,0x46,0x49,0x47,0x55,0x52,0x45
00003a 2e2e
00003b 002e
00003c 4153
00003d 4956      	.DB  0x2E,0x2E,0x2E,0x0,0x53,0x41,0x56,0x49
00003e 474e
00003f 4320
000040 4e4f
000041 4946      	.DB  0x4E,0x47,0x20,0x43,0x4F,0x4E,0x46,0x49
000042 5547
000043 4152
000044 4954
000045 4e4f      	.DB  0x47,0x55,0x52,0x41,0x54,0x49,0x4F,0x4E
000046 2e2e
000047 002e
000048 4f43
000049 464e      	.DB  0x2E,0x2E,0x2E,0x0,0x43,0x4F,0x4E,0x46
00004a 4749
00004b 5320
00004c 4355
00004d 4543      	.DB  0x49,0x47,0x20,0x53,0x55,0x43,0x43,0x45
00004e 5353
00004f 2120
000050 5400
000051 6d65      	.DB  0x53,0x53,0x20,0x21,0x0,0x54,0x65,0x6D
000052 6570
000053 6172
000054 7574
000055 6572      	.DB  0x70,0x65,0x72,0x61,0x74,0x75,0x72,0x65
000056 2020
000057 2020
000058 2020
000059 3a20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x3A
00005a 4200
00005b 7461
00005c 6574
00005d 7972      	.DB  0x0,0x42,0x61,0x74,0x74,0x65,0x72,0x79
00005e 5620
00005f 6c6f
000060 6174
000061 6567      	.DB  0x20,0x56,0x6F,0x6C,0x74,0x61,0x67,0x65
000062 2020
000063 3a20
H:\Punya Koko\LPKTA\ARHAB - no compress\List\no comp.asm(1121): warning: .cseg .db misalignment - padding zero byte
000064 0000      	.DB  0x20,0x20,0x20,0x3A,0x0
                 _0x2020060:
H:\Punya Koko\LPKTA\ARHAB - no compress\List\no comp.asm(1123): warning: .cseg .db misalignment - padding zero byte
000065 0001      	.DB  0x1
                 _0x2020000:
000066 4e2d
000067 4e41
000068 4900
000069 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
H:\Punya Koko\LPKTA\ARHAB - no compress\List\no comp.asm(1126): warning: .cseg .db misalignment - padding zero byte
00006a 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00006b 0001      	.DW  0x01
00006c 0002      	.DW  0x02
00006d 0038      	.DW  __REG_BIT_VARS*2
                 
00006e 0006      	.DW  0x06
00006f 0380      	.DW  _temp
000070 003a      	.DW  _0x3*2
                 
000071 0006      	.DW  0x06
000072 0387      	.DW  _volt
000073 0040      	.DW  _0x4*2
                 
000074 0003      	.DW  0x03
000075 0397      	.DW  _comp_cst
000076 0046      	.DW  _0x5*2
                 
000077 0001      	.DW  0x01
000078 0007      	.DW  0x07
000079 004a      	.DW  _0x1A8*2
                 
00007a 0001      	.DW  0x01
00007b 03bb      	.DW  __seed_G101
00007c 00ca      	.DW  _0x2020060*2
                 
                 _0xFFFFFFFF:
00007d 0000      	.DW  0
                 
                 __RESET:
00007e 94f8      	CLI
00007f 27ee      	CLR  R30
000080 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000081 e0f1      	LDI  R31,1
000082 bffb      	OUT  GICR,R31
000083 bfeb      	OUT  GICR,R30
000084 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000085 e1f8      	LDI  R31,0x18
000086 bdf1      	OUT  WDTCR,R31
000087 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000088 e08d      	LDI  R24,(14-2)+1
000089 e0a2      	LDI  R26,2
00008a 27bb      	CLR  R27
                 __CLEAR_REG:
00008b 93ed      	ST   X+,R30
00008c 958a      	DEC  R24
00008d f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00008e e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00008f e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000090 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000091 93ed      	ST   X+,R30
000092 9701      	SBIW R24,1
000093 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000094 ede6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000095 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000096 9185      	LPM  R24,Z+
000097 9195      	LPM  R25,Z+
000098 9700      	SBIW R24,0
000099 f061      	BREQ __GLOBAL_INI_END
00009a 91a5      	LPM  R26,Z+
00009b 91b5      	LPM  R27,Z+
00009c 9005      	LPM  R0,Z+
00009d 9015      	LPM  R1,Z+
00009e 01bf      	MOVW R22,R30
00009f 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000a0 9005      	LPM  R0,Z+
0000a1 920d      	ST   X+,R0
0000a2 9701      	SBIW R24,1
0000a3 f7e1      	BRNE __GLOBAL_INI_LOOP
0000a4 01fb      	MOVW R30,R22
0000a5 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000a6 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000a7 bfed      	OUT  SPL,R30
0000a8 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000a9 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000aa e8c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000ab e0d3      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000ac c757      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x380
                 
                 	.CSEG
                 ;
                 ;// header firmware
                 ;#include <mega8.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <mega8_bits.h>
                 ;#include <delay.h>
                 ;
                 ;#define ADC_VREF_TYPE 0x00
                 ;#define AFOUT	PORTB.4
                 ;#define PTT	PORTB.5
                 ;#define MERAH	PORTD.6
                 ;#define HIJAU	PORTD.7
                 ;#define VSENSE_ADC_	0
                 ;#define TEMP_ADC_	1
                 ;
                 ;
                 ;#define _1200		0
                 ;#define _2200		1
                 ;
                 ;#define TX_DELAY_	45
                 ;#define FLAG_		0x7E
                 ;#define	CONTROL_FIELD_	0x03
                 ;#define PROTOCOL_ID_	0xF0
                 ;#define TD_POSISI_	'!'
                 ;#define TD_STATUS_	'>'
                 ;#define TX_TAIL_	15
                 ;
                 ;#include <delay.h>
                 ;#include <stdarg.h>
                 ;#include <stdlib.h>
                 ;#include <math.h>
                 ;
                 ;void set_nada(char i_nada);
                 ;void kirim_karakter(unsigned char input);
                 ;void kirim_paket(void);
                 ;void ubah_nada(void);
                 ;void hitung_crc(char in_crc);
                 ;void kirim_crc(void);
                 ;void ekstrak_gps(void);
                 ;void read_temp(void);
                 ;void read_volt(void);
                 ;
                 ;
                 ;
                 ;
                 ;eeprom int GAP_TIME_=5;
                 ;eeprom char SYM_TAB_OVL_='/';
                 ;eeprom char SYM_CODE_='[';
                 ;eeprom unsigned int ketinggian=0;
                 ;eeprom unsigned char add_aprs[7]={('A'<<1),('P'<<1),('R'<<1),('S'<<1),(' '<<1),(' '<<1),('0'<<1)};
                 ;eeprom unsigned char mycall[8]={"YD2WZM9"};
                 ;eeprom unsigned char mydigi1[8]={"WIDE2 2"};
                 ;eeprom unsigned char mydigi2[8]={"WIDE2 2"};
                 ;eeprom unsigned char mydigi3[8]={"WIDE2 2"};
                 ;eeprom char posisi_lat[9] ={'0','7','4','5','.','9','8','2','S'};
                 ;eeprom char posisi_long[10] ={'1','1','0','2','2','.','3','7','5','E'};
                 ;eeprom char altitude[6];
                 ;eeprom char beacon_stat = 0;
                 ;eeprom char battvoltincomm='Y';
                 ;eeprom char tempincomm='Y';
                 ;eeprom char komentar[100] ={"New Tracker"};
                 ;eeprom char status[100]={"ProTrak! APRS & Telemetry Encoder"};
                 ;eeprom int timeIntv=20;
                 ;eeprom char compstat='Y';
                 ;eeprom char sendalt='Y';
                 ;eeprom char gps='N';
                 ;eeprom char sendtopc='N';
                 ;eeprom char commsize=11;
                 ;eeprom char statsize=33;
                 ;
                 ;char temp[7]={"020.0C"};
                 
                 	.DSEG
                 ;char volt[7]={"013.8V"};
                 ;char xcount = 0;
                 ;bit nada = _1200;
                 ;static char bit_stuff = 0;
                 ;unsigned short crc;
                 ;char comp_lat[4];
                 ;char comp_long[4];
                 ;char comp_cst[3]={33,33,(0b00110110+33)};
                 ;unsigned short crc;
                 ;
                 ;
                 ;/***************************************************************************************/
                 ;	interrupt 		[TIM1_OVF] void timer1_ovf_isr(void)
                 ; 0000 0055 /***************************************************************************************/
                 ; 0000 0056 {
                 
                 	.CSEG
                 _timer1_ovf_isr:
0000ad 920a      	ST   -Y,R0
0000ae 921a      	ST   -Y,R1
0000af 92fa      	ST   -Y,R15
0000b0 936a      	ST   -Y,R22
0000b1 937a      	ST   -Y,R23
0000b2 938a      	ST   -Y,R24
0000b3 939a      	ST   -Y,R25
0000b4 93aa      	ST   -Y,R26
0000b5 93ba      	ST   -Y,R27
0000b6 93ea      	ST   -Y,R30
0000b7 93fa      	ST   -Y,R31
0000b8 b7ef      	IN   R30,SREG
0000b9 93ea      	ST   -Y,R30
                 ; 0000 0057 	// matikan LED stanby
                 ; 0000 0058         //if((xcount%2) == 0)
                 ; 0000 0059         //{
                 ; 0000 005A                 if(gps=='Y')
0000ba e1a5      	LDI  R26,LOW(_gps)
0000bb e0b1      	LDI  R27,HIGH(_gps)
0000bc d8f8      	RCALL SUBOPT_0x0
0000bd f419      	BRNE _0x6
                 ; 0000 005B                 {
                 ; 0000 005C                 	HIJAU=0;
0000be 9897      	CBI  0x12,7
                 ; 0000 005D                 	MERAH=0;
0000bf 9896      	CBI  0x12,6
                 ; 0000 005E                 	ekstrak_gps();
0000c0 c003      	RJMP _0x19D
                 ; 0000 005F         	}
                 ; 0000 0060                 else
                 _0x6:
                 ; 0000 0061                 {
                 ; 0000 0062                 	HIJAU=1;
0000c1 9a97      	SBI  0x12,7
                 ; 0000 0063                 	MERAH=0;
0000c2 9896      	CBI  0x12,6
                 ; 0000 0064                 	if(PIND.0==0)ekstrak_gps();
0000c3 9b80      	SBIS 0x10,0
                 _0x19D:
0000c4 d5d4      	RCALL _ekstrak_gps
                 ; 0000 0065                 }
                 ; 0000 0066 
                 ; 0000 0067         //}
                 ; 0000 0068 
                 ; 0000 0069         if((xcount==GAP_TIME_)||(xcount==0))
0000c5 e0a0      	LDI  R26,LOW(_GAP_TIME_)
0000c6 e0b0      	LDI  R27,HIGH(_GAP_TIME_)
0000c7 de17      	RCALL __EEPROMRDW
0000c8 2da7      	MOV  R26,R7
0000c9 d8ee      	RCALL SUBOPT_0x1
0000ca f019      	BREQ _0x12
0000cb e0e0      	LDI  R30,LOW(0)
0000cc 15e7      	CP   R30,R7
0000cd f429      	BRNE _0x11
                 _0x12:
                 ; 0000 006A         {
                 ; 0000 006B                 //ekstrak_gps();
                 ; 0000 006C                 delay_ms(500);
0000ce efe4      	LDI  R30,LOW(500)
0000cf e0f1      	LDI  R31,HIGH(500)
0000d0 d8ed      	RCALL SUBOPT_0x2
                 ; 0000 006D                 kirim_paket();
0000d1 d218      	RCALL _kirim_paket
                 ; 0000 006E                 xcount = 0;
0000d2 2477      	CLR  R7
                 ; 0000 006F         }
                 ; 0000 0070 
                 ; 0000 0071         xcount++;
                 _0x11:
0000d3 9473      	INC  R7
                 ; 0000 0072 
                 ; 0000 0073         TCNT1H = (60135 >> 8);
0000d4 d8ec      	RCALL SUBOPT_0x3
                 ; 0000 0074         TCNT1L = (60135 & 0xFF);
                 ; 0000 0075 
                 ; 0000 0076 }       // EndOf interrupt [TIM1_OVF] void timer1_ovf_isr(void)
0000d5 91e9      	LD   R30,Y+
0000d6 bfef      	OUT  SREG,R30
0000d7 91f9      	LD   R31,Y+
0000d8 91e9      	LD   R30,Y+
0000d9 91b9      	LD   R27,Y+
0000da 91a9      	LD   R26,Y+
0000db 9199      	LD   R25,Y+
0000dc 9189      	LD   R24,Y+
0000dd 9179      	LD   R23,Y+
0000de 9169      	LD   R22,Y+
0000df 90f9      	LD   R15,Y+
0000e0 9019      	LD   R1,Y+
0000e1 9009      	LD   R0,Y+
0000e2 9518      	RETI
                 ;
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 0079 {
                 _read_adc:
                 ; 0000 007A 	ADMUX=adc_input | (ADC_VREF_TYPE & 0xff);
                 ;	adc_input -> Y+0
0000e3 81e8      	LD   R30,Y
0000e4 b9e7      	OUT  0x7,R30
                 ; 0000 007B 	delay_us(10);
                +
0000e5 e285     +LDI R24 , LOW ( 37 )
                +__DELAY_USB_LOOP :
0000e6 958a     +DEC R24
0000e7 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 37
                 ; 0000 007C 	ADCSRA|=0x40;
0000e8 9a36      	SBI  0x6,6
                 ; 0000 007D 	while ((ADCSRA & 0x10)==0);
                 _0x14:
0000e9 9b34      	SBIS 0x6,4
0000ea cffe      	RJMP _0x14
                 ; 0000 007E 	ADCSRA|=0x10;
0000eb 9a34      	SBI  0x6,4
                 ; 0000 007F 	return ADCW;
0000ec b1e4      	IN   R30,0x4
0000ed b1f5      	IN   R31,0x4+1
0000ee c761      	RJMP _0x20A0005
                 ; 0000 0080 }
                 ;
                 ;void read_temp(void)
                 ; 0000 0083 {
                 _read_temp:
                 ; 0000 0084 	int adc;
                 ; 0000 0085         char adc_r,adc_p,adc_s,adc_d;
                 ; 0000 0086 
                 ; 0000 0087         adc = (5*read_adc(TEMP_ADC_)/1.024);
0000ef de22      	RCALL __SAVELOCR6
                 ;	adc -> R16,R17
                 ;	adc_r -> R19
                 ;	adc_p -> R18
                 ;	adc_s -> R21
                 ;	adc_d -> R20
0000f0 e0e1      	LDI  R30,LOW(1)
0000f1 93ea      	ST   -Y,R30
0000f2 dff0      	RCALL _read_adc
0000f3 e0a5      	LDI  R26,LOW(5)
0000f4 e0b0      	LDI  R27,HIGH(5)
0000f5 d8d0      	RCALL SUBOPT_0x4
                +
0000f6 e6ef     +LDI R30 , LOW ( 0x3F83126F )
0000f7 e1f2     +LDI R31 , HIGH ( 0x3F83126F )
0000f8 e863     +LDI R22 , BYTE3 ( 0x3F83126F )
0000f9 e37f     +LDI R23 , BYTE4 ( 0x3F83126F )
                 	__GETD1N 0x3F83126F
0000fa d8d2      	RCALL SUBOPT_0x5
                 ; 0000 0088 
                 ; 0000 0089         adc_r = (adc/1000);
                 ; 0000 008A         adc_p = ((adc%1000)/100);
                 ; 0000 008B         adc_s = ((adc%100)/10);
                 ; 0000 008C         adc_d = (adc%10);
                 ; 0000 008D 
                 ; 0000 008E         if(adc_r==0)temp[0]=' ';
0000fb f411      	BRNE _0x17
0000fc e2e0      	LDI  R30,LOW(32)
0000fd c002      	RJMP _0x19E
                 ; 0000 008F         else temp[0] = adc_r + '0';
                 _0x17:
0000fe 2fe3      	MOV  R30,R19
0000ff 5de0      	SUBI R30,-LOW(48)
                 _0x19E:
000100 93e0 0380 	STS  _temp,R30
                 ; 0000 0090         if((adc_p==0)&&(adc_r==0)) temp[1]=' ';
000102 3020      	CPI  R18,0
000103 f411      	BRNE _0x1A
000104 3030      	CPI  R19,0
000105 f009      	BREQ _0x1B
                 _0x1A:
000106 c002      	RJMP _0x19
                 _0x1B:
000107 e2e0      	LDI  R30,LOW(32)
000108 c002      	RJMP _0x19F
                 ; 0000 0091         else temp[1] = adc_p + '0';
                 _0x19:
000109 2fe2      	MOV  R30,R18
00010a 5de0      	SUBI R30,-LOW(48)
                 _0x19F:
                +
00010b 93e0 0381+STS _temp + ( 1 ) , R30
                 	__PUTB1MN _temp,1
                 ; 0000 0092         temp[2] = adc_s + '0';
00010d 2fe5      	MOV  R30,R21
00010e 5de0      	SUBI R30,-LOW(48)
                +
00010f 93e0 0382+STS _temp + ( 2 ) , R30
                 	__PUTB1MN _temp,2
                 ; 0000 0093         temp[4] = adc_d + '0';
000111 2fe4      	MOV  R30,R20
000112 5de0      	SUBI R30,-LOW(48)
                +
000113 93e0 0384+STS _temp + ( 4 ) , R30
                 	__PUTB1MN _temp,4
                 ; 0000 0094 }
000115 c026      	RJMP _0x20A0007
                 ;
                 ;void read_volt(void)
                 ; 0000 0097 {
                 _read_volt:
                 ; 0000 0098 	int adc;
                 ; 0000 0099         char adc_r,adc_p,adc_s,adc_d;
                 ; 0000 009A 
                 ; 0000 009B         adc = (5*8*read_adc(VSENSE_ADC_))/102.4;
000116 ddfb      	RCALL __SAVELOCR6
                 ;	adc -> R16,R17
                 ;	adc_r -> R19
                 ;	adc_p -> R18
                 ;	adc_s -> R21
                 ;	adc_d -> R20
000117 e0e0      	LDI  R30,LOW(0)
000118 93ea      	ST   -Y,R30
000119 dfc9      	RCALL _read_adc
00011a e2a8      	LDI  R26,LOW(40)
00011b e0b0      	LDI  R27,HIGH(40)
00011c d8a9      	RCALL SUBOPT_0x4
                +
00011d eced     +LDI R30 , LOW ( 0x42CCCCCD )
00011e ecfc     +LDI R31 , HIGH ( 0x42CCCCCD )
00011f ec6c     +LDI R22 , BYTE3 ( 0x42CCCCCD )
000120 e472     +LDI R23 , BYTE4 ( 0x42CCCCCD )
                 	__GETD1N 0x42CCCCCD
000121 d8ab      	RCALL SUBOPT_0x5
                 ; 0000 009C 
                 ; 0000 009D         adc_r = (adc/1000);
                 ; 0000 009E         adc_p = ((adc%1000)/100);
                 ; 0000 009F         adc_s = ((adc%100)/10);
                 ; 0000 00A0         adc_d = (adc%10);
                 ; 0000 00A1 
                 ; 0000 00A2         if(adc_r==0)	volt[0]=' ';
000122 f411      	BRNE _0x1D
000123 e2e0      	LDI  R30,LOW(32)
000124 c002      	RJMP _0x1A0
                 ; 0000 00A3         else volt[0] = adc_r + '0';
                 _0x1D:
000125 2fe3      	MOV  R30,R19
000126 5de0      	SUBI R30,-LOW(48)
                 _0x1A0:
000127 93e0 0387 	STS  _volt,R30
                 ; 0000 00A4         if((adc_p==0)&&(adc_r==0)) volt[1]=' ';
000129 3020      	CPI  R18,0
00012a f411      	BRNE _0x20
00012b 3030      	CPI  R19,0
00012c f009      	BREQ _0x21
                 _0x20:
00012d c002      	RJMP _0x1F
                 _0x21:
00012e e2e0      	LDI  R30,LOW(32)
00012f c002      	RJMP _0x1A1
                 ; 0000 00A5         else volt[1] = adc_p + '0';
                 _0x1F:
000130 2fe2      	MOV  R30,R18
000131 5de0      	SUBI R30,-LOW(48)
                 _0x1A1:
                +
000132 93e0 0388+STS _volt + ( 1 ) , R30
                 	__PUTB1MN _volt,1
                 ; 0000 00A6         volt[2] = adc_s + '0';
000134 2fe5      	MOV  R30,R21
000135 5de0      	SUBI R30,-LOW(48)
                +
000136 93e0 0389+STS _volt + ( 2 ) , R30
                 	__PUTB1MN _volt,2
                 ; 0000 00A7         volt[4] = adc_d + '0';
000138 2fe4      	MOV  R30,R20
000139 5de0      	SUBI R30,-LOW(48)
                +
00013a 93e0 038b+STS _volt + ( 4 ) , R30
                 	__PUTB1MN _volt,4
                 ; 0000 00A8 }
                 _0x20A0007:
00013c dddc      	RCALL __LOADLOCR6
00013d 9626      	ADIW R28,6
00013e 9508      	RET
                 ;
                 ;void base91_lat(void)
                 ; 0000 00AB {
                 _base91_lat:
                 ; 0000 00AC   	char deg;
                 ; 0000 00AD         char min;
                 ; 0000 00AE         float sec;
                 ; 0000 00AF         char sign;
                 ; 0000 00B0         float lat;
                 ; 0000 00B1         float f_lat;
                 ; 0000 00B2 
                 ; 0000 00B3         deg = ((posisi_lat[0]-48)*10) + (posisi_lat[1]-48);
00013f 972c      	SBIW R28,12
000140 ddd3      	RCALL __SAVELOCR4
                 ;	deg -> R17
                 ;	min -> R16
                 ;	sec -> Y+12
                 ;	sign -> R19
                 ;	lat -> Y+8
                 ;	f_lat -> Y+4
000141 e2ad      	LDI  R26,LOW(_posisi_lat)
000142 e0b0      	LDI  R27,HIGH(_posisi_lat)
000143 d8aa      	RCALL SUBOPT_0x6
000144 d8ac      	RCALL SUBOPT_0x7
                +
000145 e2ae     +LDI R26 , LOW ( _posisi_lat + ( 1 ) )
000146 e0b0     +LDI R27 , HIGH ( _posisi_lat + ( 1 ) )
                 	__POINTW2MN _posisi_lat,1
000147 d8a6      	RCALL SUBOPT_0x6
000148 0de0      	ADD  R30,R0
000149 2f1e      	MOV  R17,R30
                 ; 0000 00B4         min = ((posisi_lat[2]-48)*10) + (posisi_lat[3]-48);
                +
00014a e2af     +LDI R26 , LOW ( _posisi_lat + ( 2 ) )
00014b e0b0     +LDI R27 , HIGH ( _posisi_lat + ( 2 ) )
                 	__POINTW2MN _posisi_lat,2
00014c d8a1      	RCALL SUBOPT_0x6
00014d d8a3      	RCALL SUBOPT_0x7
                +
00014e e3a0     +LDI R26 , LOW ( _posisi_lat + ( 3 ) )
00014f e0b0     +LDI R27 , HIGH ( _posisi_lat + ( 3 ) )
                 	__POINTW2MN _posisi_lat,3
000150 d89d      	RCALL SUBOPT_0x6
000151 0de0      	ADD  R30,R0
000152 2f0e      	MOV  R16,R30
                 ; 0000 00B5         //sec = ((posisi_lat[5]-48)*1000.0) + ((posisi_lat[6]-48)*100.0)+((posisi_lat[7]-48)*10.0) + (posisi_lat[8]-48);
                 ; 0000 00B6         sec = ((posisi_lat[5]-48)*100.0) + ((posisi_lat[6]-48)*10.0)+((posisi_lat[7]-48)*1.0);
                +
000153 e3a2     +LDI R26 , LOW ( _posisi_lat + ( 5 ) )
000154 e0b0     +LDI R27 , HIGH ( _posisi_lat + ( 5 ) )
                 	__POINTW2MN _posisi_lat,5
000155 d898      	RCALL SUBOPT_0x6
000156 d89d      	RCALL SUBOPT_0x8
000157 d89f      	RCALL SUBOPT_0x9
000158 937f      	PUSH R23
000159 936f      	PUSH R22
00015a 93ff      	PUSH R31
00015b 93ef      	PUSH R30
                +
00015c e3a3     +LDI R26 , LOW ( _posisi_lat + ( 6 ) )
00015d e0b0     +LDI R27 , HIGH ( _posisi_lat + ( 6 ) )
                 	__POINTW2MN _posisi_lat,6
00015e d88f      	RCALL SUBOPT_0x6
00015f d89d      	RCALL SUBOPT_0xA
000160 91af      	POP  R26
000161 91bf      	POP  R27
000162 918f      	POP  R24
000163 919f      	POP  R25
000164 db74      	RCALL __ADDF12
000165 937f      	PUSH R23
000166 936f      	PUSH R22
000167 93ff      	PUSH R31
000168 93ef      	PUSH R30
                +
000169 e3a4     +LDI R26 , LOW ( _posisi_lat + ( 7 ) )
00016a e0b0     +LDI R27 , HIGH ( _posisi_lat + ( 7 ) )
                 	__POINTW2MN _posisi_lat,7
00016b d882      	RCALL SUBOPT_0x6
00016c d897      	RCALL SUBOPT_0xB
00016d 91af      	POP  R26
00016e 91bf      	POP  R27
00016f 918f      	POP  R24
000170 919f      	POP  R25
000171 db67      	RCALL __ADDF12
                +
000172 87ec     +STD Y + 12 , R30
000173 87fd     +STD Y + 12 + 1 , R31
000174 876e     +STD Y + 12 + 2 , R22
000175 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
                 ; 0000 00B7         //sec = ((posisi_lat[5]-48)*10.0) + (posisi_lat[6]-48);
                 ; 0000 00B8 
                 ; 0000 00B9         if(posisi_lat[8]=='N') sign = 1.0;
000176 d894      	RCALL SUBOPT_0xC
000177 34ee      	CPI  R30,LOW(0x4E)
000178 f411      	BRNE _0x23
000179 d895      	RCALL SUBOPT_0xD
00017a c001      	RJMP _0x1A2
                 ; 0000 00BA         else sign = -1.0;
                 _0x23:
00017b d898      	RCALL SUBOPT_0xE
                 _0x1A2:
00017c 2f3e      	MOV  R19,R30
                 ; 0000 00BB 
                 ; 0000 00BC         //f_lat = (deg + (min/60.0) + (0.6*sec/360000.0));
                 ; 0000 00BD         f_lat = (deg + (min/60.0) + (0.6*sec/36000.0));
00017d d89b      	RCALL SUBOPT_0xF
00017e dc7c      	RCALL __CBD2
00017f dd4f      	RCALL __CDF2
000180 db58      	RCALL __ADDF12
000181 937f      	PUSH R23
000182 936f      	PUSH R22
000183 93ff      	PUSH R31
000184 93ef      	PUSH R30
                +
000185 85ec     +LDD R30 , Y + 12
000186 85fd     +LDD R31 , Y + 12 + 1
000187 856e     +LDD R22 , Y + 12 + 2
000188 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
                +
000189 e9aa     +LDI R26 , LOW ( 0x3F19999A )
00018a e9b9     +LDI R27 , HIGH ( 0x3F19999A )
00018b e189     +LDI R24 , BYTE3 ( 0x3F19999A )
00018c e39f     +LDI R25 , BYTE4 ( 0x3F19999A )
                 	__GETD2N 0x3F19999A
00018d d896      	RCALL SUBOPT_0x10
00018e 91af      	POP  R26
00018f 91bf      	POP  R27
000190 918f      	POP  R24
000191 919f      	POP  R25
000192 db46      	RCALL __ADDF12
                +
000193 83ec     +STD Y + 4 , R30
000194 83fd     +STD Y + 4 + 1 , R31
000195 836e     +STD Y + 4 + 2 , R22
000196 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                 ; 0000 00BE         //f_lat = (deg + (min/60.0) + (0.6*sec/3600.0));
                 ; 0000 00BF         lat = 380926 * (90 - (f_lat * sign));
000197 2fe3      	MOV  R30,R19
000198 d894      	RCALL SUBOPT_0x11
000199 d85a      	RCALL SUBOPT_0x8
00019a db8e      	RCALL __MULF12
                +
00019b e0a0     +LDI R26 , LOW ( 0x42B40000 )
00019c e0b0     +LDI R27 , HIGH ( 0x42B40000 )
00019d eb84     +LDI R24 , BYTE3 ( 0x42B40000 )
00019e e492     +LDI R25 , BYTE4 ( 0x42B40000 )
                 	__GETD2N 0x42B40000
00019f dd32      	RCALL __SWAPD12
0001a0 db31      	RCALL __SUBF12
                +
0001a1 eca0     +LDI R26 , LOW ( 0x48B9FFC0 )
0001a2 efbf     +LDI R27 , HIGH ( 0x48B9FFC0 )
0001a3 eb89     +LDI R24 , BYTE3 ( 0x48B9FFC0 )
0001a4 e498     +LDI R25 , BYTE4 ( 0x48B9FFC0 )
                 	__GETD2N 0x48B9FFC0
0001a5 db83      	RCALL __MULF12
                +
0001a6 87e8     +STD Y + 8 , R30
0001a7 87f9     +STD Y + 8 + 1 , R31
0001a8 876a     +STD Y + 8 + 2 , R22
0001a9 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
                 ; 0000 00C0 
                 ; 0000 00C1         comp_lat[0] = (lat/753571)+33;
0001aa d887      	RCALL SUBOPT_0x12
0001ab d88b      	RCALL SUBOPT_0x13
0001ac d88f      	RCALL SUBOPT_0x14
0001ad e8af      	LDI  R26,LOW(_comp_lat)
0001ae e0b3      	LDI  R27,HIGH(_comp_lat)
0001af d893      	RCALL SUBOPT_0x15
                 ; 0000 00C2         comp_lat[1] = ((fmod(lat,753571))/8281)+33;
0001b0 d89a      	RCALL SUBOPT_0x16
                +
0001b1 e9a0     +LDI R26 , LOW ( _comp_lat + ( 1 ) )
0001b2 e0b3     +LDI R27 , HIGH ( _comp_lat + ( 1 ) )
                 	__POINTW2MN _comp_lat,1
0001b3 d88f      	RCALL SUBOPT_0x15
                 ; 0000 00C3         comp_lat[2] = ((fmod(lat,8281))/91)+33;
0001b4 d8a0      	RCALL SUBOPT_0x17
                +
0001b5 e9a1     +LDI R26 , LOW ( _comp_lat + ( 2 ) )
0001b6 e0b3     +LDI R27 , HIGH ( _comp_lat + ( 2 ) )
                 	__POINTW2MN _comp_lat,2
0001b7 d88b      	RCALL SUBOPT_0x15
                 ; 0000 00C4         comp_lat[3] = (fmod(lat,91))+33;
0001b8 d8a9      	RCALL SUBOPT_0x18
                +
0001b9 e9a2     +LDI R26 , LOW ( _comp_lat + ( 3 ) )
0001ba e0b3     +LDI R27 , HIGH ( _comp_lat + ( 3 ) )
                 	__POINTW2MN _comp_lat,3
0001bb d8b2      	RCALL SUBOPT_0x19
                 ; 0000 00C5 }
0001bc dd5e      	RCALL __LOADLOCR4
0001bd 9660      	ADIW R28,16
0001be 9508      	RET
                 ;
                 ;void base91_long(void)
                 ; 0000 00C8 {
                 _base91_long:
                 ; 0000 00C9   	unsigned char deg;
                 ; 0000 00CA         char min;
                 ; 0000 00CB         int sec;
                 ; 0000 00CC         char sign;
                 ; 0000 00CD         float lon;
                 ; 0000 00CE         float f_lon;
                 ; 0000 00CF 
                 ; 0000 00D0         deg = ((posisi_long[0]-48)*100.0) + ((posisi_long[1]-48)*10.0) + ((posisi_long[2]-48)*1.0);
0001bf 9728      	SBIW R28,8
0001c0 dd51      	RCALL __SAVELOCR6
                 ;	deg -> R17
                 ;	min -> R16
                 ;	sec -> R18,R19
                 ;	sign -> R21
                 ;	lon -> Y+10
                 ;	f_lon -> Y+6
0001c1 e3a6      	LDI  R26,LOW(_posisi_long)
0001c2 e0b0      	LDI  R27,HIGH(_posisi_long)
0001c3 d82a      	RCALL SUBOPT_0x6
0001c4 d82f      	RCALL SUBOPT_0x8
0001c5 d831      	RCALL SUBOPT_0x9
0001c6 937f      	PUSH R23
0001c7 936f      	PUSH R22
0001c8 93ff      	PUSH R31
0001c9 93ef      	PUSH R30
                +
0001ca e3a7     +LDI R26 , LOW ( _posisi_long + ( 1 ) )
0001cb e0b0     +LDI R27 , HIGH ( _posisi_long + ( 1 ) )
                 	__POINTW2MN _posisi_long,1
0001cc d821      	RCALL SUBOPT_0x6
0001cd d82f      	RCALL SUBOPT_0xA
0001ce 91af      	POP  R26
0001cf 91bf      	POP  R27
0001d0 918f      	POP  R24
0001d1 919f      	POP  R25
0001d2 db06      	RCALL __ADDF12
0001d3 937f      	PUSH R23
0001d4 936f      	PUSH R22
0001d5 93ff      	PUSH R31
0001d6 93ef      	PUSH R30
                +
0001d7 e3a8     +LDI R26 , LOW ( _posisi_long + ( 2 ) )
0001d8 e0b0     +LDI R27 , HIGH ( _posisi_long + ( 2 ) )
                 	__POINTW2MN _posisi_long,2
0001d9 d814      	RCALL SUBOPT_0x6
0001da d829      	RCALL SUBOPT_0xB
0001db 91af      	POP  R26
0001dc 91bf      	POP  R27
0001dd 918f      	POP  R24
0001de 919f      	POP  R25
0001df daf9      	RCALL __ADDF12
0001e0 da85      	RCALL __CFD1U
0001e1 2f1e      	MOV  R17,R30
                 ; 0000 00D1         min = ((posisi_long[3]-48)*10.0) + ((posisi_long[4]-48)*1.0);
                +
0001e2 e3a9     +LDI R26 , LOW ( _posisi_long + ( 3 ) )
0001e3 e0b0     +LDI R27 , HIGH ( _posisi_long + ( 3 ) )
                 	__POINTW2MN _posisi_long,3
0001e4 d809      	RCALL SUBOPT_0x6
0001e5 d817      	RCALL SUBOPT_0xA
0001e6 937f      	PUSH R23
0001e7 936f      	PUSH R22
0001e8 93ff      	PUSH R31
0001e9 93ef      	PUSH R30
                +
0001ea e3aa     +LDI R26 , LOW ( _posisi_long + ( 4 ) )
0001eb e0b0     +LDI R27 , HIGH ( _posisi_long + ( 4 ) )
                 	__POINTW2MN _posisi_long,4
0001ec d801      	RCALL SUBOPT_0x6
0001ed d816      	RCALL SUBOPT_0xB
0001ee 91af      	POP  R26
0001ef 91bf      	POP  R27
0001f0 918f      	POP  R24
0001f1 919f      	POP  R25
0001f2 dae6      	RCALL __ADDF12
0001f3 da74      	RCALL __CFD1
0001f4 2f0e      	MOV  R16,R30
                 ; 0000 00D2         //sec = ((posisi_long[6]-48)*1000.0) + ((posisi_long[7]-48)*100.0) + ((posisi_long[8]-48)*10.0) + (posisi_long[9]-48);
                 ; 0000 00D3         sec = ((posisi_long[6]-48)*100.0) + ((posisi_long[7]-48)*10.0) + ((posisi_long[8]-48)*1.0);
                +
0001f5 e3ac     +LDI R26 , LOW ( _posisi_long + ( 6 ) )
0001f6 e0b0     +LDI R27 , HIGH ( _posisi_long + ( 6 ) )
                 	__POINTW2MN _posisi_long,6
0001f7 d7f6      	RCALL SUBOPT_0x6
0001f8 d7fb      	RCALL SUBOPT_0x8
0001f9 d7fd      	RCALL SUBOPT_0x9
0001fa 937f      	PUSH R23
0001fb 936f      	PUSH R22
0001fc 93ff      	PUSH R31
0001fd 93ef      	PUSH R30
                +
0001fe e3ad     +LDI R26 , LOW ( _posisi_long + ( 7 ) )
0001ff e0b0     +LDI R27 , HIGH ( _posisi_long + ( 7 ) )
                 	__POINTW2MN _posisi_long,7
000200 d7ed      	RCALL SUBOPT_0x6
000201 d7fb      	RCALL SUBOPT_0xA
000202 91af      	POP  R26
000203 91bf      	POP  R27
000204 918f      	POP  R24
000205 919f      	POP  R25
000206 dad2      	RCALL __ADDF12
000207 937f      	PUSH R23
000208 936f      	PUSH R22
000209 93ff      	PUSH R31
00020a 93ef      	PUSH R30
                +
00020b e3ae     +LDI R26 , LOW ( _posisi_long + ( 8 ) )
00020c e0b0     +LDI R27 , HIGH ( _posisi_long + ( 8 ) )
                 	__POINTW2MN _posisi_long,8
00020d d7e0      	RCALL SUBOPT_0x6
00020e d7f5      	RCALL SUBOPT_0xB
00020f 91af      	POP  R26
000210 91bf      	POP  R27
000211 918f      	POP  R24
000212 919f      	POP  R25
000213 dac5      	RCALL __ADDF12
000214 da53      	RCALL __CFD1
000215 019f      	MOVW R18,R30
                 ; 0000 00D4         //sec = ((posisi_long[6]-48)*10.0) + (posisi_long[7]-48);
                 ; 0000 00D5 
                 ; 0000 00D6         if(posisi_long[9]=='E') sign = 1.0;
000216 d85a      	RCALL SUBOPT_0x1A
000217 34e5      	CPI  R30,LOW(0x45)
000218 f411      	BRNE _0x25
000219 d7f5      	RCALL SUBOPT_0xD
00021a c001      	RJMP _0x1A3
                 ; 0000 00D7         else			sign = -1.0;
                 _0x25:
00021b d7f8      	RCALL SUBOPT_0xE
                 _0x1A3:
00021c 2f5e      	MOV  R21,R30
                 ; 0000 00D8 
                 ; 0000 00D9         //f_lon = (deg + (min/60.0) + (sec/360000.0));
                 ; 0000 00DA         f_lon = (deg + (min/60.0) + (0.61*sec/36000.0));
00021d d7fb      	RCALL SUBOPT_0xF
00021e 27bb      	CLR  R27
00021f 2788      	CLR  R24
000220 2799      	CLR  R25
000221 dcad      	RCALL __CDF2
000222 dab6      	RCALL __ADDF12
000223 937f      	PUSH R23
000224 936f      	PUSH R22
000225 93ff      	PUSH R31
000226 93ef      	PUSH R30
000227 01f9      	MOVW R30,R18
000228 dbcd      	RCALL __CWD1
000229 da75      	RCALL __CDF1
                +
00022a efa6     +LDI R26 , LOW ( 0x3F1C28F6 )
00022b e2b8     +LDI R27 , HIGH ( 0x3F1C28F6 )
00022c e18c     +LDI R24 , BYTE3 ( 0x3F1C28F6 )
00022d e39f     +LDI R25 , BYTE4 ( 0x3F1C28F6 )
                 	__GETD2N 0x3F1C28F6
00022e d7f5      	RCALL SUBOPT_0x10
00022f 91af      	POP  R26
000230 91bf      	POP  R27
000231 918f      	POP  R24
000232 919f      	POP  R25
000233 d841      	RCALL SUBOPT_0x1B
                 ; 0000 00DB         //f_lon = (deg + (min/60.0) + (sec/3600.0));
                 ; 0000 00DC         lon = 190463 * (180 + (f_lon * sign));
000234 2fe5      	MOV  R30,R21
000235 d845      	RCALL SUBOPT_0x1C
000236 d7bd      	RCALL SUBOPT_0x8
000237 daf1      	RCALL __MULF12
                +
000238 e0a0     +LDI R26 , LOW ( 0x43340000 )
000239 e0b0     +LDI R27 , HIGH ( 0x43340000 )
00023a e384     +LDI R24 , BYTE3 ( 0x43340000 )
00023b e493     +LDI R25 , BYTE4 ( 0x43340000 )
                 	__GETD2N 0x43340000
00023c da9c      	RCALL __ADDF12
                +
00023d eca0     +LDI R26 , LOW ( 0x4839FFC0 )
00023e efbf     +LDI R27 , HIGH ( 0x4839FFC0 )
00023f e389     +LDI R24 , BYTE3 ( 0x4839FFC0 )
000240 e498     +LDI R25 , BYTE4 ( 0x4839FFC0 )
                 	__GETD2N 0x4839FFC0
000241 dae7      	RCALL __MULF12
                +
000242 87ea     +STD Y + 10 , R30
000243 87fb     +STD Y + 10 + 1 , R31
000244 876c     +STD Y + 10 + 2 , R22
000245 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
                 ; 0000 00DD 
                 ; 0000 00DE         comp_long[0] = (lon/(91*91*91))+33;
                +
000246 85aa     +LDD R26 , Y + 10
000247 85bb     +LDD R27 , Y + 10 + 1
000248 858c     +LDD R24 , Y + 10 + 2
000249 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
00024a d7ec      	RCALL SUBOPT_0x13
00024b d7f0      	RCALL SUBOPT_0x14
00024c e9a3      	LDI  R26,LOW(_comp_long)
00024d e0b3      	LDI  R27,HIGH(_comp_long)
00024e d81f      	RCALL SUBOPT_0x19
                 ; 0000 00DF         comp_long[1] = ((fmod(lon,(91*91*91)))/(91*91))+33;
00024f d830      	RCALL SUBOPT_0x1D
000250 d7fa      	RCALL SUBOPT_0x16
                +
000251 e9a4     +LDI R26 , LOW ( _comp_long + ( 1 ) )
000252 e0b3     +LDI R27 , HIGH ( _comp_long + ( 1 ) )
                 	__POINTW2MN _comp_long,1
000253 d81a      	RCALL SUBOPT_0x19
                 ; 0000 00E0         comp_long[2] = ((fmod(lon,(91*91)))/91)+33;
000254 d82b      	RCALL SUBOPT_0x1D
000255 d7ff      	RCALL SUBOPT_0x17
                +
000256 e9a5     +LDI R26 , LOW ( _comp_long + ( 2 ) )
000257 e0b3     +LDI R27 , HIGH ( _comp_long + ( 2 ) )
                 	__POINTW2MN _comp_long,2
000258 d815      	RCALL SUBOPT_0x19
                 ; 0000 00E1         comp_long[3] = (fmod(lon,91))+33;
000259 d826      	RCALL SUBOPT_0x1D
00025a d807      	RCALL SUBOPT_0x18
                +
00025b e9a6     +LDI R26 , LOW ( _comp_long + ( 3 ) )
00025c e0b3     +LDI R27 , HIGH ( _comp_long + ( 3 ) )
                 	__POINTW2MN _comp_long,3
00025d d810      	RCALL SUBOPT_0x19
                 ; 0000 00E2 }
00025e dcba      	RCALL __LOADLOCR6
00025f 962e      	ADIW R28,14
000260 9508      	RET
                 ;
                 ;void base91_alt(void)
                 ; 0000 00E5 {
                 _base91_alt:
                 ; 0000 00E6 	int alt;
                 ; 0000 00E7 
                 ; 0000 00E8         alt = (500.5*log(ketinggian*1.0));
000261 dcb4      	RCALL __SAVELOCR2
                 ;	alt -> R16,R17
000262 e0a4      	LDI  R26,LOW(_ketinggian)
000263 e0b0      	LDI  R27,HIGH(_ketinggian)
000264 dc7a      	RCALL __EEPROMRDW
000265 2766      	CLR  R22
000266 2777      	CLR  R23
000267 da37      	RCALL __CDF1
000268 d81d      	RCALL SUBOPT_0x1E
000269 dabf      	RCALL __MULF12
00026a dc5d      	RCALL __PUTPARD1
00026b d6cb      	RCALL _log
                +
00026c e0a0     +LDI R26 , LOW ( 0x43FA4000 )
00026d e4b0     +LDI R27 , HIGH ( 0x43FA4000 )
00026e ef8a     +LDI R24 , BYTE3 ( 0x43FA4000 )
00026f e493     +LDI R25 , BYTE4 ( 0x43FA4000 )
                 	__GETD2N 0x43FA4000
000270 dab8      	RCALL __MULF12
000271 d9f6      	RCALL __CFD1
000272 018f      	MOVW R16,R30
                 ; 0000 00E9         comp_cst[0] = (alt/91)+33;
000273 01d8      	MOVW R26,R16
000274 e5eb      	LDI  R30,LOW(91)
000275 e0f0      	LDI  R31,HIGH(91)
000276 dbb8      	RCALL __DIVW21
000277 5def      	SUBI R30,-LOW(33)
000278 93e0 0397 	STS  _comp_cst,R30
                 ; 0000 00EA         comp_cst[1] = (alt%91)+33;
00027a 01d8      	MOVW R26,R16
00027b e5eb      	LDI  R30,LOW(91)
00027c e0f0      	LDI  R31,HIGH(91)
00027d dbec      	RCALL __MODW21
00027e 5def      	SUBI R30,-LOW(33)
                +
00027f 93e0 0398+STS _comp_cst + ( 1 ) , R30
                 	__PUTB1MN _comp_cst,1
                 ; 0000 00EB }
000281 dc9e      	RCALL __LOADLOCR2P
000282 9508      	RET
                 ;
                 ;void kirim_add_aprs(void)
                 ; 0000 00EE {
                 _kirim_add_aprs:
                 ; 0000 00EF 	char i;
                 ; 0000 00F0 
                 ; 0000 00F1         for(i=0;i<7;i++)kirim_karakter(add_aprs[i]);
000283 931a      	ST   -Y,R17
                 ;	i -> R17
000284 e010      	LDI  R17,LOW(0)
                 _0x28:
000285 3017      	CPI  R17,7
000286 f434      	BRGE _0x29
000287 d803      	RCALL SUBOPT_0x1F
000288 5faa      	SUBI R26,LOW(-_add_aprs)
000289 4fbf      	SBCI R27,HIGH(-_add_aprs)
00028a d803      	RCALL SUBOPT_0x20
00028b 5f1f      	SUBI R17,-1
00028c cff8      	RJMP _0x28
                 _0x29:
                 ; 0000 00F2 }
00028d c24e      	RJMP _0x20A0006
                 ;
                 ;void kirim_ax25_head(void)
                 ; 0000 00F5 {
                 _kirim_ax25_head:
                 ; 0000 00F6 	char i;
                 ; 0000 00F7 
                 ; 0000 00F8         for(i=0;i<6;i++)kirim_karakter(mycall[i]<<1);
00028e 931a      	ST   -Y,R17
                 ;	i -> R17
00028f e010      	LDI  R17,LOW(0)
                 _0x2B:
000290 3016      	CPI  R17,6
000291 f42c      	BRGE _0x2C
000292 d7f8      	RCALL SUBOPT_0x1F
000293 d7fd      	RCALL SUBOPT_0x21
000294 d800      	RCALL SUBOPT_0x22
000295 5f1f      	SUBI R17,-1
000296 cff9      	RJMP _0x2B
                 _0x2C:
                 ; 0000 00F9 if(((mydigi1[0]>47)&&(mydigi1[0]<58))||((mydigi1[0]>64)&&(mydigi1[0]<91)))
000297 e1a5      	LDI  R26,LOW(_mydigi1)
000298 e0b0      	LDI  R27,HIGH(_mydigi1)
000299 dc49      	RCALL __EEPROMRDB
00029a 33e0      	CPI  R30,LOW(0x30)
00029b f010      	BRLO _0x2E
00029c 33ea      	CPI  R30,LOW(0x3A)
00029d f028      	BRLO _0x30
                 _0x2E:
00029e 34e1      	CPI  R30,LOW(0x41)
00029f f010      	BRLO _0x31
0002a0 35eb      	CPI  R30,LOW(0x5B)
0002a1 f008      	BRLO _0x30
                 _0x31:
0002a2 c040      	RJMP _0x2D
                 _0x30:
                 ; 0000 00FA         {
                 ; 0000 00FB         	kirim_karakter(mycall[6]<<1);
0002a3 d7f4      	RCALL SUBOPT_0x23
0002a4 d7f0      	RCALL SUBOPT_0x22
                 ; 0000 00FC                 for(i=0;i<6;i++)kirim_karakter(mydigi1[i]<<1);
0002a5 e010      	LDI  R17,LOW(0)
                 _0x35:
0002a6 3016      	CPI  R17,6
0002a7 f42c      	BRGE _0x36
0002a8 d7e2      	RCALL SUBOPT_0x1F
0002a9 d7f2      	RCALL SUBOPT_0x24
0002aa d7ea      	RCALL SUBOPT_0x22
0002ab 5f1f      	SUBI R17,-1
0002ac cff9      	RJMP _0x35
                 _0x36:
                 ; 0000 00FD if(((mydigi2[0]>47)&&(mydigi2[0]<58))||((mydigi2[0]>64)&&(mydigi2[0]<91)))
0002ad e1ad      	LDI  R26,LOW(_mydigi2)
0002ae e0b0      	LDI  R27,HIGH(_mydigi2)
0002af dc33      	RCALL __EEPROMRDB
0002b0 33e0      	CPI  R30,LOW(0x30)
0002b1 f010      	BRLO _0x38
0002b2 33ea      	CPI  R30,LOW(0x3A)
0002b3 f028      	BRLO _0x3A
                 _0x38:
0002b4 34e1      	CPI  R30,LOW(0x41)
0002b5 f010      	BRLO _0x3B
0002b6 35eb      	CPI  R30,LOW(0x5B)
0002b7 f008      	BRLO _0x3A
                 _0x3B:
0002b8 c027      	RJMP _0x37
                 _0x3A:
                 ; 0000 00FE         	{
                 ; 0000 00FF         		kirim_karakter(mydigi1[6]<<1);
0002b9 d7e6      	RCALL SUBOPT_0x25
0002ba d7da      	RCALL SUBOPT_0x22
                 ; 0000 0100                 	for(i=0;i<6;i++)kirim_karakter(mydigi2[i]<<1);
0002bb e010      	LDI  R17,LOW(0)
                 _0x3F:
0002bc 3016      	CPI  R17,6
0002bd f42c      	BRGE _0x40
0002be d7cc      	RCALL SUBOPT_0x1F
0002bf d7e4      	RCALL SUBOPT_0x26
0002c0 d7d4      	RCALL SUBOPT_0x22
0002c1 5f1f      	SUBI R17,-1
0002c2 cff9      	RJMP _0x3F
                 _0x40:
                 ; 0000 0101 if(((mydigi3[0]>47)&&(mydigi3[0]<58))||((mydigi3[0]>64)&&(mydigi3[0]<91)))
0002c3 e2a5      	LDI  R26,LOW(_mydigi3)
0002c4 e0b0      	LDI  R27,HIGH(_mydigi3)
0002c5 dc1d      	RCALL __EEPROMRDB
0002c6 33e0      	CPI  R30,LOW(0x30)
0002c7 f010      	BRLO _0x42
0002c8 33ea      	CPI  R30,LOW(0x3A)
0002c9 f028      	BRLO _0x44
                 _0x42:
0002ca 34e1      	CPI  R30,LOW(0x41)
0002cb f010      	BRLO _0x45
0002cc 35eb      	CPI  R30,LOW(0x5B)
0002cd f008      	BRLO _0x44
                 _0x45:
0002ce c00d      	RJMP _0x41
                 _0x44:
                 ; 0000 0102         		{
                 ; 0000 0103         			kirim_karakter(mydigi2[6]<<1);
0002cf d7d8      	RCALL SUBOPT_0x27
0002d0 dc12      	RCALL __EEPROMRDB
0002d1 d7c3      	RCALL SUBOPT_0x22
                 ; 0000 0104                 		for(i=0;i<6;i++)kirim_karakter(mydigi3[i]<<1);
0002d2 e010      	LDI  R17,LOW(0)
                 _0x49:
0002d3 3016      	CPI  R17,6
0002d4 f42c      	BRGE _0x4A
0002d5 d7b5      	RCALL SUBOPT_0x1F
0002d6 d7d4      	RCALL SUBOPT_0x28
0002d7 d7bd      	RCALL SUBOPT_0x22
0002d8 5f1f      	SUBI R17,-1
0002d9 cff9      	RJMP _0x49
                 _0x4A:
                 ; 0000 0105 kirim_karakter((mydigi3[6]<<1)+1);
0002da d7d4      	RCALL SUBOPT_0x29
0002db c001      	RJMP _0x1A4
                 ; 0000 0106         		}
                 ; 0000 0107         		else
                 _0x41:
                 ; 0000 0108         		{
                 ; 0000 0109         			kirim_karakter((mydigi2[6]<<1)+1);
0002dc d7cb      	RCALL SUBOPT_0x27
                 _0x1A4:
0002dd dc05      	RCALL __EEPROMRDB
0002de d7d3      	RCALL SUBOPT_0x2A
                 ; 0000 010A         		}
                 ; 0000 010B         	}
                 ; 0000 010C         	else
0002df c002      	RJMP _0x4C
                 _0x37:
                 ; 0000 010D         	{
                 ; 0000 010E         		kirim_karakter((mydigi1[6]<<1)+1);
0002e0 d7bf      	RCALL SUBOPT_0x25
0002e1 d7d0      	RCALL SUBOPT_0x2A
                 ; 0000 010F         	}
                 _0x4C:
                 ; 0000 0110         }
                 ; 0000 0111         else
0002e2 c002      	RJMP _0x4D
                 _0x2D:
                 ; 0000 0112         {
                 ; 0000 0113         	kirim_karakter((mycall[6]<<1)+1);
0002e3 d7b4      	RCALL SUBOPT_0x23
0002e4 d7cd      	RCALL SUBOPT_0x2A
                 ; 0000 0114         }
                 _0x4D:
                 ; 0000 0115 	kirim_karakter(CONTROL_FIELD_);
0002e5 e0e3      	LDI  R30,LOW(3)
0002e6 d7cf      	RCALL SUBOPT_0x2B
                 ; 0000 0116 	kirim_karakter(PROTOCOL_ID_);
0002e7 efe0      	LDI  R30,LOW(240)
0002e8 d7cd      	RCALL SUBOPT_0x2B
                 ; 0000 0117 }
0002e9 c1f2      	RJMP _0x20A0006
                 ;
                 ;
                 ;/***************************************************************************************/
                 ;	void 			kirim_paket(void)
                 ; 0000 011C /***************************************************************************************/
                 ; 0000 011D {
                 _kirim_paket:
                 ; 0000 011E 	char i;
                 ; 0000 011F 
                 ; 0000 0120         crc = 0xFFFF;
0002ea 931a      	ST   -Y,R17
                 ;	i -> R17
0002eb efef      	LDI  R30,LOW(65535)
0002ec efff      	LDI  R31,HIGH(65535)
0002ed 014f      	MOVW R8,R30
                 ; 0000 0121 	beacon_stat++;
0002ee e4a6      	LDI  R26,LOW(_beacon_stat)
0002ef e0b0      	LDI  R27,HIGH(_beacon_stat)
0002f0 dbf2      	RCALL __EEPROMRDB
0002f1 5fef      	SUBI R30,-LOW(1)
0002f2 dc04      	RCALL __EEPROMWRB
0002f3 50e1      	SUBI R30,LOW(1)
                 ; 0000 0122 	PTT = 1;
0002f4 9ac5      	SBI  0x18,5
                 ; 0000 0123         MERAH=1;
0002f5 d7c2      	RCALL SUBOPT_0x2C
                 ; 0000 0124         HIJAU=0;
                 ; 0000 0125 	delay_ms(100);
0002f6 e6e4      	LDI  R30,LOW(100)
0002f7 e0f0      	LDI  R31,HIGH(100)
0002f8 d6c5      	RCALL SUBOPT_0x2
                 ; 0000 0126 
                 ; 0000 0127         base91_lat();
0002f9 de45      	RCALL _base91_lat
                 ; 0000 0128         base91_long();
0002fa dec4      	RCALL _base91_long
                 ; 0000 0129         base91_alt();
0002fb df65      	RCALL _base91_alt
                 ; 0000 012A         read_volt();
0002fc de19      	RCALL _read_volt
                 ; 0000 012B         read_temp();
0002fd ddf1      	RCALL _read_temp
                 ; 0000 012C 
                 ; 0000 012D         for(i=0;i<TX_DELAY_;i++)kirim_karakter(FLAG_);
0002fe e010      	LDI  R17,LOW(0)
                 _0x55:
0002ff 321d      	CPI  R17,45
000300 f424      	BRGE _0x56
000301 e7ee      	LDI  R30,LOW(126)
000302 d7b3      	RCALL SUBOPT_0x2B
000303 5f1f      	SUBI R17,-1
000304 cffa      	RJMP _0x55
                 _0x56:
                 ; 0000 012F bit_stuff = 0;
000305 d7b5      	RCALL SUBOPT_0x2D
                 ; 0000 0130 
                 ; 0000 0131         kirim_add_aprs();
000306 df7c      	RCALL _kirim_add_aprs
                 ; 0000 0132         kirim_ax25_head();
000307 df86      	RCALL _kirim_ax25_head
                 ; 0000 0133 
                 ; 0000 0134         if(beacon_stat == timeIntv)
000308 e4a6      	LDI  R26,LOW(_beacon_stat)
000309 e0b0      	LDI  R27,HIGH(_beacon_stat)
00030a dbd8      	RCALL __EEPROMRDB
00030b 2e0e      	MOV  R0,R30
00030c d7b2      	RCALL SUBOPT_0x2E
00030d 2da0      	MOV  R26,R0
00030e d6a9      	RCALL SUBOPT_0x1
00030f f479      	BRNE _0x57
                 ; 0000 0135         {
                 ; 0000 0136         	kirim_karakter(TD_STATUS_);
000310 e3ee      	LDI  R30,LOW(62)
000311 d7a4      	RCALL SUBOPT_0x2B
                 ; 0000 0137 		for(i=0;i<statsize;i++)kirim_karakter(status[i]);
000312 e010      	LDI  R17,LOW(0)
                 _0x59:
000313 d7af      	RCALL SUBOPT_0x2F
000314 f434      	BRGE _0x5A
000315 d775      	RCALL SUBOPT_0x1F
000316 55a3      	SUBI R26,LOW(-_status)
000317 4fbf      	SBCI R27,HIGH(-_status)
000318 d775      	RCALL SUBOPT_0x20
000319 5f1f      	SUBI R17,-1
00031a cff8      	RJMP _0x59
                 _0x5A:
                 ; 0000 0138 beacon_stat = 0;
00031b e4a6      	LDI  R26,LOW(_beacon_stat)
00031c e0b0      	LDI  R27,HIGH(_beacon_stat)
00031d d7aa      	RCALL SUBOPT_0x30
                 ; 0000 0139 
                 ; 0000 013A                 goto lompat;
00031e c08c      	RJMP _0x5B
                 ; 0000 013B         }
                 ; 0000 013C         kirim_karakter(TD_POSISI_);
                 _0x57:
00031f e2e1      	LDI  R30,LOW(33)
000320 d795      	RCALL SUBOPT_0x2B
                 ; 0000 013D         if(compstat=='Y')
000321 e1a3      	LDI  R26,LOW(_compstat)
000322 e0b1      	LDI  R27,HIGH(_compstat)
000323 d691      	RCALL SUBOPT_0x0
000324 f511      	BRNE _0x5C
                 ; 0000 013E         {
                 ; 0000 013F         	kirim_karakter(SYM_TAB_OVL_);
000325 e0a2      	LDI  R26,LOW(_SYM_TAB_OVL_)
000326 e0b0      	LDI  R27,HIGH(_SYM_TAB_OVL_)
000327 d766      	RCALL SUBOPT_0x20
                 ; 0000 0140         	for(i=0;i<4;i++)kirim_karakter(comp_lat[i]);
000328 e010      	LDI  R17,LOW(0)
                 _0x5E:
000329 3014      	CPI  R17,4
00032a f434      	BRGE _0x5F
00032b d79f      	RCALL SUBOPT_0x31
00032c 57e1      	SUBI R30,LOW(-_comp_lat)
00032d 4ffc      	SBCI R31,HIGH(-_comp_lat)
00032e d79f      	RCALL SUBOPT_0x32
00032f 5f1f      	SUBI R17,-1
000330 cff8      	RJMP _0x5E
                 _0x5F:
                 ; 0000 0141 for(i=0;i<4;i++)kirim_karakter(comp_long[i]);
000331 e010      	LDI  R17,LOW(0)
                 _0x61:
000332 3014      	CPI  R17,4
000333 f434      	BRGE _0x62
000334 d796      	RCALL SUBOPT_0x31
000335 56ed      	SUBI R30,LOW(-_comp_long)
000336 4ffc      	SBCI R31,HIGH(-_comp_long)
000337 d796      	RCALL SUBOPT_0x32
000338 5f1f      	SUBI R17,-1
000339 cff8      	RJMP _0x61
                 _0x62:
                 ; 0000 0142 kirim_karakter(SYM_CODE_);
00033a e0a3      	LDI  R26,LOW(_SYM_CODE_)
00033b e0b0      	LDI  R27,HIGH(_SYM_CODE_)
00033c d751      	RCALL SUBOPT_0x20
                 ; 0000 0143         	for(i=0;i<3;i++)kirim_karakter(comp_cst[i]);
00033d e010      	LDI  R17,LOW(0)
                 _0x64:
00033e 3013      	CPI  R17,3
00033f f434      	BRGE _0x65
000340 d78a      	RCALL SUBOPT_0x31
000341 56e9      	SUBI R30,LOW(-_comp_cst)
000342 4ffc      	SBCI R31,HIGH(-_comp_cst)
000343 d78a      	RCALL SUBOPT_0x32
000344 5f1f      	SUBI R17,-1
000345 cff8      	RJMP _0x64
                 _0x65:
                 ; 0000 0144 }
                 ; 0000 0145         else
000346 c031      	RJMP _0x66
                 _0x5C:
                 ; 0000 0146         {
                 ; 0000 0147         	for(i=0;i<7;i++)kirim_karakter(posisi_lat[i]);
000347 e010      	LDI  R17,LOW(0)
                 _0x68:
000348 3017      	CPI  R17,7
000349 f434      	BRGE _0x69
00034a d740      	RCALL SUBOPT_0x1F
00034b 5da3      	SUBI R26,LOW(-_posisi_lat)
00034c 4fbf      	SBCI R27,HIGH(-_posisi_lat)
00034d d740      	RCALL SUBOPT_0x20
00034e 5f1f      	SUBI R17,-1
00034f cff8      	RJMP _0x68
                 _0x69:
                 ; 0000 0148 kirim_karakter(posisi_lat[8]);
000350 d6ba      	RCALL SUBOPT_0xC
000351 d764      	RCALL SUBOPT_0x2B
                 ; 0000 0149 		kirim_karakter(SYM_TAB_OVL_);
000352 e0a2      	LDI  R26,LOW(_SYM_TAB_OVL_)
000353 e0b0      	LDI  R27,HIGH(_SYM_TAB_OVL_)
000354 d739      	RCALL SUBOPT_0x20
                 ; 0000 014A 		for(i=0;i<8;i++)kirim_karakter(posisi_long[i]);
000355 e010      	LDI  R17,LOW(0)
                 _0x6B:
000356 3018      	CPI  R17,8
000357 f434      	BRGE _0x6C
000358 d732      	RCALL SUBOPT_0x1F
000359 5caa      	SUBI R26,LOW(-_posisi_long)
00035a 4fbf      	SBCI R27,HIGH(-_posisi_long)
00035b d732      	RCALL SUBOPT_0x20
00035c 5f1f      	SUBI R17,-1
00035d cff8      	RJMP _0x6B
                 _0x6C:
                 ; 0000 014B kirim_karakter(posisi_long[9]);
00035e d712      	RCALL SUBOPT_0x1A
00035f d756      	RCALL SUBOPT_0x2B
                 ; 0000 014C 		kirim_karakter(SYM_CODE_);
000360 e0a3      	LDI  R26,LOW(_SYM_CODE_)
000361 e0b0      	LDI  R27,HIGH(_SYM_CODE_)
000362 d72b      	RCALL SUBOPT_0x20
                 ; 0000 014D         	if(sendalt=='Y')
000363 e1a4      	LDI  R26,LOW(_sendalt)
000364 e0b1      	LDI  R27,HIGH(_sendalt)
000365 d64f      	RCALL SUBOPT_0x0
000366 f489      	BRNE _0x6D
                 ; 0000 014E         	{
                 ; 0000 014F                 	//for(i=0;i<9;i++)kirim_karakter(head_norm_alt[i]);
                 ; 0000 0150                         kirim_karakter('/');
000367 e2ef      	LDI  R30,LOW(47)
000368 d74d      	RCALL SUBOPT_0x2B
                 ; 0000 0151                         kirim_karakter('A');
000369 e4e1      	LDI  R30,LOW(65)
00036a d74b      	RCALL SUBOPT_0x2B
                 ; 0000 0152                         kirim_karakter('=');
00036b e3ed      	LDI  R30,LOW(61)
00036c d749      	RCALL SUBOPT_0x2B
                 ; 0000 0153                         for(i=0;i<6;i++)kirim_karakter(altitude[i]);
00036d e010      	LDI  R17,LOW(0)
                 _0x6F:
00036e 3016      	CPI  R17,6
00036f f434      	BRGE _0x70
000370 d71a      	RCALL SUBOPT_0x1F
000371 5ca0      	SUBI R26,LOW(-_altitude)
000372 4fbf      	SBCI R27,HIGH(-_altitude)
000373 d71a      	RCALL SUBOPT_0x20
000374 5f1f      	SUBI R17,-1
000375 cff8      	RJMP _0x6F
                 _0x70:
                 ; 0000 0154 kirim_karakter(' ');
000376 e2e0      	LDI  R30,LOW(32)
000377 d73e      	RCALL SUBOPT_0x2B
                 ; 0000 0155         	}
                 ; 0000 0156         }
                 _0x6D:
                 _0x66:
                 ; 0000 0157 
                 ; 0000 0158         /*kirim_karakter(SYM_TAB_OVL_);
                 ; 0000 0159         for(i=0;i<4;i++)kirim_karakter(comp_lat[i]);
                 ; 0000 015A         for(i=0;i<4;i++)kirim_karakter(comp_long[i]);
                 ; 0000 015B 	kirim_karakter(SYM_CODE_);
                 ; 0000 015C         for(i=0;i<3;i++)kirim_karakter(comp_cst[i]); */
                 ; 0000 015D         if(tempincomm=='Y')
000378 e4a8      	LDI  R26,LOW(_tempincomm)
000379 e0b0      	LDI  R27,HIGH(_tempincomm)
00037a d63a      	RCALL SUBOPT_0x0
00037b f489      	BRNE _0x71
                 ; 0000 015E         {for(i=0;i<6;i++)if(temp[i]!=' ')kirim_karakter(temp[i]);
00037c e010      	LDI  R17,LOW(0)
                 _0x73:
00037d 3016      	CPI  R17,6
00037e f464      	BRGE _0x74
00037f d74b      	RCALL SUBOPT_0x31
000380 58e0      	SUBI R30,LOW(-_temp)
000381 4ffc      	SBCI R31,HIGH(-_temp)
000382 81a0      	LD   R26,Z
000383 32a0      	CPI  R26,LOW(0x20)
000384 f021      	BREQ _0x75
000385 d745      	RCALL SUBOPT_0x31
000386 58e0      	SUBI R30,LOW(-_temp)
000387 4ffc      	SBCI R31,HIGH(-_temp)
000388 d745      	RCALL SUBOPT_0x32
                 ; 0000 015F         kirim_karakter(' ');}
                 _0x75:
000389 5f1f      	SUBI R17,-1
00038a cff2      	RJMP _0x73
                 _0x74:
00038b e2e0      	LDI  R30,LOW(32)
00038c d729      	RCALL SUBOPT_0x2B
                 ; 0000 0160         if(battvoltincomm=='Y')
                 _0x71:
00038d e4a7      	LDI  R26,LOW(_battvoltincomm)
00038e e0b0      	LDI  R27,HIGH(_battvoltincomm)
00038f d625      	RCALL SUBOPT_0x0
000390 f489      	BRNE _0x76
                 ; 0000 0161         {for(i=0;i<6;i++)if(volt[i]!=' ')kirim_karakter(volt[i]);
000391 e010      	LDI  R17,LOW(0)
                 _0x78:
000392 3016      	CPI  R17,6
000393 f464      	BRGE _0x79
000394 d736      	RCALL SUBOPT_0x31
000395 57e9      	SUBI R30,LOW(-_volt)
000396 4ffc      	SBCI R31,HIGH(-_volt)
000397 81a0      	LD   R26,Z
000398 32a0      	CPI  R26,LOW(0x20)
000399 f021      	BREQ _0x7A
00039a d730      	RCALL SUBOPT_0x31
00039b 57e9      	SUBI R30,LOW(-_volt)
00039c 4ffc      	SBCI R31,HIGH(-_volt)
00039d d730      	RCALL SUBOPT_0x32
                 ; 0000 0162         kirim_karakter(' ');}
                 _0x7A:
00039e 5f1f      	SUBI R17,-1
00039f cff2      	RJMP _0x78
                 _0x79:
0003a0 e2e0      	LDI  R30,LOW(32)
0003a1 d714      	RCALL SUBOPT_0x2B
                 ; 0000 0163         for(i=0;i<commsize;i++)kirim_karakter(komentar[i]);
                 _0x76:
0003a2 e010      	LDI  R17,LOW(0)
                 _0x7C:
0003a3 d72c      	RCALL SUBOPT_0x33
0003a4 f434      	BRGE _0x7D
0003a5 d6e5      	RCALL SUBOPT_0x1F
0003a6 5ba7      	SUBI R26,LOW(-_komentar)
0003a7 4fbf      	SBCI R27,HIGH(-_komentar)
0003a8 d6e5      	RCALL SUBOPT_0x20
0003a9 5f1f      	SUBI R17,-1
0003aa cff8      	RJMP _0x7C
                 _0x7D:
                 ; 0000 0165 lompat:
                 _0x5B:
                 ; 0000 0166 
                 ; 0000 0167         kirim_crc();
0003ab d00e      	RCALL _kirim_crc
                 ; 0000 0168         for(i=0;i<TX_TAIL_;i++)kirim_karakter(FLAG_);
0003ac e010      	LDI  R17,LOW(0)
                 _0x7F:
0003ad 301f      	CPI  R17,15
0003ae f424      	BRGE _0x80
0003af e7ee      	LDI  R30,LOW(126)
0003b0 d705      	RCALL SUBOPT_0x2B
0003b1 5f1f      	SUBI R17,-1
0003b2 cffa      	RJMP _0x7F
                 _0x80:
                 ; 0000 016A delay_ms(50);
0003b3 e3e2      	LDI  R30,LOW(50)
0003b4 e0f0      	LDI  R31,HIGH(50)
0003b5 d608      	RCALL SUBOPT_0x2
                 ; 0000 016B         MERAH=0;
0003b6 9896      	CBI  0x12,6
                 ; 0000 016C         HIJAU=0;
0003b7 9897      	CBI  0x12,7
                 ; 0000 016D         PTT = 0;
0003b8 98c5      	CBI  0x18,5
                 ; 0000 016E 
                 ; 0000 016F 
                 ; 0000 0170 }       // EndOf void kirim_paket(void)
0003b9 c122      	RJMP _0x20A0006
                 ;
                 ;
                 ;/***************************************************************************************/
                 ;	void 			kirim_crc(void)
                 ; 0000 0175 /***************************************************************************************/
                 ; 0000 0176 {
                 _kirim_crc:
                 ; 0000 0177 	static unsigned char crc_lo;
                 ; 0000 0178 	static unsigned char crc_hi;
                 ; 0000 0179 
                 ; 0000 017A         crc_lo = crc ^ 0xFF;
0003ba efef      	LDI  R30,LOW(255)
0003bb 25e8      	EOR  R30,R8
0003bc 93e0 039a 	STS  _crc_lo_S000000A000,R30
                 ; 0000 017B 	crc_hi = (crc >> 8) ^ 0xFF;
0003be 2de9      	MOV  R30,R9
0003bf 70f0      	ANDI R31,HIGH(0x0)
0003c0 efaf      	LDI  R26,LOW(255)
0003c1 27ea      	EOR  R30,R26
0003c2 93e0 039b 	STS  _crc_hi_S000000A000,R30
                 ; 0000 017C 	kirim_karakter(crc_lo);
0003c4 91e0 039a 	LDS  R30,_crc_lo_S000000A000
0003c6 d6ef      	RCALL SUBOPT_0x2B
                 ; 0000 017D 	kirim_karakter(crc_hi);
0003c7 91e0 039b 	LDS  R30,_crc_hi_S000000A000
0003c9 d6ec      	RCALL SUBOPT_0x2B
                 ; 0000 017E }       // EndOf void kirim_crc(void)
0003ca 9508      	RET
                 ;
                 ;
                 ;/***************************************************************************************/
                 ;	void 			kirim_karakter(unsigned char input)
                 ; 0000 0183 /***************************************************************************************/
                 ; 0000 0184 {
                 _kirim_karakter:
0003cb 92ff      	PUSH R15
                 ; 0000 0185 	char i;
                 ; 0000 0186 	bit in_bit;
                 ; 0000 0187 
                 ; 0000 0188         for(i=0;i<8;i++)
0003cc 931a      	ST   -Y,R17
                 ;	input -> Y+1
                 ;	i -> R17
                 ;	in_bit -> R15.0
0003cd e010      	LDI  R17,LOW(0)
                 _0x88:
0003ce 3018      	CPI  R17,8
0003cf f4f4      	BRGE _0x89
                 ; 0000 0189         {
                 ; 0000 018A         	in_bit = (input >> i) & 0x01;
0003d0 2fe1      	MOV  R30,R17
0003d1 81a9      	LDD  R26,Y+1
0003d2 da15      	RCALL __LSRB12
0003d3 fbe0      	BST  R30,0
0003d4 f8f0      	BLD  R15,0
                 ; 0000 018B 		if(input==0x7E)	{bit_stuff = 0;}
0003d5 37ae      	CPI  R26,LOW(0x7E)
0003d6 f411      	BRNE _0x8A
0003d7 d6e3      	RCALL SUBOPT_0x2D
                 ; 0000 018C 		else		{hitung_crc(in_bit);}
0003d8 c005      	RJMP _0x8B
                 _0x8A:
0003d9 e0e0      	LDI  R30,0
0003da fcf0      	SBRC R15,0
0003db e0e1      	LDI  R30,1
0003dc 93ea      	ST   -Y,R30
0003dd d014      	RCALL _hitung_crc
                 _0x8B:
                 ; 0000 018D 
                 ; 0000 018E                 if(!in_bit)
0003de fef0      	SBRS R15,0
                 ; 0000 018F                 {
                 ; 0000 0190                         ubah_nada();
0003df c00a      	RJMP _0x1A5
                 ; 0000 0191                         bit_stuff = 0;
                 ; 0000 0192                 }
                 ; 0000 0193                 else
                 ; 0000 0194                 {
                 ; 0000 0195                         set_nada(nada);
0003e0 d6f4      	RCALL SUBOPT_0x34
                 ; 0000 0196                         bit_stuff++;
0003e1 91e0 038e 	LDS  R30,_bit_stuff_G000
0003e3 5fef      	SUBI R30,-LOW(1)
0003e4 93e0 038e 	STS  _bit_stuff_G000,R30
                 ; 0000 0197                         if(bit_stuff==5)
0003e6 91a0 038e 	LDS  R26,_bit_stuff_G000
0003e8 30a5      	CPI  R26,LOW(0x5)
0003e9 f411      	BRNE _0x8E
                 ; 0000 0198                         {
                 ; 0000 0199                         	ubah_nada();
                 _0x1A5:
0003ea d01a      	RCALL _ubah_nada
                 ; 0000 019A                                 bit_stuff = 0;
0003eb d6cf      	RCALL SUBOPT_0x2D
                 ; 0000 019B                         }
                 ; 0000 019C                 }
                 _0x8E:
                 ; 0000 019D         }
0003ec 5f1f      	SUBI R17,-1
0003ed cfe0      	RJMP _0x88
                 _0x89:
                 ; 0000 019E 
                 ; 0000 019F }      // EndOf void kirim_karakter(unsigned char input)
0003ee 8118      	LDD  R17,Y+0
0003ef 9622      	ADIW R28,2
0003f0 90ff      	POP  R15
0003f1 9508      	RET
                 ;
                 ;
                 ;/***************************************************************************************/
                 ;	void 			hitung_crc(char in_crc)
                 ; 0000 01A4 /***************************************************************************************/
                 ; 0000 01A5 {
                 _hitung_crc:
                 ; 0000 01A6 	static unsigned short xor_in;
                 ; 0000 01A7 
                 ; 0000 01A8         xor_in = crc ^ in_crc;
                 ;	in_crc -> Y+0
0003f2 81e8      	LD   R30,Y
0003f3 d6e6      	RCALL SUBOPT_0x35
0003f4 25e8      	EOR  R30,R8
0003f5 25f9      	EOR  R31,R9
0003f6 93e0 039c 	STS  _xor_in_S000000C000,R30
0003f8 93f0 039d 	STS  _xor_in_S000000C000+1,R31
                 ; 0000 01A9 	crc >>= 1;
0003fa 9496      	LSR  R9
0003fb 9487      	ROR  R8
                 ; 0000 01AA         if(xor_in & 0x01) crc ^= 0x8408;
0003fc 91e0 039c 	LDS  R30,_xor_in_S000000C000
0003fe 70e1      	ANDI R30,LOW(0x1)
0003ff f021      	BREQ _0x8F
000400 e0e8      	LDI  R30,LOW(33800)
000401 e8f4      	LDI  R31,HIGH(33800)
                +
000402 268e     +EOR R8 , R30
000403 269f     +EOR R9 , R31
                 	__EORWRR 8,9,30,31
                 ; 0000 01AB 
                 ; 0000 01AC }      // EndOf void hitung_crc(char in_crc)
                 _0x8F:
000404 c44b      	RJMP _0x20A0005
                 ;
                 ;
                 ;/***************************************************************************************/
                 ;	void 			ubah_nada(void)
                 ; 0000 01B1 /***************************************************************************************/
                 ; 0000 01B2 {
                 _ubah_nada:
                 ; 0000 01B3 	if(nada ==_1200)
000405 fc20      	SBRC R2,0
000406 c002      	RJMP _0x90
                 ; 0000 01B4 	{
                 ; 0000 01B5         	nada = _2200;
000407 9468      	SET
000408 c001      	RJMP _0x1A6
                 ; 0000 01B6                 set_nada(nada);
                 ; 0000 01B7 	}
                 ; 0000 01B8         else
                 _0x90:
                 ; 0000 01B9         {
                 ; 0000 01BA                 nada = _1200;
000409 94e8      	CLT
                 _0x1A6:
00040a f820      	BLD  R2,0
                 ; 0000 01BB                 set_nada(nada);
00040b d6c9      	RCALL SUBOPT_0x34
                 ; 0000 01BC         }
                 ; 0000 01BD 
                 ; 0000 01BE }       // EndOf void ubah_nada(void)
00040c 9508      	RET
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;/***************************************************************************************/
                 ;	void 			set_nada(char i_nada)
                 ; 0000 01C6 /***************************************************************************************/
                 ; 0000 01C7 {
                 _set_nada:
                 ; 0000 01C8 	if(i_nada == _1200)
                 ;	i_nada -> Y+0
00040d 81e8      	LD   R30,Y
00040e 30e0      	CPI  R30,0
00040f f421      	BRNE _0x92
                 ; 0000 01C9     	{
                 ; 0000 01CA         	delay_us(417);
000410 d6cd      	RCALL SUBOPT_0x36
                 ; 0000 01CB         	AFOUT = 1;
000411 9ac4      	SBI  0x18,4
                 ; 0000 01CC         	delay_us(417);
000412 d6cb      	RCALL SUBOPT_0x36
                 ; 0000 01CD         	AFOUT = 0;
000413 c003      	RJMP _0x1A7
                 ; 0000 01CE     	}
                 ; 0000 01CF         else
                 _0x92:
                 ; 0000 01D0     	{
                 ; 0000 01D1         	delay_us(208);
000414 d6ce      	RCALL SUBOPT_0x37
                 ; 0000 01D2         	AFOUT = 1;
                 ; 0000 01D3         	delay_us(209);
                 ; 0000 01D4         	AFOUT = 0;
000415 98c4      	CBI  0x18,4
                 ; 0000 01D5                 delay_us(208);
000416 d6cc      	RCALL SUBOPT_0x37
                 ; 0000 01D6         	AFOUT = 1;
                 ; 0000 01D7         	delay_us(209);
                 ; 0000 01D8         	AFOUT = 0;
                 _0x1A7:
000417 98c4      	CBI  0x18,4
                 ; 0000 01D9     	}
                 ; 0000 01DA 
                 ; 0000 01DB } 	// EndOf void set_nada(char i_nada)
000418 c437      	RJMP _0x20A0005
                 ;
                 ;
                 ;/***************************************************************************************/
                 ;	void 			getComma(void)
                 ; 0000 01E0 /***************************************************************************************/
                 ; 0000 01E1 {
                 _getComma:
                 ; 0000 01E2 	while(getchar() != ',');
                 _0xA0:
000419 d42e      	RCALL _getchar
00041a 32ec      	CPI  R30,LOW(0x2C)
00041b f7e9      	BRNE _0xA0
                 ; 0000 01E3 }      	// EndOf void getComma(void)
00041c 9508      	RET
                 ;
                 ;void mem_display(void)
                 ; 0000 01E6 {
                 _mem_display:
                 ; 0000 01E7 	// configuration ECHO
                 ; 0000 01E8         // mycall & SSID
                 ; 0000 01E9         char k;
                 ; 0000 01EA         char f[];
                 ; 0000 01EB 
                 ; 0000 01EC         #asm("cli")
00041d 931a      	ST   -Y,R17
                 ;	k -> R17
                 ;	f -> Y+1
00041e 94f8      	cli
                 ; 0000 01ED 
                 ; 0000 01EE         MERAH=1;
00041f d698      	RCALL SUBOPT_0x2C
                 ; 0000 01EF         HIJAU=0;
                 ; 0000 01F0 
                 ; 0000 01F1         putchar(13);
000420 d6cc      	RCALL SUBOPT_0x38
                 ; 0000 01F2         putchar(',');
000421 d6ce      	RCALL SUBOPT_0x39
                 ; 0000 01F3         for(k=0;k<6;k++)if((mycall[k])!=' ')putchar(mycall[k]);
000422 e010      	LDI  R17,LOW(0)
                 _0xA8:
000423 3016      	CPI  R17,6
000424 f44c      	BRGE _0xA9
000425 d665      	RCALL SUBOPT_0x1F
000426 d66a      	RCALL SUBOPT_0x21
000427 32e0      	CPI  R30,LOW(0x20)
000428 f019      	BREQ _0xAA
000429 d661      	RCALL SUBOPT_0x1F
00042a d666      	RCALL SUBOPT_0x21
00042b d6c7      	RCALL SUBOPT_0x3A
                 ; 0000 01F4         if((mycall[6])>'0')
                 _0xAA:
00042c 5f1f      	SUBI R17,-1
00042d cff5      	RJMP _0xA8
                 _0xA9:
00042e d669      	RCALL SUBOPT_0x23
00042f 33e1      	CPI  R30,LOW(0x31)
000430 f028      	BRLO _0xAB
                 ; 0000 01F5         {
                 ; 0000 01F6         	putchar('-');
000431 d6c3      	RCALL SUBOPT_0x3B
                 ; 0000 01F7                 itoa(mycall[6]-48,f);
                +
000432 e1a3     +LDI R26 , LOW ( _mycall + ( 6 ) )
000433 e0b0     +LDI R27 , HIGH ( _mycall + ( 6 ) )
                 	__POINTW2MN _mycall,6
000434 d5b9      	RCALL SUBOPT_0x6
000435 d6c1      	RCALL SUBOPT_0x3C
                 ; 0000 01F8                 puts(f);
                 ; 0000 01F9         }
                 ; 0000 01FA 
                 ; 0000 01FB         // digipath
                 ; 0000 01FC         putchar(',');
                 _0xAB:
000436 d6b9      	RCALL SUBOPT_0x39
                 ; 0000 01FD         if(mydigi1[0]!=0)
000437 e1a5      	LDI  R26,LOW(_mydigi1)
000438 e0b0      	LDI  R27,HIGH(_mydigi1)
000439 d6ca      	RCALL SUBOPT_0x3D
00043a f0a1      	BREQ _0xAC
                 ; 0000 01FE         {
                 ; 0000 01FF         	for(k=0;k<6;k++)if((mydigi1[k])!=' ')putchar(mydigi1[k]);
00043b e010      	LDI  R17,LOW(0)
                 _0xAE:
00043c 3016      	CPI  R17,6
00043d f44c      	BRGE _0xAF
00043e d64c      	RCALL SUBOPT_0x1F
00043f d65c      	RCALL SUBOPT_0x24
000440 32e0      	CPI  R30,LOW(0x20)
000441 f019      	BREQ _0xB0
000442 d648      	RCALL SUBOPT_0x1F
000443 d658      	RCALL SUBOPT_0x24
000444 d6ae      	RCALL SUBOPT_0x3A
                 ; 0000 0200         	if(mydigi1[6]>'0')
                 _0xB0:
000445 5f1f      	SUBI R17,-1
000446 cff5      	RJMP _0xAE
                 _0xAF:
000447 d658      	RCALL SUBOPT_0x25
000448 33e1      	CPI  R30,LOW(0x31)
000449 f028      	BRLO _0xB1
                 ; 0000 0201         	{
                 ; 0000 0202         		putchar('-');
00044a d6aa      	RCALL SUBOPT_0x3B
                 ; 0000 0203                         itoa(mydigi1[6]-48,f);
                +
00044b e1ab     +LDI R26 , LOW ( _mydigi1 + ( 6 ) )
00044c e0b0     +LDI R27 , HIGH ( _mydigi1 + ( 6 ) )
                 	__POINTW2MN _mydigi1,6
00044d d5a0      	RCALL SUBOPT_0x6
00044e d6a8      	RCALL SUBOPT_0x3C
                 ; 0000 0204                         puts(f);
                 ; 0000 0205         	}
                 ; 0000 0206         }
                 _0xB1:
                 ; 0000 0207         if(mydigi2[0]!=0)
                 _0xAC:
00044f e1ad      	LDI  R26,LOW(_mydigi2)
000450 e0b0      	LDI  R27,HIGH(_mydigi2)
000451 d6b2      	RCALL SUBOPT_0x3D
000452 f0a9      	BREQ _0xB2
                 ; 0000 0208         {
                 ; 0000 0209         	putchar(',');
000453 d69c      	RCALL SUBOPT_0x39
                 ; 0000 020A         	for(k=0;k<6;k++)if((mydigi2[k])!=' ')putchar(mydigi2[k]);
000454 e010      	LDI  R17,LOW(0)
                 _0xB4:
000455 3016      	CPI  R17,6
000456 f44c      	BRGE _0xB5
000457 d633      	RCALL SUBOPT_0x1F
000458 d64b      	RCALL SUBOPT_0x26
000459 32e0      	CPI  R30,LOW(0x20)
00045a f019      	BREQ _0xB6
00045b d62f      	RCALL SUBOPT_0x1F
00045c d647      	RCALL SUBOPT_0x26
00045d d695      	RCALL SUBOPT_0x3A
                 ; 0000 020B         	if(mydigi2[6]>'0')
                 _0xB6:
00045e 5f1f      	SUBI R17,-1
00045f cff5      	RJMP _0xB4
                 _0xB5:
000460 d647      	RCALL SUBOPT_0x27
000461 da81      	RCALL __EEPROMRDB
000462 33e1      	CPI  R30,LOW(0x31)
000463 f020      	BRLO _0xB7
                 ; 0000 020C         	{
                 ; 0000 020D         		putchar('-');
000464 d690      	RCALL SUBOPT_0x3B
                 ; 0000 020E                         itoa(mydigi2[6]-48,f);
000465 d642      	RCALL SUBOPT_0x27
000466 d587      	RCALL SUBOPT_0x6
000467 d68f      	RCALL SUBOPT_0x3C
                 ; 0000 020F                         puts(f);
                 ; 0000 0210         	}
                 ; 0000 0211         }
                 _0xB7:
                 ; 0000 0212         if(mydigi3[0]!=0)
                 _0xB2:
000468 e2a5      	LDI  R26,LOW(_mydigi3)
000469 e0b0      	LDI  R27,HIGH(_mydigi3)
00046a d699      	RCALL SUBOPT_0x3D
00046b f0a9      	BREQ _0xB8
                 ; 0000 0213         {
                 ; 0000 0214         	putchar(',');
00046c d683      	RCALL SUBOPT_0x39
                 ; 0000 0215         	for(k=0;k<6;k++)if((mydigi3[k])!=' ')putchar(mydigi3[k]);
00046d e010      	LDI  R17,LOW(0)
                 _0xBA:
00046e 3016      	CPI  R17,6
00046f f44c      	BRGE _0xBB
000470 d61a      	RCALL SUBOPT_0x1F
000471 d639      	RCALL SUBOPT_0x28
000472 32e0      	CPI  R30,LOW(0x20)
000473 f019      	BREQ _0xBC
000474 d616      	RCALL SUBOPT_0x1F
000475 d635      	RCALL SUBOPT_0x28
000476 d67c      	RCALL SUBOPT_0x3A
                 ; 0000 0216         	if(mydigi3[6]>'0')
                 _0xBC:
000477 5f1f      	SUBI R17,-1
000478 cff5      	RJMP _0xBA
                 _0xBB:
000479 d635      	RCALL SUBOPT_0x29
00047a da68      	RCALL __EEPROMRDB
00047b 33e1      	CPI  R30,LOW(0x31)
00047c f020      	BRLO _0xBD
                 ; 0000 0217         	{
                 ; 0000 0218         		putchar('-');
00047d d677      	RCALL SUBOPT_0x3B
                 ; 0000 0219                         itoa(mydigi3[6]-48,f);
00047e d630      	RCALL SUBOPT_0x29
00047f d56e      	RCALL SUBOPT_0x6
000480 d676      	RCALL SUBOPT_0x3C
                 ; 0000 021A                         puts(f);
                 ; 0000 021B         	}
                 ; 0000 021C         }
                 _0xBD:
                 ; 0000 021D 
                 ; 0000 021E         // beacon interval
                 ; 0000 021F         putchar(',');
                 _0xB8:
000481 d66e      	RCALL SUBOPT_0x39
                 ; 0000 0220         itoa(timeIntv,f);
000482 d63c      	RCALL SUBOPT_0x2E
000483 d683      	RCALL SUBOPT_0x3E
000484 d685      	RCALL SUBOPT_0x3F
                 ; 0000 0221         puts(f);
                 ; 0000 0222 
                 ; 0000 0223 
                 ; 0000 0224         // symbol code / icon
                 ; 0000 0225        	putchar(',');
                 ; 0000 0226         putchar(SYM_CODE_);
000485 e0a3      	LDI  R26,LOW(_SYM_CODE_)
000486 e0b0      	LDI  R27,HIGH(_SYM_CODE_)
000487 d68b      	RCALL SUBOPT_0x40
                 ; 0000 0227 
                 ; 0000 0228         // symbol table / overlay
                 ; 0000 0229         putchar(',');
000488 d667      	RCALL SUBOPT_0x39
                 ; 0000 022A         putchar(SYM_TAB_OVL_);
000489 e0a2      	LDI  R26,LOW(_SYM_TAB_OVL_)
00048a e0b0      	LDI  R27,HIGH(_SYM_TAB_OVL_)
00048b d687      	RCALL SUBOPT_0x40
                 ; 0000 022B 
                 ; 0000 022C         // comment
                 ; 0000 022D         putchar(',');
00048c d663      	RCALL SUBOPT_0x39
                 ; 0000 022E         for(k=0;k<commsize;k++)
00048d e010      	LDI  R17,LOW(0)
                 _0xBF:
00048e d641      	RCALL SUBOPT_0x33
00048f f45c      	BRGE _0xC0
                 ; 0000 022F         {
                 ; 0000 0230         	if(komentar[k]!=0)putchar(komentar[k]);
000490 d5fa      	RCALL SUBOPT_0x1F
000491 5ba7      	SUBI R26,LOW(-_komentar)
000492 4fbf      	SBCI R27,HIGH(-_komentar)
000493 d670      	RCALL SUBOPT_0x3D
000494 f021      	BREQ _0xC1
000495 d5f5      	RCALL SUBOPT_0x1F
000496 5ba7      	SUBI R26,LOW(-_komentar)
000497 4fbf      	SBCI R27,HIGH(-_komentar)
000498 d67a      	RCALL SUBOPT_0x40
                 ; 0000 0231         }
                 _0xC1:
000499 5f1f      	SUBI R17,-1
00049a cff3      	RJMP _0xBF
                 _0xC0:
                 ; 0000 0232 
                 ; 0000 0233         // status
                 ; 0000 0234         putchar(',');
00049b d654      	RCALL SUBOPT_0x39
                 ; 0000 0235         for(k=0;k<statsize;k++)
00049c e010      	LDI  R17,LOW(0)
                 _0xC3:
00049d d625      	RCALL SUBOPT_0x2F
00049e f45c      	BRGE _0xC4
                 ; 0000 0236         {
                 ; 0000 0237         	if(status[k]!=0)putchar(status[k]);
00049f d5eb      	RCALL SUBOPT_0x1F
0004a0 55a3      	SUBI R26,LOW(-_status)
0004a1 4fbf      	SBCI R27,HIGH(-_status)
0004a2 d661      	RCALL SUBOPT_0x3D
0004a3 f021      	BREQ _0xC5
0004a4 d5e6      	RCALL SUBOPT_0x1F
0004a5 55a3      	SUBI R26,LOW(-_status)
0004a6 4fbf      	SBCI R27,HIGH(-_status)
0004a7 d66b      	RCALL SUBOPT_0x40
                 ; 0000 0238         }
                 _0xC5:
0004a8 5f1f      	SUBI R17,-1
0004a9 cff3      	RJMP _0xC3
                 _0xC4:
                 ; 0000 0239 
                 ; 0000 023A         // status interval
                 ; 0000 023B         putchar(',');
0004aa d645      	RCALL SUBOPT_0x39
                 ; 0000 023C         itoa(timeIntv,f);
0004ab d613      	RCALL SUBOPT_0x2E
0004ac d65a      	RCALL SUBOPT_0x3E
0004ad d65c      	RCALL SUBOPT_0x3F
                 ; 0000 023D         puts(f);
                 ; 0000 023E 
                 ; 0000 023F         // BASE-91 Comppresion ?
                 ; 0000 0240         putchar(',');
                 ; 0000 0241         putchar(compstat);
0004ae e1a3      	LDI  R26,LOW(_compstat)
0004af e0b1      	LDI  R27,HIGH(_compstat)
0004b0 d662      	RCALL SUBOPT_0x40
                 ; 0000 0242 
                 ; 0000 0243         // Coordinate
                 ; 0000 0244         putchar(',');
0004b1 d63e      	RCALL SUBOPT_0x39
                 ; 0000 0245         for(k=0;k<9;k++)putchar(posisi_lat[k]);
0004b2 e010      	LDI  R17,LOW(0)
                 _0xC7:
0004b3 3019      	CPI  R17,9
0004b4 f434      	BRGE _0xC8
0004b5 d5d5      	RCALL SUBOPT_0x1F
0004b6 5da3      	SUBI R26,LOW(-_posisi_lat)
0004b7 4fbf      	SBCI R27,HIGH(-_posisi_lat)
0004b8 d65a      	RCALL SUBOPT_0x40
0004b9 5f1f      	SUBI R17,-1
0004ba cff8      	RJMP _0xC7
                 _0xC8:
                 ; 0000 0246 putchar(',');
0004bb d634      	RCALL SUBOPT_0x39
                 ; 0000 0247         for(k=0;k<10;k++)putchar(posisi_long[k]);
0004bc e010      	LDI  R17,LOW(0)
                 _0xCA:
0004bd 301a      	CPI  R17,10
0004be f434      	BRGE _0xCB
0004bf d5cb      	RCALL SUBOPT_0x1F
0004c0 5caa      	SUBI R26,LOW(-_posisi_long)
0004c1 4fbf      	SBCI R27,HIGH(-_posisi_long)
0004c2 d650      	RCALL SUBOPT_0x40
0004c3 5f1f      	SUBI R17,-1
0004c4 cff8      	RJMP _0xCA
                 _0xCB:
                 ; 0000 024A putchar(',');
0004c5 d62a      	RCALL SUBOPT_0x39
                 ; 0000 024B         putchar(gps);
0004c6 e1a5      	LDI  R26,LOW(_gps)
0004c7 e0b1      	LDI  R27,HIGH(_gps)
0004c8 d64a      	RCALL SUBOPT_0x40
                 ; 0000 024C 
                 ; 0000 024D         // battery volt
                 ; 0000 024E         putchar(',');
0004c9 d626      	RCALL SUBOPT_0x39
                 ; 0000 024F         putchar(battvoltincomm);
0004ca e4a7      	LDI  R26,LOW(_battvoltincomm)
0004cb e0b0      	LDI  R27,HIGH(_battvoltincomm)
0004cc d646      	RCALL SUBOPT_0x40
                 ; 0000 0250 
                 ; 0000 0251         // temperature
                 ; 0000 0252         putchar(',');
0004cd d622      	RCALL SUBOPT_0x39
                 ; 0000 0253         putchar(tempincomm);
0004ce e4a8      	LDI  R26,LOW(_tempincomm)
0004cf e0b0      	LDI  R27,HIGH(_tempincomm)
0004d0 d642      	RCALL SUBOPT_0x40
                 ; 0000 0254 
                 ; 0000 0255         // altitude
                 ; 0000 0256         putchar(',');
0004d1 d61e      	RCALL SUBOPT_0x39
                 ; 0000 0257         putchar(sendalt);
0004d2 e1a4      	LDI  R26,LOW(_sendalt)
0004d3 e0b1      	LDI  R27,HIGH(_sendalt)
0004d4 d63e      	RCALL SUBOPT_0x40
                 ; 0000 0258 
                 ; 0000 0259         // send to PC
                 ; 0000 025A         putchar(',');
0004d5 d61a      	RCALL SUBOPT_0x39
                 ; 0000 025B         putchar(sendtopc);
0004d6 e1a6      	LDI  R26,LOW(_sendtopc)
0004d7 e0b1      	LDI  R27,HIGH(_sendtopc)
0004d8 d63a      	RCALL SUBOPT_0x40
                 ; 0000 025C 
                 ; 0000 025D         MERAH=0;
0004d9 9896      	CBI  0x12,6
                 ; 0000 025E         HIJAU=0;
0004da 9897      	CBI  0x12,7
                 ; 0000 025F 
                 ; 0000 0260         #asm("sei")
0004db 9478      	sei
                 ; 0000 0261 }
                 _0x20A0006:
0004dc 9119      	LD   R17,Y+
0004dd 9508      	RET
                 ;
                 ;void waitInvCo(void)
                 ; 0000 0264 {
                 _waitInvCo:
                 ; 0000 0265 	while(getchar()!='"');
                 _0xD0:
0004de d369      	RCALL _getchar
0004df 32e2      	CPI  R30,LOW(0x22)
0004e0 f7e9      	BRNE _0xD0
                 ; 0000 0266 }
0004e1 9508      	RET
                 ;
                 ;void waitDollar(void)
                 ; 0000 0269 {
                 _waitDollar:
                 ; 0000 026A 	while(getchar()!='$');
                 _0xD3:
0004e2 d365      	RCALL _getchar
0004e3 32e4      	CPI  R30,LOW(0x24)
0004e4 f7e9      	BRNE _0xD3
                 ; 0000 026B }
0004e5 9508      	RET
                 ;
                 ;void config(void)
                 ; 0000 026E {
                 _config:
                 ; 0000 026F 	char buffer[500];
                 ; 0000 0270         char dbuff[];
                 ; 0000 0271         char cbuff[];
                 ; 0000 0272         char ibuff[5];
                 ; 0000 0273         int b,j,k,l;
                 ; 0000 0274 
                 ; 0000 0275         #asm("cli")
0004e6 97ef      	SBIW R28,63
0004e7 97ef      	SBIW R28,63
0004e8 97ef      	SBIW R28,63
0004e9 97ee      	SBIW R28,62
0004ea 50d1      	SUBI R29,1
0004eb da26      	RCALL __SAVELOCR6
                 ;	buffer -> Y+13
                 ;	dbuff -> Y+13
                 ;	cbuff -> Y+13
                 ;	ibuff -> Y+8
                 ;	b -> R16,R17
                 ;	j -> R18,R19
                 ;	k -> R20,R21
                 ;	l -> Y+6
0004ec 94f8      	cli
                 ; 0000 0276 
                 ; 0000 0277         MERAH=1;
0004ed d5ca      	RCALL SUBOPT_0x2C
                 ; 0000 0278         HIJAU=0;
                 ; 0000 0279 
                 ; 0000 027A         b=0;
0004ee d626      	RCALL SUBOPT_0x41
                 ; 0000 027B 
                 ; 0000 027C         putchar(13);putsf("ENTERING CONFIGURATION MODE...");
0004ef d5fd      	RCALL SUBOPT_0x38
                +
0004f0 e4ec     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0004f1 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0004f2 d625      	RCALL SUBOPT_0x42
                 ; 0000 027D         putchar(13);putsf("CONFIGURE...");
0004f3 d5f9      	RCALL SUBOPT_0x38
                +
0004f4 e6eb     +LDI R30 , LOW ( 2 * _0x0 + ( 31 ) )
0004f5 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 31 ) )
                 	__POINTW1FN _0x0,31
0004f6 d621      	RCALL SUBOPT_0x42
                 ; 0000 027E 
                 ; 0000 027F         // download configuration file
                 ; 0000 0280         waitDollar();
0004f7 dfea      	RCALL _waitDollar
                 ; 0000 0281         waitInvCo();
0004f8 dfe5      	RCALL _waitInvCo
                 ; 0000 0282         for(;;)
                 _0xDB:
                 ; 0000 0283         {
                 ; 0000 0284         	buffer[b]=getchar();
0004f9 01f8      	MOVW R30,R16
0004fa d61f      	RCALL SUBOPT_0x43
0004fb d621      	RCALL SUBOPT_0x44
0004fc 93ff      	PUSH R31
0004fd 93ef      	PUSH R30
0004fe d349      	RCALL _getchar
0004ff 91af      	POP  R26
000500 91bf      	POP  R27
000501 93ec      	ST   X,R30
                 ; 0000 0285                 if(buffer[b]=='$')goto rxd_selesai;
000502 d61d      	RCALL SUBOPT_0x45
000503 32a4      	CPI  R26,LOW(0x24)
000504 f041      	BREQ _0xDE
                 ; 0000 0286                 if(buffer[b]=='"')waitInvCo();
000505 d61a      	RCALL SUBOPT_0x45
000506 32a2      	CPI  R26,LOW(0x22)
000507 f409      	BRNE _0xDF
000508 dfd5      	RCALL _waitInvCo
                 ; 0000 0287                 putchar('.');
                 _0xDF:
000509 e2ee      	LDI  R30,LOW(46)
00050a d5e8      	RCALL SUBOPT_0x3A
                 ; 0000 0288                 b++;
00050b d619      	RCALL SUBOPT_0x46
                 ; 0000 0289         }
00050c cfec      	RJMP _0xDB
                 ; 0000 028A         rxd_selesai:
                 _0xDE:
                 ; 0000 028B         // config file downloaded
                 ; 0000 028C         //j=b;
                 ; 0000 028D 
                 ; 0000 028E         putchar(13);putsf("SAVING CONFIGURATION...");
00050d d5df      	RCALL SUBOPT_0x38
                +
00050e e7e8     +LDI R30 , LOW ( 2 * _0x0 + ( 44 ) )
00050f e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 44 ) )
                 	__POINTW1FN _0x0,44
000510 d607      	RCALL SUBOPT_0x42
                 ; 0000 028F 
                 ; 0000 0290         // mycall
                 ; 0000 0291         b=0;
000511 d603      	RCALL SUBOPT_0x41
                 ; 0000 0292         k=0;
000512 d615      	RCALL SUBOPT_0x47
                 ; 0000 0293         while(buffer[b]!='"') 				//<--- move data from rxbuffer to databuffer
                 _0xE0:
000513 d60c      	RCALL SUBOPT_0x45
000514 32a2      	CPI  R26,LOW(0x22)
000515 f011      	BREQ _0xE2
                 ; 0000 0294         {
                 ; 0000 0295         	cbuff[k]=buffer[b];
000516 d614      	RCALL SUBOPT_0x48
                 ; 0000 0296                 k++;
                 ; 0000 0297                 b++;
                 ; 0000 0298         }
000517 cffb      	RJMP _0xE0
                 _0xE2:
                 ; 0000 0299         j=b+1; 						// j = index , atau "   j+b = index next data field
000518 d61f      	RCALL SUBOPT_0x49
                 ; 0000 029A 
                 ; 0000 029B         // pada titik ini, k adalah ukuran array 1st digi string
                 ; 0000 029C         l=k;
                 ; 0000 029D         for(k=0;k<6;k++)mycall[k]=' '; 			//<--- resetting mycall
                 _0xE4:
                +
000519 3046     +CPI R20 , LOW ( 6 )
00051a e0e0     +LDI R30 , HIGH ( 6 )
00051b 075e     +CPC R21 , R30
                 	__CPWRN 20,21,6
00051c f434      	BRGE _0xE5
00051d e0ad      	LDI  R26,LOW(_mycall)
00051e e0b0      	LDI  R27,HIGH(_mycall)
00051f d61e      	RCALL SUBOPT_0x4A
000520 d620      	RCALL SUBOPT_0x4B
000521 d622      	RCALL SUBOPT_0x4C
000522 cff6      	RJMP _0xE4
                 _0xE5:
                 ; 0000 029E mycall[6]='0';
                +
000523 e1a3     +LDI R26 , LOW ( _mycall + ( 6 ) )
000524 e0b0     +LDI R27 , HIGH ( _mycall + ( 6 ) )
                 	__POINTW2MN _mycall,6
000525 d621      	RCALL SUBOPT_0x4D
                 ; 0000 029F         for(k=0;k<l;k++)
000526 d601      	RCALL SUBOPT_0x47
                 _0xE7:
000527 d622      	RCALL SUBOPT_0x4E
000528 f4cc      	BRGE _0xE8
                 ; 0000 02A0         {
                 ; 0000 02A1         	if(cbuff[k]=='-')
000529 d625      	RCALL SUBOPT_0x4F
00052a d626      	RCALL SUBOPT_0x50
00052b f479      	BRNE _0xE9
                 ; 0000 02A2                 {
                 ; 0000 02A3                 	if((l-k)==2)
00052c d627      	RCALL SUBOPT_0x51
00052d 9712      	SBIW R26,2
00052e f421      	BRNE _0xEA
                 ; 0000 02A4                         {
                 ; 0000 02A5                         	mycall[6]=cbuff[k+1];
                +
00052f e1e3     +LDI R30 , LOW ( _mycall + ( 6 ) )
000530 e0f0     +LDI R31 , HIGH ( _mycall + ( 6 ) )
                 	__POINTW1MN _mycall,6
000531 d627      	RCALL SUBOPT_0x52
                 ; 0000 02A6                                 goto selesai_mycall;
000532 c00f      	RJMP _0xEB
                 ; 0000 02A7                         }
                 ; 0000 02A8                         else if((l-k)==3)
                 _0xEA:
000533 d620      	RCALL SUBOPT_0x51
000534 9713      	SBIW R26,3
000535 f429      	BRNE _0xED
                 ; 0000 02A9                         {
                 ; 0000 02AA                         	mycall[6]=((10*(cbuff[k+1]-48)+cbuff[k+2]-48)+48);
                +
000536 e163     +LDI R22 , LOW ( _mycall + ( 6 ) )
000537 e070     +LDI R23 , HIGH ( _mycall + ( 6 ) )
                 	__POINTWRMN 22,23,_mycall,6
000538 d62a      	RCALL SUBOPT_0x53
000539 d631      	RCALL SUBOPT_0x54
                 ; 0000 02AB                         	goto selesai_mycall;
00053a c007      	RJMP _0xEB
                 ; 0000 02AC                         }
                 ; 0000 02AD                 }
                 _0xED:
                 ; 0000 02AE                 mycall[k]=cbuff[k];
                 _0xE9:
00053b 01fa      	MOVW R30,R20
00053c 5fe3      	SUBI R30,LOW(-_mycall)
00053d 4fff      	SBCI R31,HIGH(-_mycall)
00053e d63b      	RCALL SUBOPT_0x55
00053f d63c      	RCALL SUBOPT_0x56
                 ; 0000 02AF         }
000540 d603      	RCALL SUBOPT_0x4C
000541 cfe5      	RJMP _0xE7
                 _0xE8:
                 ; 0000 02B0         selesai_mycall:
                 _0xEB:
                 ; 0000 02B1 
                 ; 0000 02B2         //1st digi
                 ; 0000 02B3         b=j;
000542 d63d      	RCALL SUBOPT_0x57
                 ; 0000 02B4         k=0;
                 ; 0000 02B5         while((buffer[b]!='"')&&(buffer[b]!=',')) 	//<--- move data from rxbuffer to databuffer
                 _0xEE:
000543 d5dc      	RCALL SUBOPT_0x45
000544 32a2      	CPI  R26,LOW(0x22)
000545 f019      	BREQ _0xF1
000546 d5d9      	RCALL SUBOPT_0x45
000547 32ac      	CPI  R26,LOW(0x2C)
000548 f409      	BRNE _0xF2
                 _0xF1:
000549 c002      	RJMP _0xF0
                 _0xF2:
                 ; 0000 02B6         {
                 ; 0000 02B7         	dbuff[k]=buffer[b];
00054a d5e0      	RCALL SUBOPT_0x48
                 ; 0000 02B8                 k++;
                 ; 0000 02B9                 b++;
                 ; 0000 02BA         }
00054b cff7      	RJMP _0xEE
                 _0xF0:
                 ; 0000 02BB         j=b+1; 						// j = index , atau "   j+b = index next data field
00054c d5eb      	RCALL SUBOPT_0x49
                 ; 0000 02BC 
                 ; 0000 02BD         // pada titik ini, k adalah ukuran array 1st digi string
                 ; 0000 02BE         l=k;
                 ; 0000 02BF         for(k=0;k<6;k++)mydigi1[k]=' '; 		//<--- resetting digi call
                 _0xF4:
                +
00054d 3046     +CPI R20 , LOW ( 6 )
00054e e0e0     +LDI R30 , HIGH ( 6 )
00054f 075e     +CPC R21 , R30
                 	__CPWRN 20,21,6
000550 f434      	BRGE _0xF5
000551 e1a5      	LDI  R26,LOW(_mydigi1)
000552 e0b0      	LDI  R27,HIGH(_mydigi1)
000553 d5ea      	RCALL SUBOPT_0x4A
000554 d5ec      	RCALL SUBOPT_0x4B
000555 d5ee      	RCALL SUBOPT_0x4C
000556 cff6      	RJMP _0xF4
                 _0xF5:
                 ; 0000 02C0 for(k=0;k<7;k++)mydigi2[k]=' ';
000557 d5d0      	RCALL SUBOPT_0x47
                 _0xF7:
                +
000558 3047     +CPI R20 , LOW ( 7 )
000559 e0e0     +LDI R30 , HIGH ( 7 )
00055a 075e     +CPC R21 , R30
                 	__CPWRN 20,21,7
00055b f434      	BRGE _0xF8
00055c e1ad      	LDI  R26,LOW(_mydigi2)
00055d e0b0      	LDI  R27,HIGH(_mydigi2)
00055e d5df      	RCALL SUBOPT_0x4A
00055f d5e1      	RCALL SUBOPT_0x4B
000560 d5e3      	RCALL SUBOPT_0x4C
000561 cff6      	RJMP _0xF7
                 _0xF8:
                 ; 0000 02C1 for(k=0;k<7;k++)mydigi3[k]=' ';
000562 d5c5      	RCALL SUBOPT_0x47
                 _0xFA:
                +
000563 3047     +CPI R20 , LOW ( 7 )
000564 e0e0     +LDI R30 , HIGH ( 7 )
000565 075e     +CPC R21 , R30
                 	__CPWRN 20,21,7
000566 f434      	BRGE _0xFB
000567 e2a5      	LDI  R26,LOW(_mydigi3)
000568 e0b0      	LDI  R27,HIGH(_mydigi3)
000569 d5d4      	RCALL SUBOPT_0x4A
00056a d5d6      	RCALL SUBOPT_0x4B
00056b d5d8      	RCALL SUBOPT_0x4C
00056c cff6      	RJMP _0xFA
                 _0xFB:
                 ; 0000 02C2 mydigi1[6]='0';
                +
00056d e1ab     +LDI R26 , LOW ( _mydigi1 + ( 6 ) )
00056e e0b0     +LDI R27 , HIGH ( _mydigi1 + ( 6 ) )
                 	__POINTW2MN _mydigi1,6
00056f d5d7      	RCALL SUBOPT_0x4D
                 ; 0000 02C3         mydigi2[6]='0';
000570 d537      	RCALL SUBOPT_0x27
000571 d5d5      	RCALL SUBOPT_0x4D
                 ; 0000 02C4         mydigi3[6]='0';
000572 d53c      	RCALL SUBOPT_0x29
000573 d5d3      	RCALL SUBOPT_0x4D
                 ; 0000 02C5         mydigi1[0]=0;
000574 e1a5      	LDI  R26,LOW(_mydigi1)
000575 e0b0      	LDI  R27,HIGH(_mydigi1)
000576 d551      	RCALL SUBOPT_0x30
                 ; 0000 02C6         mydigi2[0]=0;
000577 e1ad      	LDI  R26,LOW(_mydigi2)
000578 e0b0      	LDI  R27,HIGH(_mydigi2)
000579 d54e      	RCALL SUBOPT_0x30
                 ; 0000 02C7         mydigi3[0]=0;
00057a e2a5      	LDI  R26,LOW(_mydigi3)
00057b e0b0      	LDI  R27,HIGH(_mydigi3)
00057c d54b      	RCALL SUBOPT_0x30
                 ; 0000 02C8         if(l<2)goto time_interval;			//<--- jika tidak menggunakan digi
00057d 81ae      	LDD  R26,Y+6
00057e 81bf      	LDD  R27,Y+6+1
00057f 9712      	SBIW R26,2
000580 f40c      	BRGE _0xFC
000581 c06b      	RJMP _0xFD
                 ; 0000 02C9         for(k=0;k<l;k++)
                 _0xFC:
000582 d5a5      	RCALL SUBOPT_0x47
                 _0xFF:
000583 d5c6      	RCALL SUBOPT_0x4E
000584 f4cc      	BRGE _0x100
                 ; 0000 02CA         {
                 ; 0000 02CB         	if(dbuff[k]=='-')
000585 d5c9      	RCALL SUBOPT_0x4F
000586 d5ca      	RCALL SUBOPT_0x50
000587 f479      	BRNE _0x101
                 ; 0000 02CC                 {
                 ; 0000 02CD                 	if((l-k)==2)
000588 d5cb      	RCALL SUBOPT_0x51
000589 9712      	SBIW R26,2
00058a f421      	BRNE _0x102
                 ; 0000 02CE                         {
                 ; 0000 02CF                         	mydigi1[6]=dbuff[k+1];
                +
00058b e1eb     +LDI R30 , LOW ( _mydigi1 + ( 6 ) )
00058c e0f0     +LDI R31 , HIGH ( _mydigi1 + ( 6 ) )
                 	__POINTW1MN _mydigi1,6
00058d d5cb      	RCALL SUBOPT_0x52
                 ; 0000 02D0                                 goto selesai_myssid1;
00058e c00f      	RJMP _0x103
                 ; 0000 02D1                         }
                 ; 0000 02D2                         else if((l-k)==3)
                 _0x102:
00058f d5c4      	RCALL SUBOPT_0x51
000590 9713      	SBIW R26,3
000591 f429      	BRNE _0x105
                 ; 0000 02D3                         {
                 ; 0000 02D4                         	mydigi1[6]=(10*(dbuff[k+1]-48)+dbuff[k+2]-48)+48;
                +
000592 e16b     +LDI R22 , LOW ( _mydigi1 + ( 6 ) )
000593 e070     +LDI R23 , HIGH ( _mydigi1 + ( 6 ) )
                 	__POINTWRMN 22,23,_mydigi1,6
000594 d5ce      	RCALL SUBOPT_0x53
000595 d5d5      	RCALL SUBOPT_0x54
                 ; 0000 02D5                         	goto selesai_myssid1;
000596 c007      	RJMP _0x103
                 ; 0000 02D6                         }
                 ; 0000 02D7                 }
                 _0x105:
                 ; 0000 02D8                 mydigi1[k]=dbuff[k];
                 _0x101:
000597 01fa      	MOVW R30,R20
000598 5eeb      	SUBI R30,LOW(-_mydigi1)
000599 4fff      	SBCI R31,HIGH(-_mydigi1)
00059a d5df      	RCALL SUBOPT_0x55
00059b d5e0      	RCALL SUBOPT_0x56
                 ; 0000 02D9         }
00059c d5a7      	RCALL SUBOPT_0x4C
00059d cfe5      	RJMP _0xFF
                 _0x100:
                 ; 0000 02DA         selesai_myssid1:
                 _0x103:
                 ; 0000 02DB         if(buffer[b]=='"')goto time_interval;
00059e d581      	RCALL SUBOPT_0x45
00059f 32a2      	CPI  R26,LOW(0x22)
0005a0 f409      	BRNE _0x106
0005a1 c04b      	RJMP _0xFD
                 ; 0000 02DC 
                 ; 0000 02DD 	// 2nd digi
                 ; 0000 02DE         b=j;
                 _0x106:
0005a2 d5dd      	RCALL SUBOPT_0x57
                 ; 0000 02DF         k=0;
                 ; 0000 02E0         while((buffer[b]!='"')&&(buffer[b]!=',')) //<--- move data from rxbuffer to databuffer
                 _0x107:
0005a3 d57c      	RCALL SUBOPT_0x45
0005a4 32a2      	CPI  R26,LOW(0x22)
0005a5 f019      	BREQ _0x10A
0005a6 d579      	RCALL SUBOPT_0x45
0005a7 32ac      	CPI  R26,LOW(0x2C)
0005a8 f409      	BRNE _0x10B
                 _0x10A:
0005a9 c002      	RJMP _0x109
                 _0x10B:
                 ; 0000 02E1         {
                 ; 0000 02E2         	dbuff[k]=buffer[b];
0005aa d580      	RCALL SUBOPT_0x48
                 ; 0000 02E3                 k++;
                 ; 0000 02E4                 b++;
                 ; 0000 02E5         }
0005ab cff7      	RJMP _0x107
                 _0x109:
                 ; 0000 02E6         j=b+1; 		// j = index , atau "   j+b = index next data field
0005ac d58b      	RCALL SUBOPT_0x49
                 ; 0000 02E7 
                 ; 0000 02E8         // pada titik ini, k adalah ukuran array 2nd digi string
                 ; 0000 02E9         l=k;
                 ; 0000 02EA         for(k=0;k<l;k++)
                 _0x10D:
0005ad d59c      	RCALL SUBOPT_0x4E
0005ae f4cc      	BRGE _0x10E
                 ; 0000 02EB         {
                 ; 0000 02EC         	if(dbuff[k]=='-')
0005af d59f      	RCALL SUBOPT_0x4F
0005b0 d5a0      	RCALL SUBOPT_0x50
0005b1 f479      	BRNE _0x10F
                 ; 0000 02ED                 {
                 ; 0000 02EE                 	if((l-k)==2)
0005b2 d5a1      	RCALL SUBOPT_0x51
0005b3 9712      	SBIW R26,2
0005b4 f421      	BRNE _0x110
                 ; 0000 02EF                         {
                 ; 0000 02F0                         	mydigi2[6]=dbuff[k+1];
                +
0005b5 e2e3     +LDI R30 , LOW ( _mydigi2 + ( 6 ) )
0005b6 e0f0     +LDI R31 , HIGH ( _mydigi2 + ( 6 ) )
                 	__POINTW1MN _mydigi2,6
0005b7 d5a1      	RCALL SUBOPT_0x52
                 ; 0000 02F1                                 goto selesai_myssid2;
0005b8 c00f      	RJMP _0x111
                 ; 0000 02F2                         }
                 ; 0000 02F3                         else if((l-k)==3)
                 _0x110:
0005b9 d59a      	RCALL SUBOPT_0x51
0005ba 9713      	SBIW R26,3
0005bb f429      	BRNE _0x113
                 ; 0000 02F4                         {
                 ; 0000 02F5                         	mydigi2[6]=(10*(dbuff[k+1]-48)+dbuff[k+2]-48)+48;
                +
0005bc e263     +LDI R22 , LOW ( _mydigi2 + ( 6 ) )
0005bd e070     +LDI R23 , HIGH ( _mydigi2 + ( 6 ) )
                 	__POINTWRMN 22,23,_mydigi2,6
0005be d5a4      	RCALL SUBOPT_0x53
0005bf d5ab      	RCALL SUBOPT_0x54
                 ; 0000 02F6                         	goto selesai_myssid2;
0005c0 c007      	RJMP _0x111
                 ; 0000 02F7                         }
                 ; 0000 02F8                 }
                 _0x113:
                 ; 0000 02F9                 mydigi2[k]=dbuff[k];
                 _0x10F:
0005c1 01fa      	MOVW R30,R20
0005c2 5ee3      	SUBI R30,LOW(-_mydigi2)
0005c3 4fff      	SBCI R31,HIGH(-_mydigi2)
0005c4 d5b5      	RCALL SUBOPT_0x55
0005c5 d5b6      	RCALL SUBOPT_0x56
                 ; 0000 02FA         }
0005c6 d57d      	RCALL SUBOPT_0x4C
0005c7 cfe5      	RJMP _0x10D
                 _0x10E:
                 ; 0000 02FB         selesai_myssid2:
                 _0x111:
                 ; 0000 02FC 	if(buffer[b]=='"')goto time_interval;
0005c8 d557      	RCALL SUBOPT_0x45
0005c9 32a2      	CPI  R26,LOW(0x22)
0005ca f111      	BREQ _0xFD
                 ; 0000 02FD 
                 ; 0000 02FE         // 3rd digi
                 ; 0000 02FF        	b=j;
0005cb d5b4      	RCALL SUBOPT_0x57
                 ; 0000 0300         k=0;
                 ; 0000 0301         while(buffer[b]!='"') 			//<--- move data from rxbuffer to databuffer
                 _0x115:
0005cc d553      	RCALL SUBOPT_0x45
0005cd 32a2      	CPI  R26,LOW(0x22)
0005ce f011      	BREQ _0x117
                 ; 0000 0302         {
                 ; 0000 0303         	dbuff[k]=buffer[b];
0005cf d55b      	RCALL SUBOPT_0x48
                 ; 0000 0304                 k++;
                 ; 0000 0305                 b++;
                 ; 0000 0306         }
0005d0 cffb      	RJMP _0x115
                 _0x117:
                 ; 0000 0307         j=b+1; 		// b = index , atau "   j+1 = index next data field
0005d1 d566      	RCALL SUBOPT_0x49
                 ; 0000 0308 
                 ; 0000 0309         // pada titik ini, k adalah ukuran array 3rd digi string
                 ; 0000 030A         l=k;
                 ; 0000 030B         for(k=0;k<l;k++)
                 _0x119:
0005d2 d577      	RCALL SUBOPT_0x4E
0005d3 f4cc      	BRGE _0x11A
                 ; 0000 030C         {
                 ; 0000 030D         	if(dbuff[k]=='-')
0005d4 d57a      	RCALL SUBOPT_0x4F
0005d5 d57b      	RCALL SUBOPT_0x50
0005d6 f479      	BRNE _0x11B
                 ; 0000 030E                 {
                 ; 0000 030F                 	if((l-k)==2)
0005d7 d57c      	RCALL SUBOPT_0x51
0005d8 9712      	SBIW R26,2
0005d9 f421      	BRNE _0x11C
                 ; 0000 0310                         {
                 ; 0000 0311                         	mydigi3[6]=dbuff[k+1];
                +
0005da e2eb     +LDI R30 , LOW ( _mydigi3 + ( 6 ) )
0005db e0f0     +LDI R31 , HIGH ( _mydigi3 + ( 6 ) )
                 	__POINTW1MN _mydigi3,6
0005dc d57c      	RCALL SUBOPT_0x52
                 ; 0000 0312                                 goto selesai_myssid3;
0005dd c00f      	RJMP _0x11D
                 ; 0000 0313                         }
                 ; 0000 0314                         else if((l-k)==3)
                 _0x11C:
0005de d575      	RCALL SUBOPT_0x51
0005df 9713      	SBIW R26,3
0005e0 f429      	BRNE _0x11F
                 ; 0000 0315                         {
                 ; 0000 0316                         	mydigi3[6]=(10*(dbuff[k+1]-48)+dbuff[k+2]-48)+48;
                +
0005e1 e26b     +LDI R22 , LOW ( _mydigi3 + ( 6 ) )
0005e2 e070     +LDI R23 , HIGH ( _mydigi3 + ( 6 ) )
                 	__POINTWRMN 22,23,_mydigi3,6
0005e3 d57f      	RCALL SUBOPT_0x53
0005e4 d586      	RCALL SUBOPT_0x54
                 ; 0000 0317                         	goto selesai_myssid3;
0005e5 c007      	RJMP _0x11D
                 ; 0000 0318                         }
                 ; 0000 0319                 }
                 _0x11F:
                 ; 0000 031A                 mydigi3[k]=dbuff[k];
                 _0x11B:
0005e6 01fa      	MOVW R30,R20
0005e7 5deb      	SUBI R30,LOW(-_mydigi3)
0005e8 4fff      	SBCI R31,HIGH(-_mydigi3)
0005e9 d590      	RCALL SUBOPT_0x55
0005ea d591      	RCALL SUBOPT_0x56
                 ; 0000 031B         }
0005eb d558      	RCALL SUBOPT_0x4C
0005ec cfe5      	RJMP _0x119
                 _0x11A:
                 ; 0000 031C         selesai_myssid3:
                 _0x11D:
                 ; 0000 031D 
                 ; 0000 031E         time_interval:
                 _0xFD:
                 ; 0000 031F         //time interval
                 ; 0000 0320         b=j;
0005ed d592      	RCALL SUBOPT_0x57
                 ; 0000 0321         for(k=0;k<sizeof(ibuff);k++)ibuff[k]=0;
                 _0x121:
                +
0005ee 3045     +CPI R20 , LOW ( 5 )
0005ef e0e0     +LDI R30 , HIGH ( 5 )
0005f0 075e     +CPC R21 , R30
                 	__CPWRN 20,21,5
0005f1 f434      	BRGE _0x122
0005f2 d58f      	RCALL SUBOPT_0x58
0005f3 d54a      	RCALL SUBOPT_0x4A
0005f4 e0e0      	LDI  R30,LOW(0)
0005f5 93ec      	ST   X,R30
0005f6 d54d      	RCALL SUBOPT_0x4C
0005f7 cff6      	RJMP _0x121
                 _0x122:
                 ; 0000 0322 k=0;
0005f8 d52f      	RCALL SUBOPT_0x47
                 ; 0000 0323         while(buffer[b]!='"') 			//<--- move data from rxbuffer to databuffer
                 _0x123:
0005f9 d526      	RCALL SUBOPT_0x45
0005fa 32a2      	CPI  R26,LOW(0x22)
0005fb f019      	BREQ _0x125
                 ; 0000 0324         {
                 ; 0000 0325         	ibuff[k]=buffer[b];
0005fc d588      	RCALL SUBOPT_0x59
                 ; 0000 0326                 k++;
                 ; 0000 0327                 b++;
0005fd d527      	RCALL SUBOPT_0x46
                 ; 0000 0328         }
0005fe cffa      	RJMP _0x123
                 _0x125:
                 ; 0000 0329         j=b+1;
0005ff d590      	RCALL SUBOPT_0x5A
                 ; 0000 032A         GAP_TIME_=atoi(ibuff);
000600 d593      	RCALL SUBOPT_0x5B
000601 e0a0      	LDI  R26,LOW(_GAP_TIME_)
000602 e0b0      	LDI  R27,HIGH(_GAP_TIME_)
000603 d594      	RCALL SUBOPT_0x5C
                 ; 0000 032B 
                 ; 0000 032C         //symbol code
                 ; 0000 032D         b=j;
                 ; 0000 032E         SYM_CODE_=buffer[b];
000604 e0a3      	LDI  R26,LOW(_SYM_CODE_)
000605 e0b0      	LDI  R27,HIGH(_SYM_CODE_)
000606 d598      	RCALL SUBOPT_0x5D
                 ; 0000 032F         j=b+2;
                 ; 0000 0330 
                 ; 0000 0331         //symbol table
                 ; 0000 0332         b=j;
000607 d59c      	RCALL SUBOPT_0x5E
                 ; 0000 0333         SYM_TAB_OVL_=buffer[b];
000608 e0a2      	LDI  R26,LOW(_SYM_TAB_OVL_)
000609 e0b0      	LDI  R27,HIGH(_SYM_TAB_OVL_)
00060a d594      	RCALL SUBOPT_0x5D
                 ; 0000 0334         j=b+2;
                 ; 0000 0335 
                 ; 0000 0336         //comment
                 ; 0000 0337         b=j;
00060b d574      	RCALL SUBOPT_0x57
                 ; 0000 0338         for(k=0;k<commsize;k++)komentar[k]=0;
                 _0x127:
00060c e1a7      	LDI  R26,LOW(_commsize)
00060d e0b1      	LDI  R27,HIGH(_commsize)
00060e d59b      	RCALL SUBOPT_0x5F
00060f f434      	BRGE _0x128
000610 e4a9      	LDI  R26,LOW(_komentar)
000611 e0b0      	LDI  R27,HIGH(_komentar)
000612 d52b      	RCALL SUBOPT_0x4A
000613 d4b4      	RCALL SUBOPT_0x30
000614 d52f      	RCALL SUBOPT_0x4C
000615 cff6      	RJMP _0x127
                 _0x128:
                 ; 0000 0339 k=0;
000616 d511      	RCALL SUBOPT_0x47
                 ; 0000 033A         while(buffer[b]!='"')
                 _0x129:
000617 d508      	RCALL SUBOPT_0x45
000618 32a2      	CPI  R26,LOW(0x22)
000619 f059      	BREQ _0x12B
                 ; 0000 033B         {
                 ; 0000 033C         	komentar[k]=buffer[b];
00061a 01fa      	MOVW R30,R20
00061b 5be7      	SUBI R30,LOW(-_komentar)
00061c 4fff      	SBCI R31,HIGH(-_komentar)
00061d d592      	RCALL SUBOPT_0x60
                 ; 0000 033D                 k++;
00061e d525      	RCALL SUBOPT_0x4C
                 ; 0000 033E                 b++;
00061f d505      	RCALL SUBOPT_0x46
                 ; 0000 033F                 commsize=k;
000620 2fe4      	MOV  R30,R20
000621 e1a7      	LDI  R26,LOW(_commsize)
000622 e0b1      	LDI  R27,HIGH(_commsize)
000623 d8d3      	RCALL __EEPROMWRB
                 ; 0000 0340         }
000624 cff2      	RJMP _0x129
                 _0x12B:
                 ; 0000 0341         j=b+1;
000625 d56a      	RCALL SUBOPT_0x5A
                 ; 0000 0342 
                 ; 0000 0343         //status
                 ; 0000 0344         b=j;
000626 d559      	RCALL SUBOPT_0x57
                 ; 0000 0345         for(k=0;k<statsize;k++)status[k]=0;
                 _0x12D:
000627 e1a8      	LDI  R26,LOW(_statsize)
000628 e0b1      	LDI  R27,HIGH(_statsize)
000629 d580      	RCALL SUBOPT_0x5F
00062a f434      	BRGE _0x12E
00062b eaad      	LDI  R26,LOW(_status)
00062c e0b0      	LDI  R27,HIGH(_status)
00062d d510      	RCALL SUBOPT_0x4A
00062e d499      	RCALL SUBOPT_0x30
00062f d514      	RCALL SUBOPT_0x4C
000630 cff6      	RJMP _0x12D
                 _0x12E:
                 ; 0000 0346 k=0;
000631 d4f6      	RCALL SUBOPT_0x47
                 ; 0000 0347         while(buffer[b]!='"')
                 _0x12F:
000632 d4ed      	RCALL SUBOPT_0x45
000633 32a2      	CPI  R26,LOW(0x22)
000634 f059      	BREQ _0x131
                 ; 0000 0348         {
                 ; 0000 0349         	status[k]=buffer[b];
000635 01fa      	MOVW R30,R20
000636 55e3      	SUBI R30,LOW(-_status)
000637 4fff      	SBCI R31,HIGH(-_status)
000638 d577      	RCALL SUBOPT_0x60
                 ; 0000 034A                 k++;
000639 d50a      	RCALL SUBOPT_0x4C
                 ; 0000 034B                 b++;
00063a d4ea      	RCALL SUBOPT_0x46
                 ; 0000 034C                 statsize=k;
00063b 2fe4      	MOV  R30,R20
00063c e1a8      	LDI  R26,LOW(_statsize)
00063d e0b1      	LDI  R27,HIGH(_statsize)
00063e d8b8      	RCALL __EEPROMWRB
                 ; 0000 034D         }
00063f cff2      	RJMP _0x12F
                 _0x131:
                 ; 0000 034E         j=b+1;
000640 d54f      	RCALL SUBOPT_0x5A
                 ; 0000 034F 
                 ; 0000 0350         //status interval
                 ; 0000 0351         b=j;
000641 d53e      	RCALL SUBOPT_0x57
                 ; 0000 0352         for(k=0;k<sizeof(ibuff);k++)ibuff[k]=0;
                 _0x133:
                +
000642 3045     +CPI R20 , LOW ( 5 )
000643 e0e0     +LDI R30 , HIGH ( 5 )
000644 075e     +CPC R21 , R30
                 	__CPWRN 20,21,5
000645 f434      	BRGE _0x134
000646 d53b      	RCALL SUBOPT_0x58
000647 d4f6      	RCALL SUBOPT_0x4A
000648 e0e0      	LDI  R30,LOW(0)
000649 93ec      	ST   X,R30
00064a d4f9      	RCALL SUBOPT_0x4C
00064b cff6      	RJMP _0x133
                 _0x134:
                 ; 0000 0353 k=0;
00064c d4db      	RCALL SUBOPT_0x47
                 ; 0000 0354         while(buffer[b]!='"') 			//<--- move data from rxbuffer to databuffer
                 _0x135:
00064d d4d2      	RCALL SUBOPT_0x45
00064e 32a2      	CPI  R26,LOW(0x22)
00064f f019      	BREQ _0x137
                 ; 0000 0355         {
                 ; 0000 0356         	ibuff[k]=buffer[b];
000650 d534      	RCALL SUBOPT_0x59
                 ; 0000 0357                 k++;
                 ; 0000 0358                 b++;
000651 d4d3      	RCALL SUBOPT_0x46
                 ; 0000 0359         }
000652 cffa      	RJMP _0x135
                 _0x137:
                 ; 0000 035A         j=b+1;
000653 d53c      	RCALL SUBOPT_0x5A
                 ; 0000 035B         timeIntv=atoi(ibuff);
000654 d53f      	RCALL SUBOPT_0x5B
000655 e1a1      	LDI  R26,LOW(_timeIntv)
000656 e0b1      	LDI  R27,HIGH(_timeIntv)
000657 d540      	RCALL SUBOPT_0x5C
                 ; 0000 035C 
                 ; 0000 035D         //BASE-91 compression
                 ; 0000 035E         b=j;
                 ; 0000 035F         compstat=buffer[b];
000658 e1a3      	LDI  R26,LOW(_compstat)
000659 e0b1      	LDI  R27,HIGH(_compstat)
00065a d544      	RCALL SUBOPT_0x5D
                 ; 0000 0360         j=b+2;
                 ; 0000 0361 
                 ; 0000 0362         //set latitude
                 ; 0000 0363         b=j;
00065b 0189      	MOVW R16,R18
                 ; 0000 0364         if(buffer[b]=='"')goto usegps;
00065c d4c3      	RCALL SUBOPT_0x45
00065d 32a2      	CPI  R26,LOW(0x22)
00065e f0c1      	BREQ _0x139
                 ; 0000 0365         k=0;
00065f d4c8      	RCALL SUBOPT_0x47
                 ; 0000 0366         while(buffer[b]!=',')
                 _0x13A:
000660 d4bf      	RCALL SUBOPT_0x45
000661 32ac      	CPI  R26,LOW(0x2C)
000662 f039      	BREQ _0x13C
                 ; 0000 0367         {
                 ; 0000 0368         	posisi_lat[k]=buffer[b];
000663 01fa      	MOVW R30,R20
000664 5de3      	SUBI R30,LOW(-_posisi_lat)
000665 4fff      	SBCI R31,HIGH(-_posisi_lat)
000666 d549      	RCALL SUBOPT_0x60
                 ; 0000 0369                 k++;
000667 d4dc      	RCALL SUBOPT_0x4C
                 ; 0000 036A                 b++;
000668 d4bc      	RCALL SUBOPT_0x46
                 ; 0000 036B         }
000669 cff6      	RJMP _0x13A
                 _0x13C:
                 ; 0000 036C         j=b+1;
00066a d525      	RCALL SUBOPT_0x5A
                 ; 0000 036D 
                 ; 0000 036E         //set longitude
                 ; 0000 036F         b=j;
00066b d514      	RCALL SUBOPT_0x57
                 ; 0000 0370         k=0;
                 ; 0000 0371         while(buffer[b]!='"')
                 _0x13D:
00066c d4b3      	RCALL SUBOPT_0x45
00066d 32a2      	CPI  R26,LOW(0x22)
00066e f039      	BREQ _0x13F
                 ; 0000 0372         {
                 ; 0000 0373         	posisi_long[k]=buffer[b];
00066f 01fa      	MOVW R30,R20
000670 5cea      	SUBI R30,LOW(-_posisi_long)
000671 4fff      	SBCI R31,HIGH(-_posisi_long)
000672 d53d      	RCALL SUBOPT_0x60
                 ; 0000 0374                 k++;
000673 d4d0      	RCALL SUBOPT_0x4C
                 ; 0000 0375                 b++;
000674 d4b0      	RCALL SUBOPT_0x46
                 ; 0000 0376         }
000675 cff6      	RJMP _0x13D
                 _0x13F:
                 ; 0000 0377         j=b+1;
000676 d519      	RCALL SUBOPT_0x5A
                 ; 0000 0378 
                 ; 0000 0379         usegps:
                 _0x139:
                 ; 0000 037A         //use GPS ?
                 ; 0000 037B         b=j;
000677 d52c      	RCALL SUBOPT_0x5E
                 ; 0000 037C         gps=buffer[b];
000678 e1a5      	LDI  R26,LOW(_gps)
000679 e0b1      	LDI  R27,HIGH(_gps)
00067a d524      	RCALL SUBOPT_0x5D
                 ; 0000 037D         j=b+2;
                 ; 0000 037E 
                 ; 0000 037F         // battery voltage in comment ?
                 ; 0000 0380         b=j;
00067b d528      	RCALL SUBOPT_0x5E
                 ; 0000 0381         battvoltincomm=buffer[b];
00067c e4a7      	LDI  R26,LOW(_battvoltincomm)
00067d e0b0      	LDI  R27,HIGH(_battvoltincomm)
00067e d520      	RCALL SUBOPT_0x5D
                 ; 0000 0382         j=b+2;
                 ; 0000 0383 
                 ; 0000 0384         // temperature in comment ?
                 ; 0000 0385         b=j;
00067f d524      	RCALL SUBOPT_0x5E
                 ; 0000 0386         tempincomm=buffer[b];
000680 e4a8      	LDI  R26,LOW(_tempincomm)
000681 e0b0      	LDI  R27,HIGH(_tempincomm)
000682 d51c      	RCALL SUBOPT_0x5D
                 ; 0000 0387         j=b+2;
                 ; 0000 0388 
                 ; 0000 0389         // send altitude ?
                 ; 0000 038A         b=j;
000683 d520      	RCALL SUBOPT_0x5E
                 ; 0000 038B         sendalt=buffer[b];
000684 e1a4      	LDI  R26,LOW(_sendalt)
000685 e0b1      	LDI  R27,HIGH(_sendalt)
000686 d518      	RCALL SUBOPT_0x5D
                 ; 0000 038C         j=b+2;
                 ; 0000 038D 
                 ; 0000 038E         // send to PC ?
                 ; 0000 038F         b=j;
000687 d51c      	RCALL SUBOPT_0x5E
                 ; 0000 0390         sendtopc=buffer[b];
000688 e1a6      	LDI  R26,LOW(_sendtopc)
000689 e0b1      	LDI  R27,HIGH(_sendtopc)
00068a d86c      	RCALL __EEPROMWRB
                 ; 0000 0391         //j=b+2;
                 ; 0000 0392 
                 ; 0000 0393         //ProTrak! model A configuration ends here
                 ; 0000 0394 
                 ; 0000 0395         // EHCOING
                 ; 0000 0396         mem_display();
00068b dd91      	RCALL _mem_display
                 ; 0000 0397 
                 ; 0000 0398         //ProTrak! model A+ configuration ends here
                 ; 0000 0399 
                 ; 0000 039A         MERAH=0;
00068c 9896      	CBI  0x12,6
                 ; 0000 039B         HIJAU=0;
00068d 9897      	CBI  0x12,7
                 ; 0000 039C         putchar(13);putchar(13);putsf("CONFIG SUCCESS !");
00068e d45e      	RCALL SUBOPT_0x38
00068f d45d      	RCALL SUBOPT_0x38
                +
000690 e9e0     +LDI R30 , LOW ( 2 * _0x0 + ( 68 ) )
000691 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 68 ) )
                 	__POINTW1FN _0x0,68
000692 d485      	RCALL SUBOPT_0x42
                 ; 0000 039D         putchar(13);
000693 d459      	RCALL SUBOPT_0x38
                 ; 0000 039E 
                 ; 0000 039F 	#asm("sei")
000694 9478      	sei
                 ; 0000 03A0 }
000695 d883      	RCALL __LOADLOCR6
000696 9621      	ADIW R28,1
000697 5fde      	SUBI R29,-2
000698 9508      	RET
                 ;
                 ;
                 ;/***************************************************************************************/
                 ;	void 			ekstrak_gps(void)
                 ; 0000 03A5 /***************************************************************************************/
                 ; 0000 03A6 {
                 _ekstrak_gps:
                 ; 0000 03A7 	int i,j;
                 ; 0000 03A8         static char buff_posisi[20], buff_altitude[9];
                 ; 0000 03A9         char n_altitude[6];
                 ; 0000 03AA         char cb;
                 ; 0000 03AB 
                 ; 0000 03AC         HIJAU=1;
000699 9726      	SBIW R28,6
00069a d877      	RCALL __SAVELOCR6
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                 ;	n_altitude -> Y+6
                 ;	cb -> R21
00069b 9a97      	SBI  0x12,7
                 ; 0000 03AD         MERAH=0;
00069c 9896      	CBI  0x12,6
                 ; 0000 03AE 
                 ; 0000 03AF         //#asm("cli")
                 ; 0000 03B0         lagi:
                 _0x148:
                 ; 0000 03B1         while(getchar() != '$');
                 _0x149:
00069d d1aa      	RCALL _getchar
00069e 32e4      	CPI  R30,LOW(0x24)
00069f f7e9      	BRNE _0x149
                 ; 0000 03B2 	cb=getchar();
0006a0 d1a7      	RCALL _getchar
0006a1 2f5e      	MOV  R21,R30
                 ; 0000 03B3         if(cb=='G')
0006a2 3457      	CPI  R21,71
0006a3 f009      	BREQ PC+2
0006a4 c13f      	RJMP _0x14C
                 ; 0000 03B4         {
                 ; 0000 03B5         getchar();
0006a5 d1a2      	RCALL _getchar
                 ; 0000 03B6         if(getchar() == 'G')
0006a6 d1a1      	RCALL _getchar
0006a7 34e7      	CPI  R30,LOW(0x47)
0006a8 f009      	BREQ PC+2
0006a9 c139      	RJMP _0x14D
                 ; 0000 03B7         {
                 ; 0000 03B8         	if(getchar() == 'G')
0006aa d19d      	RCALL _getchar
0006ab 34e7      	CPI  R30,LOW(0x47)
0006ac f009      	BREQ PC+2
0006ad c135      	RJMP _0x14E
                 ; 0000 03B9         	{
                 ; 0000 03BA                         if(getchar() == 'A')
0006ae d199      	RCALL _getchar
0006af 34e1      	CPI  R30,LOW(0x41)
0006b0 f009      	BREQ PC+2
0006b1 c131      	RJMP _0x14F
                 ; 0000 03BB                 	{
                 ; 0000 03BC                                 getComma();
0006b2 dd66      	RCALL _getComma
                 ; 0000 03BD                                 getComma();
0006b3 dd65      	RCALL _getComma
                 ; 0000 03BE                                 for(i=0; i<8; i++)	buff_posisi[i] = getchar();
0006b4 d460      	RCALL SUBOPT_0x41
                 _0x151:
0006b5 d4ff      	RCALL SUBOPT_0x61
0006b6 f45c      	BRGE _0x152
0006b7 01f8      	MOVW R30,R16
0006b8 56e2      	SUBI R30,LOW(-_buff_posisi_S0000014000)
0006b9 4ffc      	SBCI R31,HIGH(-_buff_posisi_S0000014000)
0006ba 93ff      	PUSH R31
0006bb 93ef      	PUSH R30
0006bc d18b      	RCALL _getchar
0006bd 91af      	POP  R26
0006be 91bf      	POP  R27
0006bf 93ec      	ST   X,R30
0006c0 d464      	RCALL SUBOPT_0x46
0006c1 cff3      	RJMP _0x151
                 _0x152:
                 ; 0000 03C0 getComma();
0006c2 dd56      	RCALL _getComma
                 ; 0000 03C1                                 buff_posisi[8] = getchar();
0006c3 d184      	RCALL _getchar
                +
0006c4 93e0 03a6+STS _buff_posisi_S0000014000 + ( 8 ) , R30
                 	__PUTB1MN _buff_posisi_S0000014000,8
                 ; 0000 03C2                                 //posisi_lat[8]=getchar();
                 ; 0000 03C3                                 getComma();
0006c6 dd52      	RCALL _getComma
                 ; 0000 03C4                                 for(i=0; i<9; i++)	buff_posisi[i+9] = getchar();
0006c7 d44d      	RCALL SUBOPT_0x41
                 _0x154:
0006c8 d4f0      	RCALL SUBOPT_0x62
0006c9 f45c      	BRGE _0x155
0006ca 01f8      	MOVW R30,R16
                +
0006cb 55e9     +SUBI R30 , LOW ( - _buff_posisi_S0000014000 - ( 9 ) )
0006cc 4ffc     +SBCI R31 , HIGH ( - _buff_posisi_S0000014000 - ( 9 ) )
                 	__ADDW1MN _buff_posisi_S0000014000,9
0006cd 93ff      	PUSH R31
0006ce 93ef      	PUSH R30
0006cf d178      	RCALL _getchar
0006d0 91af      	POP  R26
0006d1 91bf      	POP  R27
0006d2 93ec      	ST   X,R30
0006d3 d451      	RCALL SUBOPT_0x46
0006d4 cff3      	RJMP _0x154
                 _0x155:
                 ; 0000 03C6 getComma();
0006d5 dd43      	RCALL _getComma
                 ; 0000 03C7                                 buff_posisi[18] = getchar();
0006d6 d171      	RCALL _getchar
                +
0006d7 93e0 03b0+STS _buff_posisi_S0000014000 + ( 18 ) , R30
                 	__PUTB1MN _buff_posisi_S0000014000,18
                 ; 0000 03C8                                 //posisi_long[9]=getchar();
                 ; 0000 03C9                                 getComma();
0006d9 dd3f      	RCALL _getComma
                 ; 0000 03CA                                 getComma();
0006da dd3e      	RCALL _getComma
                 ; 0000 03CB                                 getComma();
0006db dd3d      	RCALL _getComma
                 ; 0000 03CC                                 getComma();
0006dc dd3c      	RCALL _getComma
                 ; 0000 03CD                                 for(i=0;i<8;i++)        buff_altitude[i] = getchar();
0006dd d437      	RCALL SUBOPT_0x41
                 _0x157:
0006de d4d6      	RCALL SUBOPT_0x61
0006df f45c      	BRGE _0x158
0006e0 01f8      	MOVW R30,R16
0006e1 54ee      	SUBI R30,LOW(-_buff_altitude_S0000014000)
0006e2 4ffc      	SBCI R31,HIGH(-_buff_altitude_S0000014000)
0006e3 93ff      	PUSH R31
0006e4 93ef      	PUSH R30
0006e5 d162      	RCALL _getchar
0006e6 91af      	POP  R26
0006e7 91bf      	POP  R27
0006e8 93ec      	ST   X,R30
0006e9 d43b      	RCALL SUBOPT_0x46
0006ea cff3      	RJMP _0x157
                 _0x158:
                 ; 0000 03CE for(i=0;i<9;i++)	{posisi_lat[i]=buff_posisi[i];}
0006eb d429      	RCALL SUBOPT_0x41
                 _0x15A:
0006ec d4cc      	RCALL SUBOPT_0x62
0006ed f454      	BRGE _0x15B
0006ee 01f8      	MOVW R30,R16
0006ef 5de3      	SUBI R30,LOW(-_posisi_lat)
0006f0 4fff      	SBCI R31,HIGH(-_posisi_lat)
0006f1 010f      	MOVW R0,R30
0006f2 e9ae      	LDI  R26,LOW(_buff_posisi_S0000014000)
0006f3 e0b3      	LDI  R27,HIGH(_buff_posisi_S0000014000)
0006f4 d4c8      	RCALL SUBOPT_0x63
0006f5 d486      	RCALL SUBOPT_0x56
0006f6 d42e      	RCALL SUBOPT_0x46
0006f7 cff4      	RJMP _0x15A
                 _0x15B:
                 ; 0000 03CF         			for(i=0;i<10;i++)	{posisi_long[i]=buff_posisi[i+9];}
0006f8 d41c      	RCALL SUBOPT_0x41
                 _0x15D:
                +
0006f9 300a     +CPI R16 , LOW ( 10 )
0006fa e0e0     +LDI R30 , HIGH ( 10 )
0006fb 071e     +CPC R17 , R30
                 	__CPWRN 16,17,10
0006fc f454      	BRGE _0x15E
0006fd 01d8      	MOVW R26,R16
0006fe 5caa      	SUBI R26,LOW(-_posisi_long)
0006ff 4fbf      	SBCI R27,HIGH(-_posisi_long)
000700 01f8      	MOVW R30,R16
                +
000701 55e9     +SUBI R30 , LOW ( - _buff_posisi_S0000014000 - ( 9 ) )
000702 4ffc     +SBCI R31 , HIGH ( - _buff_posisi_S0000014000 - ( 9 ) )
                 	__ADDW1MN _buff_posisi_S0000014000,9
000703 81e0      	LD   R30,Z
000704 d7f2      	RCALL __EEPROMWRB
000705 d41f      	RCALL SUBOPT_0x46
000706 cff2      	RJMP _0x15D
                 _0x15E:
                 ; 0000 03D0                                 for(i=0;i<8;i++)if(posisi_lat[i]==',')posisi_lat[i]='0';
000707 d40d      	RCALL SUBOPT_0x41
                 _0x160:
000708 d4ac      	RCALL SUBOPT_0x61
000709 f464      	BRGE _0x161
00070a e2ad      	LDI  R26,LOW(_posisi_lat)
00070b e0b0      	LDI  R27,HIGH(_posisi_lat)
00070c d4b0      	RCALL SUBOPT_0x63
00070d d7d5      	RCALL __EEPROMRDB
00070e 32ec      	CPI  R30,LOW(0x2C)
00070f f421      	BRNE _0x162
000710 e2ad      	LDI  R26,LOW(_posisi_lat)
000711 e0b0      	LDI  R27,HIGH(_posisi_lat)
000712 d4aa      	RCALL SUBOPT_0x63
000713 d433      	RCALL SUBOPT_0x4D
                 ; 0000 03D1                                 for(i=0;i<9;i++)if(posisi_long[i]==',')posisi_long[i]='0';
                 _0x162:
000714 d410      	RCALL SUBOPT_0x46
000715 cff2      	RJMP _0x160
                 _0x161:
000716 d3fe      	RCALL SUBOPT_0x41
                 _0x164:
000717 d4a1      	RCALL SUBOPT_0x62
000718 f464      	BRGE _0x165
000719 e3a6      	LDI  R26,LOW(_posisi_long)
00071a e0b0      	LDI  R27,HIGH(_posisi_long)
00071b d4a1      	RCALL SUBOPT_0x63
00071c d7c6      	RCALL __EEPROMRDB
00071d 32ec      	CPI  R30,LOW(0x2C)
00071e f421      	BRNE _0x166
00071f e3a6      	LDI  R26,LOW(_posisi_long)
000720 e0b0      	LDI  R27,HIGH(_posisi_long)
000721 d49b      	RCALL SUBOPT_0x63
000722 d424      	RCALL SUBOPT_0x4D
                 ; 0000 03D2                                 if((posisi_lat[8]!='N')&&(posisi_lat[8]!='S'))posisi_lat[8]='N';
                 _0x166:
000723 d401      	RCALL SUBOPT_0x46
000724 cff2      	RJMP _0x164
                 _0x165:
000725 d2e5      	RCALL SUBOPT_0xC
000726 34ee      	CPI  R30,LOW(0x4E)
000727 f011      	BREQ _0x168
000728 35e3      	CPI  R30,LOW(0x53)
000729 f409      	BRNE _0x169
                 _0x168:
00072a c004      	RJMP _0x167
                 _0x169:
                +
00072b e3a5     +LDI R26 , LOW ( _posisi_lat + ( 8 ) )
00072c e0b0     +LDI R27 , HIGH ( _posisi_lat + ( 8 ) )
                 	__POINTW2MN _posisi_lat,8
00072d e4ee      	LDI  R30,LOW(78)
00072e d7c8      	RCALL __EEPROMWRB
                 ; 0000 03D3                                 if((posisi_long[9]!='E')&&(posisi_long[9]!='W'))posisi_long[9]='E';
                 _0x167:
00072f d341      	RCALL SUBOPT_0x1A
000730 34e5      	CPI  R30,LOW(0x45)
000731 f011      	BREQ _0x16B
000732 35e7      	CPI  R30,LOW(0x57)
000733 f409      	BRNE _0x16C
                 _0x16B:
000734 c004      	RJMP _0x16A
                 _0x16C:
                +
000735 e3af     +LDI R26 , LOW ( _posisi_long + ( 9 ) )
000736 e0b0     +LDI R27 , HIGH ( _posisi_long + ( 9 ) )
                 	__POINTW2MN _posisi_long,9
000737 e4e5      	LDI  R30,LOW(69)
000738 d7be      	RCALL __EEPROMWRB
                 ; 0000 03D4                                 for(i=0;i<6;i++)        n_altitude[i] = '0';
                 _0x16A:
000739 d3db      	RCALL SUBOPT_0x41
                 _0x16E:
00073a d485      	RCALL SUBOPT_0x64
00073b f434      	BRGE _0x16F
00073c d487      	RCALL SUBOPT_0x65
00073d d47f      	RCALL SUBOPT_0x63
00073e e3e0      	LDI  R30,LOW(48)
00073f 93ec      	ST   X,R30
000740 d3e4      	RCALL SUBOPT_0x46
000741 cff8      	RJMP _0x16E
                 _0x16F:
                 ; 0000 03D5 for(i=0;i<8;i++)
000742 d3d2      	RCALL SUBOPT_0x41
                 _0x171:
000743 d471      	RCALL SUBOPT_0x61
000744 f53c      	BRGE _0x172
                 ; 0000 03D6                                 {
                 ; 0000 03D7                                         if(buff_altitude[i] == '.')     goto selesai;
000745 d481      	RCALL SUBOPT_0x66
000746 f129      	BREQ _0x174
                 ; 0000 03D8                                         if((buff_altitude[i] != '.')&&(buff_altitude[i] != ',')&&(buff_altitude[i] != 'M'))
000747 d47f      	RCALL SUBOPT_0x66
000748 f031      	BREQ _0x176
000749 d483      	RCALL SUBOPT_0x67
00074a 32ac      	CPI  R26,LOW(0x2C)
00074b f019      	BREQ _0x176
00074c d480      	RCALL SUBOPT_0x67
00074d 34ad      	CPI  R26,LOW(0x4D)
00074e f409      	BRNE _0x177
                 _0x176:
00074f c01a      	RJMP _0x175
                 _0x177:
                 ; 0000 03D9                                         {
                 ; 0000 03DA                                                 for(j=0;j<6;j++)        n_altitude[j] = n_altitude[j+1];
                +
000750 e020     +LDI R18 , LOW ( 0 )
000751 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x179:
                +
000752 3026     +CPI R18 , LOW ( 6 )
000753 e0e0     +LDI R30 , HIGH ( 6 )
000754 073e     +CPC R19 , R30
                 	__CPWRN 18,19,6
000755 f47c      	BRGE _0x17A
000756 01f9      	MOVW R30,R18
000757 d46c      	RCALL SUBOPT_0x65
000758 d3c4      	RCALL SUBOPT_0x44
000759 010f      	MOVW R0,R30
00075a 01f9      	MOVW R30,R18
00075b 9631      	ADIW R30,1
00075c d467      	RCALL SUBOPT_0x65
00075d 0fae      	ADD  R26,R30
00075e 1fbf      	ADC  R27,R31
00075f 91ec      	LD   R30,X
000760 01d0      	MOVW R26,R0
000761 93ec      	ST   X,R30
                +
000762 5f2f     +SUBI R18 , LOW ( - 1 )
000763 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000764 cfed      	RJMP _0x179
                 _0x17A:
                 ; 0000 03DB n_altitude[5] = buff_altitude[i];
000765 eba2      	LDI  R26,LOW(_buff_altitude_S0000014000)
000766 e0b3      	LDI  R27,HIGH(_buff_altitude_S0000014000)
000767 d455      	RCALL SUBOPT_0x63
000768 91ec      	LD   R30,X
000769 87eb      	STD  Y+11,R30
                 ; 0000 03DC                                         }
                 ; 0000 03DD                                 }
                 _0x175:
00076a d3ba      	RCALL SUBOPT_0x46
00076b cfd7      	RJMP _0x171
                 _0x172:
                 ; 0000 03DE 
                 ; 0000 03DF                                 selesai:
                 _0x174:
                 ; 0000 03E0 
                 ; 0000 03E1                                 for(i=0;i<6;i++)        n_altitude[i] -= '0';
00076c d3a8      	RCALL SUBOPT_0x41
                 _0x17C:
00076d d452      	RCALL SUBOPT_0x64
00076e f43c      	BRGE _0x17D
00076f d454      	RCALL SUBOPT_0x65
000770 d44c      	RCALL SUBOPT_0x63
000771 91ec      	LD   R30,X
000772 53e0      	SUBI R30,LOW(48)
000773 93ec      	ST   X,R30
000774 d3b0      	RCALL SUBOPT_0x46
000775 cff7      	RJMP _0x17C
                 _0x17D:
                 ; 0000 03E3 n_altitude[0] *= 100000;
000776 81ee      	LDD  R30,Y+6
000777 eaa0      	LDI  R26,LOW(160)
000778 d459      	RCALL SUBOPT_0x68
000779 83ee      	STD  Y+6,R30
                 ; 0000 03E4                                 n_altitude[1] *=  10000;
00077a 01fe      	MOVW R30,R28
00077b 9637      	ADIW R30,7
00077c d458      	RCALL SUBOPT_0x69
00077d e1a0      	LDI  R26,LOW(16)
00077e d459      	RCALL SUBOPT_0x6A
                 ; 0000 03E5                                 n_altitude[2] *=   1000;
00077f 01fe      	MOVW R30,R28
000780 9638      	ADIW R30,8
000781 d453      	RCALL SUBOPT_0x69
000782 eea8      	LDI  R26,LOW(232)
000783 d454      	RCALL SUBOPT_0x6A
                 ; 0000 03E6                                 n_altitude[3] *=    100;
000784 01fe      	MOVW R30,R28
000785 9639      	ADIW R30,9
000786 d44e      	RCALL SUBOPT_0x69
000787 e6a4      	LDI  R26,LOW(100)
000788 d44f      	RCALL SUBOPT_0x6A
                 ; 0000 03E7                                 n_altitude[4] *=     10;
000789 01fe      	MOVW R30,R28
00078a 963a      	ADIW R30,10
00078b d449      	RCALL SUBOPT_0x69
00078c e0aa      	LDI  R26,LOW(10)
00078d d44a      	RCALL SUBOPT_0x6A
                 ; 0000 03E8 
                 ; 0000 03E9                                 n_altitude[5] += (n_altitude[0] + n_altitude[1] + n_altitude[2] + n_altitude[3] + n_altitude[4]);
00078e d44d      	RCALL SUBOPT_0x6B
00078f 01bf      	MOVW R22,R30
000790 8000      	LD   R0,Z
000791 81ef      	LDD  R30,Y+7
000792 81ae      	LDD  R26,Y+6
000793 0fea      	ADD  R30,R26
000794 85a8      	LDD  R26,Y+8
000795 0fea      	ADD  R30,R26
000796 85a9      	LDD  R26,Y+9
000797 0fea      	ADD  R30,R26
000798 85aa      	LDD  R26,Y+10
000799 0fea      	ADD  R30,R26
00079a 0de0      	ADD  R30,R0
00079b d443      	RCALL SUBOPT_0x6C
                 ; 0000 03EA                                 n_altitude[5] *= 3;
00079c d43f      	RCALL SUBOPT_0x6B
00079d d437      	RCALL SUBOPT_0x69
00079e e0a3      	LDI  R26,LOW(3)
00079f d438      	RCALL SUBOPT_0x6A
                 ; 0000 03EB 
                 ; 0000 03EC 
                 ; 0000 03ED                                 ketinggian=n_altitude[5];
0007a0 85eb      	LDD  R30,Y+11
0007a1 e0a4      	LDI  R26,LOW(_ketinggian)
0007a2 e0b0      	LDI  R27,HIGH(_ketinggian)
0007a3 d336      	RCALL SUBOPT_0x35
0007a4 d74a      	RCALL __EEPROMWRW
                 ; 0000 03EE                                 //ketinggian=3*atoi(n_altitude);
                 ; 0000 03EF 
                 ; 0000 03F0                                 n_altitude[0] = n_altitude[5] / 100000;
0007a5 d43c      	RCALL SUBOPT_0x6D
0007a6 d6b2      	RCALL __DIVD21
0007a7 83ee      	STD  Y+6,R30
                 ; 0000 03F1                                 n_altitude[5] = n_altitude[5]%100000;
0007a8 d439      	RCALL SUBOPT_0x6D
0007a9 d6ce      	RCALL __MODD21
0007aa 87eb      	STD  Y+11,R30
                 ; 0000 03F2 
                 ; 0000 03F3                                 n_altitude[1] = n_altitude[5] / 10000;
0007ab d43d      	RCALL SUBOPT_0x6E
0007ac e1e0      	LDI  R30,LOW(10000)
0007ad e2f7      	LDI  R31,HIGH(10000)
0007ae d680      	RCALL __DIVW21
0007af 83ef      	STD  Y+7,R30
                 ; 0000 03F4                                 n_altitude[5] %= 10000;
0007b0 d43d      	RCALL SUBOPT_0x6F
0007b1 e1e0      	LDI  R30,LOW(10000)
0007b2 e2f7      	LDI  R31,HIGH(10000)
0007b3 d6b6      	RCALL __MODW21
0007b4 d42a      	RCALL SUBOPT_0x6C
                 ; 0000 03F5 
                 ; 0000 03F6                                 n_altitude[2] = n_altitude[5] / 1000;
0007b5 d433      	RCALL SUBOPT_0x6E
0007b6 eee8      	LDI  R30,LOW(1000)
0007b7 e0f3      	LDI  R31,HIGH(1000)
0007b8 d676      	RCALL __DIVW21
0007b9 87e8      	STD  Y+8,R30
                 ; 0000 03F7                                 n_altitude[5] %= 1000;
0007ba d433      	RCALL SUBOPT_0x6F
0007bb eee8      	LDI  R30,LOW(1000)
0007bc e0f3      	LDI  R31,HIGH(1000)
0007bd d6ac      	RCALL __MODW21
0007be d420      	RCALL SUBOPT_0x6C
                 ; 0000 03F8 
                 ; 0000 03F9                                 n_altitude[3] = n_altitude[5] / 100;
0007bf 85ab      	LDD  R26,Y+11
0007c0 e6e4      	LDI  R30,LOW(100)
0007c1 d655      	RCALL __DIVB21
0007c2 87e9      	STD  Y+9,R30
                 ; 0000 03FA                                 n_altitude[5] %= 100;
0007c3 d418      	RCALL SUBOPT_0x6B
0007c4 01bf      	MOVW R22,R30
0007c5 81a0      	LD   R26,Z
0007c6 e6e4      	LDI  R30,LOW(100)
0007c7 d696      	RCALL __MODB21
0007c8 d416      	RCALL SUBOPT_0x6C
                 ; 0000 03FB 
                 ; 0000 03FC                                 n_altitude[4] = n_altitude[5] / 10;
0007c9 85ab      	LDD  R26,Y+11
0007ca e0ea      	LDI  R30,LOW(10)
0007cb d64b      	RCALL __DIVB21
0007cc 87ea      	STD  Y+10,R30
                 ; 0000 03FD                                 n_altitude[5] %= 10;
0007cd d40e      	RCALL SUBOPT_0x6B
0007ce 01bf      	MOVW R22,R30
0007cf 81a0      	LD   R26,Z
0007d0 e0ea      	LDI  R30,LOW(10)
0007d1 d68c      	RCALL __MODB21
0007d2 d40c      	RCALL SUBOPT_0x6C
                 ; 0000 03FE 
                 ; 0000 03FF                                 // itoa, pindahkan dari variable numerik ke eeprom
                 ; 0000 0400                                 for(i=0;i<6;i++)        altitude[i] = (char)(n_altitude[i] + '0');
0007d3 d341      	RCALL SUBOPT_0x41
                 _0x17F:
0007d4 d3eb      	RCALL SUBOPT_0x64
0007d5 f464      	BRGE _0x180
0007d6 01f8      	MOVW R30,R16
0007d7 5ce0      	SUBI R30,LOW(-_altitude)
0007d8 4fff      	SBCI R31,HIGH(-_altitude)
0007d9 010f      	MOVW R0,R30
0007da d3e9      	RCALL SUBOPT_0x65
0007db d3e1      	RCALL SUBOPT_0x63
0007dc 91ec      	LD   R30,X
0007dd 5de0      	SUBI R30,-LOW(48)
0007de 01d0      	MOVW R26,R0
0007df d717      	RCALL __EEPROMWRB
0007e0 d344      	RCALL SUBOPT_0x46
0007e1 cff2      	RJMP _0x17F
                 _0x180:
                 ; 0000 0402 goto keluar;
0007e2 c01d      	RJMP _0x181
                 ; 0000 0403                         }
                 ; 0000 0404                 }
                 _0x14F:
                 ; 0000 0405         }
                 _0x14E:
                 ; 0000 0406         }
                 _0x14D:
                 ; 0000 0407         else if(cb=='C')
0007e3 c01b      	RJMP _0x182
                 _0x14C:
0007e4 3453      	CPI  R21,67
0007e5 f461      	BRNE _0x183
                 ; 0000 0408         {
                 ; 0000 0409         	if(getchar()=='O')
0007e6 d061      	RCALL _getchar
0007e7 34ef      	CPI  R30,LOW(0x4F)
0007e8 f441      	BRNE _0x184
                 ; 0000 040A                 {
                 ; 0000 040B                 	if(getchar()=='N')
0007e9 d05e      	RCALL _getchar
0007ea 34ee      	CPI  R30,LOW(0x4E)
0007eb f429      	BRNE _0x185
                 ; 0000 040C                         {
                 ; 0000 040D                         	if(getchar()=='F')
0007ec d05b      	RCALL _getchar
0007ed 34e6      	CPI  R30,LOW(0x46)
0007ee f411      	BRNE _0x186
                 ; 0000 040E                                 {
                 ; 0000 040F                                 	config();
0007ef dcf6      	RCALL _config
                 ; 0000 0410                                         goto keluar;
0007f0 c00f      	RJMP _0x181
                 ; 0000 0411         			}
                 ; 0000 0412                         }
                 _0x186:
                 ; 0000 0413                 }
                 _0x185:
                 ; 0000 0414         }
                 _0x184:
                 ; 0000 0415 
                 ; 0000 0416 	else if(cb=='E')
0007f1 c00d      	RJMP _0x187
                 _0x183:
0007f2 3455      	CPI  R21,69
0007f3 f459      	BRNE _0x188
                 ; 0000 0417         {
                 ; 0000 0418         	if(getchar()=='C')
0007f4 d053      	RCALL _getchar
0007f5 34e3      	CPI  R30,LOW(0x43)
0007f6 f441      	BRNE _0x189
                 ; 0000 0419                 {
                 ; 0000 041A                 	if(getchar()=='H')
0007f7 d050      	RCALL _getchar
0007f8 34e8      	CPI  R30,LOW(0x48)
0007f9 f429      	BRNE _0x18A
                 ; 0000 041B                         {
                 ; 0000 041C                         	if(getchar()=='O')
0007fa d04d      	RCALL _getchar
0007fb 34ef      	CPI  R30,LOW(0x4F)
0007fc f411      	BRNE _0x18B
                 ; 0000 041D                                 {
                 ; 0000 041E                                 	mem_display();
0007fd dc1f      	RCALL _mem_display
                 ; 0000 041F                                         goto keluar;
0007fe c001      	RJMP _0x181
                 ; 0000 0420         			}
                 ; 0000 0421                         }
                 _0x18B:
                 ; 0000 0422                 }
                 _0x18A:
                 ; 0000 0423         }
                 _0x189:
                 ; 0000 0424 
                 ; 0000 0425         goto lagi;
                 _0x188:
                 _0x187:
                 _0x182:
0007ff ce9d      	RJMP _0x148
                 ; 0000 0426 
                 ; 0000 0427         keluar:
                 _0x181:
                 ; 0000 0428         //#asm("sei")
                 ; 0000 0429         HIJAU=0;
000800 9897      	CBI  0x12,7
                 ; 0000 042A         MERAH=0;
000801 9896      	CBI  0x12,6
                 ; 0000 042B 
                 ; 0000 042C } 	// EndOf void ekstrak_gps(void)
000802 d716      	RCALL __LOADLOCR6
000803 c131      	RJMP _0x20A0002
                 ;
                 ;
                 ;/***************************************************************************************/
                 ;	void main(void)
                 ; 0000 0431 /***************************************************************************************/
                 ; 0000 0432 {
                 _main:
                 ; 0000 0433 	PORTB=0x00;
000804 e0e0      	LDI  R30,LOW(0)
000805 bbe8      	OUT  0x18,R30
                 ; 0000 0434 	DDRB=0xFF;
000806 efef      	LDI  R30,LOW(255)
000807 bbe7      	OUT  0x17,R30
                 ; 0000 0435 	PORTD=0x03;
000808 e0e3      	LDI  R30,LOW(3)
000809 bbe2      	OUT  0x12,R30
                 ; 0000 0436 	DDRD=0xFE;
00080a efee      	LDI  R30,LOW(254)
00080b bbe1      	OUT  0x11,R30
                 ; 0000 0437 
                 ; 0000 0438         TCCR1A=0x00;
00080c e0e0      	LDI  R30,LOW(0)
00080d bdef      	OUT  0x2F,R30
                 ; 0000 0439 	TCCR1B=0x05;
00080e e0e5      	LDI  R30,LOW(5)
00080f bdee      	OUT  0x2E,R30
                 ; 0000 043A 	TCNT1H = (60135 >> 8);
000810 d1b0      	RCALL SUBOPT_0x3
                 ; 0000 043B         TCNT1L = (60135 & 0xFF);
                 ; 0000 043C         TIMSK=0x04;
000811 e0e4      	LDI  R30,LOW(4)
000812 bfe9      	OUT  0x39,R30
                 ; 0000 043D 
                 ; 0000 043E 	// Rx ON-noInt Tx ON-noInt
                 ; 0000 043F 	UCSRA=0x00;
000813 e0e0      	LDI  R30,LOW(0)
000814 b9eb      	OUT  0xB,R30
                 ; 0000 0440 	UCSRB=0x18;
000815 e1e8      	LDI  R30,LOW(24)
000816 b9ea      	OUT  0xA,R30
                 ; 0000 0441 	UCSRC=0x86;
000817 e8e6      	LDI  R30,LOW(134)
000818 bde0      	OUT  0x20,R30
                 ; 0000 0442 	UBRRH=0x00;
000819 e0e0      	LDI  R30,LOW(0)
00081a bde0      	OUT  0x20,R30
                 ; 0000 0443 	UBRRL=0x8F;
00081b e8ef      	LDI  R30,LOW(143)
00081c b9e9      	OUT  0x9,R30
                 ; 0000 0444 
                 ; 0000 0445 	ACSR=0x80;
00081d e8e0      	LDI  R30,LOW(128)
00081e b9e8      	OUT  0x8,R30
                 ; 0000 0446 
                 ; 0000 0447 	ADMUX=ADC_VREF_TYPE & 0xff;
00081f e0e0      	LDI  R30,LOW(0)
000820 b9e7      	OUT  0x7,R30
                 ; 0000 0448 	ADCSRA=0x84;
000821 e8e4      	LDI  R30,LOW(132)
000822 b9e6      	OUT  0x6,R30
                 ; 0000 0449 
                 ; 0000 044A         MERAH = 1;
000823 d294      	RCALL SUBOPT_0x2C
                 ; 0000 044B         HIJAU = 0;
                 ; 0000 044C         delay_ms(200);
000824 ece8      	LDI  R30,LOW(200)
000825 e0f0      	LDI  R31,HIGH(200)
000826 d197      	RCALL SUBOPT_0x2
                 ; 0000 044D         MERAH = 0;
000827 9896      	CBI  0x12,6
                 ; 0000 044E         HIJAU = 1;
000828 9a97      	SBI  0x12,7
                 ; 0000 044F         delay_ms(200);
000829 ece8      	LDI  R30,LOW(200)
00082a e0f0      	LDI  R31,HIGH(200)
00082b d192      	RCALL SUBOPT_0x2
                 ; 0000 0450 
                 ; 0000 0451         #asm("sei")
00082c 9478      	sei
                 ; 0000 0452 
                 ; 0000 0453         //kirim_paket();
                 ; 0000 0454 
                 ; 0000 0455 	while (1)
                 _0x198:
                 ; 0000 0456       	{
                 ; 0000 0457         	if(sendtopc=='Y')
00082d e1a6      	LDI  R26,LOW(_sendtopc)
00082e e0b1      	LDI  R27,HIGH(_sendtopc)
00082f d185      	RCALL SUBOPT_0x0
000830 f4a9      	BRNE _0x19B
                 ; 0000 0458                 {
                 ; 0000 0459                 read_temp();
000831 d8bd      	RCALL _read_temp
                 ; 0000 045A                 read_volt();
000832 d8e3      	RCALL _read_volt
                 ; 0000 045B                 putchar(13);putsf("Temperature       :");puts(temp);//putchar('C');
000833 d2b9      	RCALL SUBOPT_0x38
                +
000834 eae1     +LDI R30 , LOW ( 2 * _0x0 + ( 85 ) )
000835 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 85 ) )
                 	__POINTW1FN _0x0,85
000836 d2e1      	RCALL SUBOPT_0x42
000837 e8e0      	LDI  R30,LOW(_temp)
000838 e0f3      	LDI  R31,HIGH(_temp)
000839 d2cd      	RCALL SUBOPT_0x3E
00083a d017      	RCALL _puts
                 ; 0000 045C                 putchar(13);putsf("Battery Voltage   :");puts(volt);//putchar('V');
00083b d2b1      	RCALL SUBOPT_0x38
                +
00083c ebe5     +LDI R30 , LOW ( 2 * _0x0 + ( 105 ) )
00083d e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 105 ) )
                 	__POINTW1FN _0x0,105
00083e d2d9      	RCALL SUBOPT_0x42
00083f e8e7      	LDI  R30,LOW(_volt)
000840 e0f3      	LDI  R31,HIGH(_volt)
000841 d2c5      	RCALL SUBOPT_0x3E
000842 d00f      	RCALL _puts
                 ; 0000 045D                 delay_ms(1000);
000843 eee8      	LDI  R30,LOW(1000)
000844 e0f3      	LDI  R31,HIGH(1000)
000845 d178      	RCALL SUBOPT_0x2
                 ; 0000 045E                 }
                 ; 0000 045F       	}
                 _0x19B:
000846 cfe6      	RJMP _0x198
                 ; 0000 0460 
                 ; 0000 0461 }	// END OF MAIN PROGRAM
                 _0x19C:
000847 cfff      	RJMP _0x19C
                 ;/*
                 ;*
                 ;*	END OF FILE
                 ;*
                 ;****************************************************************************************/
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _getchar:
                 getchar0:
000848 9b5f           sbis usr,rxc
000849 cffe           rjmp getchar0
00084a b1ec           in   r30,udr
00084b 9508      	RET
                 _putchar:
                 putchar0:
00084c 9b5d           sbis usr,udre
00084d cffe           rjmp putchar0
00084e 81e8           ld   r30,y
00084f b9ec           out  udr,r30
                 _0x20A0005:
000850 9621      	ADIW R28,1
000851 9508      	RET
                 _puts:
000852 931a      	ST   -Y,R17
                 _0x2000003:
000853 81a9      	LDD  R26,Y+1
000854 81ba      	LDD  R27,Y+1+1
000855 91ed      	LD   R30,X+
000856 83a9      	STD  Y+1,R26
000857 83ba      	STD  Y+1+1,R27
000858 2f1e      	MOV  R17,R30
000859 30e0      	CPI  R30,0
00085a f019      	BREQ _0x2000005
00085b 931a      	ST   -Y,R17
00085c dfef      	RCALL _putchar
00085d cff5      	RJMP _0x2000003
                 _0x2000005:
00085e c00e      	RJMP _0x20A0004
                 _putsf:
00085f 931a      	ST   -Y,R17
                 _0x2000006:
000860 81e9      	LDD  R30,Y+1
000861 81fa      	LDD  R31,Y+1+1
000862 9631      	ADIW R30,1
000863 83e9      	STD  Y+1,R30
000864 83fa      	STD  Y+1+1,R31
000865 9731      	SBIW R30,1
000866 91e4      	LPM  R30,Z
000867 2f1e      	MOV  R17,R30
000868 30e0      	CPI  R30,0
000869 f019      	BREQ _0x2000008
00086a 931a      	ST   -Y,R17
00086b dfe0      	RCALL _putchar
00086c cff3      	RJMP _0x2000006
                 _0x2000008:
                 _0x20A0004:
00086d e0ea      	LDI  R30,LOW(10)
00086e d284      	RCALL SUBOPT_0x3A
00086f 8118      	LDD  R17,Y+0
000870 9623      	ADIW R28,3
000871 9508      	RET
                 
                 	.CSEG
                 _atoi:
000872 81b9         	ldd  r27,y+1
000873 81a8         	ld   r26,y
                 __atoi0:
000874 91ec         	ld   r30,x
000875 2f8a              mov  r24,r26
000876 93ea      	ST   -Y,R30
000877 d133      	RCALL _isspace
000878 2fa8              mov  r26,r24
000879 23ee         	tst  r30
00087a f011         	breq __atoi1
00087b 9611         	adiw r26,1
00087c cff7         	rjmp __atoi0
                 __atoi1:
00087d 94e8         	clt
00087e 91ec         	ld   r30,x
00087f 32ed         	cpi  r30,'-'
000880 f411         	brne __atoi2
000881 9468         	set
000882 c002         	rjmp __atoi3
                 __atoi2:
000883 32eb         	cpi  r30,'+'
000884 f409         	brne __atoi4
                 __atoi3:
000885 9611         	adiw r26,1
                 __atoi4:
000886 2766         	clr  r22
000887 2777         	clr  r23
                 __atoi5:
000888 91ec         	ld   r30,x
000889 2f8a              mov  r24,r26
00088a 93ea      	ST   -Y,R30
00088b d117      	RCALL _isdigit
00088c 2fa8              mov  r26,r24
00088d 23ee         	tst  r30
00088e f079         	breq __atoi6
00088f 01fb         	movw r30,r22
000890 0f66         	lsl  r22
000891 1f77         	rol  r23
000892 0f66         	lsl  r22
000893 1f77         	rol  r23
000894 0f6e         	add  r22,r30
000895 1f7f         	adc  r23,r31
000896 0f66         	lsl  r22
000897 1f77         	rol  r23
000898 91ed         	ld   r30,x+
000899 27ff         	clr  r31
00089a 53e0         	subi r30,'0'
00089b 0f6e         	add  r22,r30
00089c 1f7f         	adc  r23,r31
00089d cfea         	rjmp __atoi5
                 __atoi6:
00089e 01fb         	movw r30,r22
00089f f41e         	brtc __atoi7
0008a0 95e0         	com  r30
0008a1 95f0         	com  r31
0008a2 9631         	adiw r30,1
                 __atoi7:
0008a3 9622         	adiw r28,2
0008a4 9508         	ret
                 _itoa:
0008a5 91a9          ld   r26,y+
0008a6 91b9          ld   r27,y+
0008a7 91e9          ld   r30,y+
0008a8 91f9          ld   r31,y+
0008a9 9630          adiw r30,0
0008aa f42a          brpl __itoa0
0008ab 95e0          com  r30
0008ac 95f0          com  r31
0008ad 9631          adiw r30,1
0008ae e26d          ldi  r22,'-'
0008af 936d          st   x+,r22
                 __itoa0:
0008b0 94e8          clt
0008b1 e180          ldi  r24,low(10000)
0008b2 e297          ldi  r25,high(10000)
0008b3 d00d          rcall __itoa1
0008b4 ee88          ldi  r24,low(1000)
0008b5 e093          ldi  r25,high(1000)
0008b6 d00a          rcall __itoa1
0008b7 e684          ldi  r24,100
0008b8 2799          clr  r25
0008b9 d007          rcall __itoa1
0008ba e08a          ldi  r24,10
0008bb d005          rcall __itoa1
0008bc 2f6e          mov  r22,r30
0008bd d010          rcall __itoa5
0008be 2766          clr  r22
0008bf 936c          st   x,r22
0008c0 9508          ret
                 
                 __itoa1:
0008c1 2766          clr	 r22
                 __itoa2:
0008c2 17e8          cp   r30,r24
0008c3 07f9          cpc  r31,r25
0008c4 f020          brlo __itoa3
0008c5 9563          inc  r22
0008c6 1be8          sub  r30,r24
0008c7 0bf9          sbc  r31,r25
0008c8 f7c9          brne __itoa2
                 __itoa3:
0008c9 2366          tst  r22
0008ca f411          brne __itoa4
0008cb f016          brts __itoa5
0008cc 9508          ret
                 __itoa4:
0008cd 9468          set
                 __itoa5:
0008ce 5d60          subi r22,-0x30
0008cf 936d          st   x+,r22
0008d0 9508          ret
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _ftrunc:
0008d1 817b         ldd  r23,y+3
0008d2 816a         ldd  r22,y+2
0008d3 81f9         ldd  r31,y+1
0008d4 81e8         ld   r30,y
0008d5 fb77         bst  r23,7
0008d6 0f77         lsl  r23
0008d7 fd67         sbrc r22,7
0008d8 6071         sbr  r23,1
0008d9 2f97         mov  r25,r23
0008da 579e         subi r25,0x7e
0008db f081         breq __ftrunc0
0008dc f078         brcs __ftrunc0
0008dd 3198         cpi  r25,24
0008de f490         brsh __ftrunc1
0008df 27aa         clr  r26
0008e0 27bb         clr  r27
0008e1 2788         clr  r24
                 __ftrunc2:
0008e2 9408         sec
0008e3 9587         ror  r24
0008e4 95b7         ror  r27
0008e5 95a7         ror  r26
0008e6 959a         dec  r25
0008e7 f7d1         brne __ftrunc2
0008e8 23ea         and  r30,r26
0008e9 23fb         and  r31,r27
0008ea 2368         and  r22,r24
0008eb c005         rjmp __ftrunc1
                 __ftrunc0:
0008ec 94e8         clt
0008ed 2777         clr  r23
0008ee 27ee         clr  r30
0008ef 27ff         clr  r31
0008f0 2766         clr  r22
                 __ftrunc1:
0008f1 776f         cbr  r22,0x80
0008f2 9576         lsr  r23
0008f3 f408         brcc __ftrunc3
0008f4 6860         sbr  r22,0x80
                 __ftrunc3:
0008f5 f977         bld  r23,7
0008f6 91a9         ld   r26,y+
0008f7 91b9         ld   r27,y+
0008f8 9189         ld   r24,y+
0008f9 9199         ld   r25,y+
0008fa 17ea         cp   r30,r26
0008fb 07fb         cpc  r31,r27
0008fc 0768         cpc  r22,r24
0008fd 0779         cpc  r23,r25
0008fe fb97         bst  r25,7
0008ff 9508         ret
                 _floor:
000900 d2f4      	RCALL SUBOPT_0x70
000901 d2f5      	RCALL SUBOPT_0x71
000902 f411          brne __floor1
                 __floor0:
000903 d2f1      	RCALL SUBOPT_0x70
000904 c00e      	RJMP _0x20A0003
                 __floor1:
000905 f7ee          brtc __floor0
000906 d2ee      	RCALL SUBOPT_0x70
000907 d17e      	RCALL SUBOPT_0x1E
000908 d3c9      	RCALL __SUBF12
000909 c009      	RJMP _0x20A0003
                 _ceil:
00090a d2ea      	RCALL SUBOPT_0x70
00090b d2eb      	RCALL SUBOPT_0x71
00090c f411          brne __ceil1
                 __ceil0:
00090d d2e7      	RCALL SUBOPT_0x70
00090e c004      	RJMP _0x20A0003
                 __ceil1:
00090f f3ee          brts __ceil0
000910 d2e4      	RCALL SUBOPT_0x70
000911 d174      	RCALL SUBOPT_0x1E
000912 d3c6      	RCALL __ADDF12
                 _0x20A0003:
000913 9624      	ADIW R28,4
000914 9508      	RET
                 _fmod:
000915 9724      	SBIW R28,4
000916 d2e4      	RCALL SUBOPT_0x72
000917 d5f0      	RCALL __CPD10
000918 f411      	BRNE _0x2040005
000919 d2e6      	RCALL SUBOPT_0x73
00091a c01a      	RJMP _0x20A0002
                 _0x2040005:
00091b d2df      	RCALL SUBOPT_0x72
00091c d115      	RCALL SUBOPT_0x12
00091d d459      	RCALL __DIVF21
00091e d5a4      	RCALL __PUTD1S0
00091f d2d5      	RCALL SUBOPT_0x70
000920 d5e7      	RCALL __CPD10
000921 f411      	BRNE _0x2040006
000922 d2dd      	RCALL SUBOPT_0x73
000923 c011      	RJMP _0x20A0002
                 _0x2040006:
000924 d599      	RCALL __GETD2S0
000925 d5e6      	RCALL __CPD02
000926 f424      	BRGE _0x2040007
000927 d2cd      	RCALL SUBOPT_0x70
000928 d59f      	RCALL __PUTPARD1
000929 dfd6      	RCALL _floor
00092a c003      	RJMP _0x2040033
                 _0x2040007:
00092b d2c9      	RCALL SUBOPT_0x70
00092c d59b      	RCALL __PUTPARD1
00092d dfdc      	RCALL _ceil
                 _0x2040033:
00092e d594      	RCALL __PUTD1S0
00092f d2c5      	RCALL SUBOPT_0x70
000930 d0fc      	RCALL SUBOPT_0x11
000931 d3f7      	RCALL __MULF12
000932 d0ff      	RCALL SUBOPT_0x12
000933 d59e      	RCALL __SWAPD12
000934 d39d      	RCALL __SUBF12
                 _0x20A0002:
000935 962c      	ADIW R28,12
000936 9508      	RET
                 _log:
000937 9724      	SBIW R28,4
000938 d5dd      	RCALL __SAVELOCR2
000939 d141      	RCALL SUBOPT_0x1C
00093a d5d1      	RCALL __CPD02
00093b f02c      	BRLT _0x204000C
                +
00093c efef     +LDI R30 , LOW ( 0xFF7FFFFF )
00093d efff     +LDI R31 , HIGH ( 0xFF7FFFFF )
00093e e76f     +LDI R22 , BYTE3 ( 0xFF7FFFFF )
00093f ef7f     +LDI R23 , BYTE4 ( 0xFF7FFFFF )
                 	__GETD1N 0xFF7FFFFF
000940 c05f      	RJMP _0x20A0001
                 _0x204000C:
000941 d2c3      	RCALL SUBOPT_0x74
000942 d585      	RCALL __PUTPARD1
000943 b7ed      	IN   R30,SPL
000944 b7fe      	IN   R31,SPH
000945 9731      	SBIW R30,1
000946 d1c0      	RCALL SUBOPT_0x3E
000947 931f      	PUSH R17
000948 930f      	PUSH R16
000949 d2d6      	RCALL _frexp
00094a 910f      	POP  R16
00094b 911f      	POP  R17
00094c d2bd      	RCALL SUBOPT_0x75
00094d d12d      	RCALL SUBOPT_0x1C
                +
00094e efe3     +LDI R30 , LOW ( 0x3F3504F3 )
00094f e0f4     +LDI R31 , HIGH ( 0x3F3504F3 )
000950 e365     +LDI R22 , BYTE3 ( 0x3F3504F3 )
000951 e37f     +LDI R23 , BYTE4 ( 0x3F3504F3 )
                 	__GETD1N 0x3F3504F3
000952 d469      	RCALL __CMPF12
000953 f428      	BRSH _0x204000D
000954 d2b0      	RCALL SUBOPT_0x74
000955 d125      	RCALL SUBOPT_0x1C
000956 d11e      	RCALL SUBOPT_0x1B
                +
000957 5001     +SUBI R16 , LOW ( 1 )
000958 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
                 _0x204000D:
000959 d2ab      	RCALL SUBOPT_0x74
00095a d12b      	RCALL SUBOPT_0x1E
00095b d376      	RCALL __SUBF12
00095c 937f      	PUSH R23
00095d 936f      	PUSH R22
00095e 93ff      	PUSH R31
00095f 93ef      	PUSH R30
000960 d2a4      	RCALL SUBOPT_0x74
000961 d124      	RCALL SUBOPT_0x1E
000962 d376      	RCALL __ADDF12
000963 91af      	POP  R26
000964 91bf      	POP  R27
000965 918f      	POP  R24
000966 919f      	POP  R25
000967 d40f      	RCALL __DIVF21
000968 d2a1      	RCALL SUBOPT_0x75
000969 d29b      	RCALL SUBOPT_0x74
00096a d110      	RCALL SUBOPT_0x1C
00096b d3bd      	RCALL __MULF12
                +
00096c 83ea     +STD Y + 2 , R30
00096d 83fb     +STD Y + 2 + 1 , R31
00096e 836c     +STD Y + 2 + 2 , R22
00096f 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000970 d29e      	RCALL SUBOPT_0x76
                +
000971 e2a6     +LDI R26 , LOW ( 0x3F654226 )
000972 e4b2     +LDI R27 , HIGH ( 0x3F654226 )
000973 e685     +LDI R24 , BYTE3 ( 0x3F654226 )
000974 e39f     +LDI R25 , BYTE4 ( 0x3F654226 )
                 	__GETD2N 0x3F654226
000975 d3b3      	RCALL __MULF12
000976 01df      	MOVW R26,R30
000977 01cb      	MOVW R24,R22
                +
000978 e4ee     +LDI R30 , LOW ( 0x4054114E )
000979 e1f1     +LDI R31 , HIGH ( 0x4054114E )
00097a e564     +LDI R22 , BYTE3 ( 0x4054114E )
00097b e470     +LDI R23 , BYTE4 ( 0x4054114E )
                 	__GETD1N 0x4054114E
00097c d555      	RCALL __SWAPD12
00097d d354      	RCALL __SUBF12
00097e d0fc      	RCALL SUBOPT_0x1C
00097f d3a9      	RCALL __MULF12
000980 937f      	PUSH R23
000981 936f      	PUSH R22
000982 93ff      	PUSH R31
000983 93ef      	PUSH R30
000984 d28a      	RCALL SUBOPT_0x76
                +
000985 e4ad     +LDI R26 , LOW ( 0x3FD4114D )
000986 e1b1     +LDI R27 , HIGH ( 0x3FD4114D )
000987 ed84     +LDI R24 , BYTE3 ( 0x3FD4114D )
000988 e39f     +LDI R25 , BYTE4 ( 0x3FD4114D )
                 	__GETD2N 0x3FD4114D
000989 d348      	RCALL __SUBF12
00098a 91af      	POP  R26
00098b 91bf      	POP  R27
00098c 918f      	POP  R24
00098d 919f      	POP  R25
00098e d3e8      	RCALL __DIVF21
00098f 937f      	PUSH R23
000990 936f      	PUSH R22
000991 93ff      	PUSH R31
000992 93ef      	PUSH R30
000993 01f8      	MOVW R30,R16
000994 d461      	RCALL __CWD1
000995 d309      	RCALL __CDF1
                +
000996 e1a8     +LDI R26 , LOW ( 0x3F317218 )
000997 e7b2     +LDI R27 , HIGH ( 0x3F317218 )
000998 e381     +LDI R24 , BYTE3 ( 0x3F317218 )
000999 e39f     +LDI R25 , BYTE4 ( 0x3F317218 )
                 	__GETD2N 0x3F317218
00099a d38e      	RCALL __MULF12
00099b 91af      	POP  R26
00099c 91bf      	POP  R27
00099d 918f      	POP  R24
00099e 919f      	POP  R25
00099f d339      	RCALL __ADDF12
                 _0x20A0001:
0009a0 d57c      	RCALL __LOADLOCR2
0009a1 962a      	ADIW R28,10
0009a2 9508      	RET
                 
                 	.CSEG
                 _isdigit:
0009a3 e0e1          ldi  r30,1
0009a4 91f9          ld   r31,y+
0009a5 33f0          cpi  r31,'0'
0009a6 f010          brlo isdigit0
0009a7 33fa          cpi  r31,'9'+1
0009a8 f008          brlo isdigit1
                 isdigit0:
0009a9 27ee          clr  r30
                 isdigit1:
0009aa 9508          ret
                 _isspace:
0009ab e0e1          ldi  r30,1
0009ac 91f9          ld   r31,y+
0009ad 32f0          cpi  r31,' '
0009ae f029          breq isspace1
0009af 30f9          cpi  r31,9
0009b0 f010          brlo isspace0
0009b1 30fe          cpi  r31,13+1
0009b2 f008          brlo isspace1
                 isspace0:
0009b3 27ee          clr  r30
                 isspace1:
0009b4 9508          ret
                 
                 	.CSEG
                 
                 	.ESEG
                 _GAP_TIME_:
000000 05 00     	.DW  0x5
                 _SYM_TAB_OVL_:
000002 2f        	.DB  0x2F
                 _SYM_CODE_:
000003 5b        	.DB  0x5B
                 _ketinggian:
000004 00 00     	.DW  0x0
                 _add_aprs:
000006 82
000007 a0
000008 a4
000009 a6        	.DB  LOW(0xA6A4A082),HIGH(0xA6A4A082),BYTE3(0xA6A4A082),BYTE4(0xA6A4A082)
00000a 40 40     	.DW  0x4040
00000c 60        	.DB  0x60
                 _mycall:
00000d 59
00000e 44
00000f 32
000010 57        	.DB  LOW(0x57324459),HIGH(0x57324459),BYTE3(0x57324459),BYTE4(0x57324459)
000011 5a
000012 4d
000013 39
000014 00        	.DB  LOW(0x394D5A),HIGH(0x394D5A),BYTE3(0x394D5A),BYTE4(0x394D5A)
                 _mydigi1:
000015 57
000016 49
000017 44
000018 45        	.DB  LOW(0x45444957),HIGH(0x45444957),BYTE3(0x45444957),BYTE4(0x45444957)
000019 32
00001a 20
00001b 32
00001c 00        	.DB  LOW(0x322032),HIGH(0x322032),BYTE3(0x322032),BYTE4(0x322032)
                 _mydigi2:
00001d 57
00001e 49
00001f 44
000020 45        	.DB  LOW(0x45444957),HIGH(0x45444957),BYTE3(0x45444957),BYTE4(0x45444957)
000021 32
000022 20
000023 32
000024 00        	.DB  LOW(0x322032),HIGH(0x322032),BYTE3(0x322032),BYTE4(0x322032)
                 _mydigi3:
000025 57
000026 49
000027 44
000028 45        	.DB  LOW(0x45444957),HIGH(0x45444957),BYTE3(0x45444957),BYTE4(0x45444957)
000029 32
00002a 20
00002b 32
00002c 00        	.DB  LOW(0x322032),HIGH(0x322032),BYTE3(0x322032),BYTE4(0x322032)
                 _posisi_lat:
00002d 30
00002e 37
00002f 34
000030 35        	.DB  LOW(0x35343730),HIGH(0x35343730),BYTE3(0x35343730),BYTE4(0x35343730)
000031 2e
000032 39
000033 38
000034 32        	.DB  LOW(0x3238392E),HIGH(0x3238392E),BYTE3(0x3238392E),BYTE4(0x3238392E)
000035 53        	.DB  0x53
                 _posisi_long:
000036 31
000037 31
000038 30
000039 32        	.DB  LOW(0x32303131),HIGH(0x32303131),BYTE3(0x32303131),BYTE4(0x32303131)
00003a 32
00003b 2e
00003c 33
00003d 37        	.DB  LOW(0x37332E32),HIGH(0x37332E32),BYTE3(0x37332E32),BYTE4(0x37332E32)
00003e 35 45     	.DW  0x4535
                 _altitude:
000040           	.BYTE 0x6
                 _beacon_stat:
000046 00        	.DB  0x0
                 _battvoltincomm:
000047 59        	.DB  0x59
                 _tempincomm:
000048 59        	.DB  0x59
                 _komentar:
000049 4e
00004a 65
00004b 77
00004c 20        	.DB  LOW(0x2077654E),HIGH(0x2077654E),BYTE3(0x2077654E),BYTE4(0x2077654E)
00004d 54
00004e 72
00004f 61
000050 63        	.DB  LOW(0x63617254),HIGH(0x63617254),BYTE3(0x63617254),BYTE4(0x63617254)
000051 6b
000052 65
000053 72
000054 00        	.DB  LOW(0x72656B),HIGH(0x72656B),BYTE3(0x72656B),BYTE4(0x72656B)
000055 00
000056 00
000057 00
000058 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000059 00
00005a 00
00005b 00
00005c 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
00005d 00
00005e 00
00005f 00
000060 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000061 00
000062 00
000063 00
000064 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000065 00
000066 00
000067 00
000068 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000069 00
00006a 00
00006b 00
00006c 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
00006d 00
00006e 00
00006f 00
000070 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000071 00
000072 00
000073 00
000074 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000075 00
000076 00
000077 00
000078 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000079 00
00007a 00
00007b 00
00007c 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
00007d 00
00007e 00
00007f 00
000080 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000081 00
000082 00
000083 00
000084 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000085 00
000086 00
000087 00
000088 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000089 00
00008a 00
00008b 00
00008c 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
00008d 00
00008e 00
00008f 00
000090 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000091 00
000092 00
000093 00
000094 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000095 00
000096 00
000097 00
000098 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000099 00
00009a 00
00009b 00
00009c 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
00009d 00
00009e 00
00009f 00
0000a0 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
0000a1 00
0000a2 00
0000a3 00
0000a4 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
0000a5 00
0000a6 00
0000a7 00
0000a8 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
0000a9 00
0000aa 00
0000ab 00
0000ac 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
                 _status:
0000ad 50
0000ae 72
0000af 6f
0000b0 54        	.DB  LOW(0x546F7250),HIGH(0x546F7250),BYTE3(0x546F7250),BYTE4(0x546F7250)
0000b1 72
0000b2 61
0000b3 6b
0000b4 21        	.DB  LOW(0x216B6172),HIGH(0x216B6172),BYTE3(0x216B6172),BYTE4(0x216B6172)
0000b5 20
0000b6 41
0000b7 50
0000b8 52        	.DB  LOW(0x52504120),HIGH(0x52504120),BYTE3(0x52504120),BYTE4(0x52504120)
0000b9 53
0000ba 20
0000bb 26
0000bc 20        	.DB  LOW(0x20262053),HIGH(0x20262053),BYTE3(0x20262053),BYTE4(0x20262053)
0000bd 54
0000be 65
0000bf 6c
0000c0 65        	.DB  LOW(0x656C6554),HIGH(0x656C6554),BYTE3(0x656C6554),BYTE4(0x656C6554)
0000c1 6d
0000c2 65
0000c3 74
0000c4 72        	.DB  LOW(0x7274656D),HIGH(0x7274656D),BYTE3(0x7274656D),BYTE4(0x7274656D)
0000c5 79
0000c6 20
0000c7 45
0000c8 6e        	.DB  LOW(0x6E452079),HIGH(0x6E452079),BYTE3(0x6E452079),BYTE4(0x6E452079)
0000c9 63
0000ca 6f
0000cb 64
0000cc 65        	.DB  LOW(0x65646F63),HIGH(0x65646F63),BYTE3(0x65646F63),BYTE4(0x65646F63)
0000cd 72
0000ce 00
0000cf 00
0000d0 00        	.DB  LOW(0x72),HIGH(0x72),BYTE3(0x72),BYTE4(0x72)
0000d1 00
0000d2 00
0000d3 00
0000d4 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
0000d5 00
0000d6 00
0000d7 00
0000d8 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
0000d9 00
0000da 00
0000db 00
0000dc 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
0000dd 00
0000de 00
0000df 00
0000e0 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
0000e1 00
0000e2 00
0000e3 00
0000e4 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
0000e5 00
0000e6 00
0000e7 00
0000e8 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
0000e9 00
0000ea 00
0000eb 00
0000ec 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
0000ed 00
0000ee 00
0000ef 00
0000f0 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
0000f1 00
0000f2 00
0000f3 00
0000f4 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
0000f5 00
0000f6 00
0000f7 00
0000f8 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
0000f9 00
0000fa 00
0000fb 00
0000fc 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
0000fd 00
0000fe 00
0000ff 00
000100 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000101 00
000102 00
000103 00
000104 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000105 00
000106 00
000107 00
000108 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000109 00
00010a 00
00010b 00
00010c 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
00010d 00
00010e 00
00010f 00
000110 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
                 _timeIntv:
000111 14 00     	.DW  0x14
                 _compstat:
000113 59        	.DB  0x59
                 _sendalt:
000114 59        	.DB  0x59
                 _gps:
000115 4e        	.DB  0x4E
                 _sendtopc:
000116 4e        	.DB  0x4E
                 _commsize:
000117 0b        	.DB  0xB
                 _statsize:
000118 21        	.DB  0x21
                 
                 	.DSEG
                 _temp:
000380           	.BYTE 0x7
                 _volt:
000387           	.BYTE 0x7
                 _bit_stuff_G000:
00038e           	.BYTE 0x1
                 _comp_lat:
00038f           	.BYTE 0x4
                 _comp_long:
000393           	.BYTE 0x4
                 _comp_cst:
000397           	.BYTE 0x3
                 _crc_lo_S000000A000:
00039a           	.BYTE 0x1
                 _crc_hi_S000000A000:
00039b           	.BYTE 0x1
                 _xor_in_S000000C000:
00039c           	.BYTE 0x2
                 _buff_posisi_S0000014000:
00039e           	.BYTE 0x14
                 _buff_altitude_S0000014000:
0003b2           	.BYTE 0x9
                 __seed_G101:
0003bb           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
0009b5 d52d      	RCALL __EEPROMRDB
0009b6 35e9      	CPI  R30,LOW(0x59)
0009b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
0009b8 e0b0      	LDI  R27,0
0009b9 fda7      	SBRC R26,7
0009ba efbf      	SER  R27
0009bb 17ea      	CP   R30,R26
0009bc 07fb      	CPC  R31,R27
0009bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x2:
0009be 93fa      	ST   -Y,R31
0009bf 93ea      	ST   -Y,R30
0009c0 c253      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
0009c1 eeea      	LDI  R30,LOW(234)
0009c2 bded      	OUT  0x2D,R30
0009c3 eee7      	LDI  R30,LOW(231)
0009c4 bdec      	OUT  0x2C,R30
0009c5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
0009c6 d43a      	RCALL __MULW12U
0009c7 2766      	CLR  R22
0009c8 2777      	CLR  R23
0009c9 d2d5      	RCALL __CDF1
0009ca 01df      	MOVW R26,R30
0009cb 01cb      	MOVW R24,R22
0009cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x5:
0009cd d3a9      	RCALL __DIVF21
0009ce d299      	RCALL __CFD1
0009cf 018f      	MOVW R16,R30
0009d0 01d8      	MOVW R26,R16
0009d1 eee8      	LDI  R30,LOW(1000)
0009d2 e0f3      	LDI  R31,HIGH(1000)
0009d3 d45b      	RCALL __DIVW21
0009d4 2f3e      	MOV  R19,R30
0009d5 01d8      	MOVW R26,R16
0009d6 eee8      	LDI  R30,LOW(1000)
0009d7 e0f3      	LDI  R31,HIGH(1000)
0009d8 d491      	RCALL __MODW21
0009d9 01df      	MOVW R26,R30
0009da e6e4      	LDI  R30,LOW(100)
0009db e0f0      	LDI  R31,HIGH(100)
0009dc d452      	RCALL __DIVW21
0009dd 2f2e      	MOV  R18,R30
0009de 01d8      	MOVW R26,R16
0009df e6e4      	LDI  R30,LOW(100)
0009e0 e0f0      	LDI  R31,HIGH(100)
0009e1 d488      	RCALL __MODW21
0009e2 01df      	MOVW R26,R30
0009e3 e0ea      	LDI  R30,LOW(10)
0009e4 e0f0      	LDI  R31,HIGH(10)
0009e5 d449      	RCALL __DIVW21
0009e6 2f5e      	MOV  R21,R30
0009e7 01d8      	MOVW R26,R16
0009e8 e0ea      	LDI  R30,LOW(10)
0009e9 e0f0      	LDI  R31,HIGH(10)
0009ea d47f      	RCALL __MODW21
0009eb 2f4e      	MOV  R20,R30
0009ec 3030      	CPI  R19,0
0009ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x6:
0009ee d4f4      	RCALL __EEPROMRDB
0009ef 53e0      	SUBI R30,LOW(48)
0009f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x7:
0009f1 e0aa      	LDI  R26,LOW(10)
0009f2 02ea      	MULS R30,R26
0009f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:40 WORDS
                 SUBOPT_0x8:
0009f4 d3fb      	RCALL __CBD1
0009f5 d2a9      	RCALL __CDF1
0009f6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x9:
                +
0009f7 e0a0     +LDI R26 , LOW ( 0x42C80000 )
0009f8 e0b0     +LDI R27 , HIGH ( 0x42C80000 )
0009f9 ec88     +LDI R24 , BYTE3 ( 0x42C80000 )
0009fa e492     +LDI R25 , BYTE4 ( 0x42C80000 )
                 	__GETD2N 0x42C80000
0009fb d32d      	RCALL __MULF12
0009fc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xA:
0009fd dff6      	RCALL SUBOPT_0x8
                +
0009fe e0a0     +LDI R26 , LOW ( 0x41200000 )
0009ff e0b0     +LDI R27 , HIGH ( 0x41200000 )
000a00 e280     +LDI R24 , BYTE3 ( 0x41200000 )
000a01 e491     +LDI R25 , BYTE4 ( 0x41200000 )
                 	__GETD2N 0x41200000
000a02 d326      	RCALL __MULF12
000a03 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xB:
000a04 dfef      	RCALL SUBOPT_0x8
                +
000a05 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000a06 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000a07 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000a08 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000a09 d31f      	RCALL __MULF12
000a0a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC:
                +
000a0b e3a5     +LDI R26 , LOW ( _posisi_lat + ( 8 ) )
000a0c e0b0     +LDI R27 , HIGH ( _posisi_lat + ( 8 ) )
                 	__POINTW2MN _posisi_lat,8
000a0d d4d5      	RCALL __EEPROMRDB
000a0e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
                +
000a0f e0e1     +LDI R30 , LOW ( 0x1 )
000a10 e0f0     +LDI R31 , HIGH ( 0x1 )
000a11 e060     +LDI R22 , BYTE3 ( 0x1 )
000a12 e070     +LDI R23 , BYTE4 ( 0x1 )
                 	__GETD1N 0x1
000a13 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
                +
000a14 efef     +LDI R30 , LOW ( 0xFFFFFFFF )
000a15 efff     +LDI R31 , HIGH ( 0xFFFFFFFF )
000a16 ef6f     +LDI R22 , BYTE3 ( 0xFFFFFFFF )
000a17 ef7f     +LDI R23 , BYTE4 ( 0xFFFFFFFF )
                 	__GETD1N 0xFFFFFFFF
000a18 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xF:
000a19 2fe0      	MOV  R30,R16
000a1a dfd9      	RCALL SUBOPT_0x8
000a1b 01df      	MOVW R26,R30
000a1c 01cb      	MOVW R24,R22
                +
000a1d e0e0     +LDI R30 , LOW ( 0x42700000 )
000a1e e0f0     +LDI R31 , HIGH ( 0x42700000 )
000a1f e760     +LDI R22 , BYTE3 ( 0x42700000 )
000a20 e472     +LDI R23 , BYTE4 ( 0x42700000 )
                 	__GETD1N 0x42700000
000a21 d355      	RCALL __DIVF21
000a22 2fa1      	MOV  R26,R17
000a23 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x10:
000a24 d304      	RCALL __MULF12
000a25 01df      	MOVW R26,R30
000a26 01cb      	MOVW R24,R22
                +
000a27 e0e0     +LDI R30 , LOW ( 0x470CA000 )
000a28 eaf0     +LDI R31 , HIGH ( 0x470CA000 )
000a29 e06c     +LDI R22 , BYTE3 ( 0x470CA000 )
000a2a e477     +LDI R23 , BYTE4 ( 0x470CA000 )
                 	__GETD1N 0x470CA000
000a2b d34b      	RCALL __DIVF21
000a2c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
                +
000a2d 81ac     +LDD R26 , Y + 4
000a2e 81bd     +LDD R27 , Y + 4 + 1
000a2f 818e     +LDD R24 , Y + 4 + 2
000a30 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000a31 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x12:
                +
000a32 85a8     +LDD R26 , Y + 8
000a33 85b9     +LDD R27 , Y + 8 + 1
000a34 858a     +LDD R24 , Y + 8 + 2
000a35 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
000a36 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x13:
                +
000a37 e3e0     +LDI R30 , LOW ( 0x4937FA30 )
000a38 effa     +LDI R31 , HIGH ( 0x4937FA30 )
000a39 e367     +LDI R22 , BYTE3 ( 0x4937FA30 )
000a3a e479     +LDI R23 , BYTE4 ( 0x4937FA30 )
                 	__GETD1N 0x4937FA30
000a3b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0x14:
000a3c d33a      	RCALL __DIVF21
                +
000a3d e0a0     +LDI R26 , LOW ( 0x42040000 )
000a3e e0b0     +LDI R27 , HIGH ( 0x42040000 )
000a3f e084     +LDI R24 , BYTE3 ( 0x42040000 )
000a40 e492     +LDI R25 , BYTE4 ( 0x42040000 )
                 	__GETD2N 0x42040000
000a41 d297      	RCALL __ADDF12
000a42 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x15:
000a43 d224      	RCALL __CFD1
000a44 93ec      	ST   X,R30
                +
000a45 85e8     +LDD R30 , Y + 8
000a46 85f9     +LDD R31 , Y + 8 + 1
000a47 856a     +LDD R22 , Y + 8 + 2
000a48 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
000a49 d47e      	RCALL __PUTPARD1
000a4a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x16:
000a4b dfeb      	RCALL SUBOPT_0x13
000a4c d47b      	RCALL __PUTPARD1
000a4d dec7      	RCALL _fmod
000a4e 01df      	MOVW R26,R30
000a4f 01cb      	MOVW R24,R22
                +
000a50 e0e0     +LDI R30 , LOW ( 0x46016400 )
000a51 e6f4     +LDI R31 , HIGH ( 0x46016400 )
000a52 e061     +LDI R22 , BYTE3 ( 0x46016400 )
000a53 e476     +LDI R23 , BYTE4 ( 0x46016400 )
                 	__GETD1N 0x46016400
000a54 cfe7      	RJMP SUBOPT_0x14
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x17:
                +
000a55 e0e0     +LDI R30 , LOW ( 0x46016400 )
000a56 e6f4     +LDI R31 , HIGH ( 0x46016400 )
000a57 e061     +LDI R22 , BYTE3 ( 0x46016400 )
000a58 e476     +LDI R23 , BYTE4 ( 0x46016400 )
                 	__GETD1N 0x46016400
000a59 d46e      	RCALL __PUTPARD1
000a5a deba      	RCALL _fmod
000a5b 01df      	MOVW R26,R30
000a5c 01cb      	MOVW R24,R22
                +
000a5d e0e0     +LDI R30 , LOW ( 0x42B60000 )
000a5e e0f0     +LDI R31 , HIGH ( 0x42B60000 )
000a5f eb66     +LDI R22 , BYTE3 ( 0x42B60000 )
000a60 e472     +LDI R23 , BYTE4 ( 0x42B60000 )
                 	__GETD1N 0x42B60000
000a61 cfda      	RJMP SUBOPT_0x14
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x18:
                +
000a62 e0e0     +LDI R30 , LOW ( 0x42B60000 )
000a63 e0f0     +LDI R31 , HIGH ( 0x42B60000 )
000a64 eb66     +LDI R22 , BYTE3 ( 0x42B60000 )
000a65 e472     +LDI R23 , BYTE4 ( 0x42B60000 )
                 	__GETD1N 0x42B60000
000a66 d461      	RCALL __PUTPARD1
000a67 dead      	RCALL _fmod
                +
000a68 e0a0     +LDI R26 , LOW ( 0x42040000 )
000a69 e0b0     +LDI R27 , HIGH ( 0x42040000 )
000a6a e084     +LDI R24 , BYTE3 ( 0x42040000 )
000a6b e492     +LDI R25 , BYTE4 ( 0x42040000 )
                 	__GETD2N 0x42040000
000a6c d26c      	RCALL __ADDF12
000a6d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x19:
000a6e d1f9      	RCALL __CFD1
000a6f 93ec      	ST   X,R30
000a70 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1A:
                +
000a71 e3af     +LDI R26 , LOW ( _posisi_long + ( 9 ) )
000a72 e0b0     +LDI R27 , HIGH ( _posisi_long + ( 9 ) )
                 	__POINTW2MN _posisi_long,9
000a73 d46f      	RCALL __EEPROMRDB
000a74 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1B:
000a75 d263      	RCALL __ADDF12
                +
000a76 83ee     +STD Y + 6 , R30
000a77 83ff     +STD Y + 6 + 1 , R31
000a78 8768     +STD Y + 6 + 2 , R22
000a79 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
000a7a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1C:
                +
000a7b 81ae     +LDD R26 , Y + 6
000a7c 81bf     +LDD R27 , Y + 6 + 1
000a7d 8588     +LDD R24 , Y + 6 + 2
000a7e 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
000a7f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1D:
                +
000a80 85ea     +LDD R30 , Y + 10
000a81 85fb     +LDD R31 , Y + 10 + 1
000a82 856c     +LDD R22 , Y + 10 + 2
000a83 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000a84 d443      	RCALL __PUTPARD1
000a85 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x1E:
                +
000a86 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000a87 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000a88 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000a89 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000a8a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 24 TIMES, CODE SIZE REDUCTION:67 WORDS
                 SUBOPT_0x1F:
000a8b 2fa1      	MOV  R26,R17
000a8c e0b0      	LDI  R27,0
000a8d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x20:
000a8e d454      	RCALL __EEPROMRDB
000a8f 93ea      	ST   -Y,R30
000a90 c93a      	RJMP _kirim_karakter
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x21:
000a91 5fa3      	SUBI R26,LOW(-_mycall)
000a92 4fbf      	SBCI R27,HIGH(-_mycall)
000a93 d44f      	RCALL __EEPROMRDB
000a94 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x22:
000a95 0fee      	LSL  R30
000a96 93ea      	ST   -Y,R30
000a97 c933      	RJMP _kirim_karakter
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x23:
                +
000a98 e1a3     +LDI R26 , LOW ( _mycall + ( 6 ) )
000a99 e0b0     +LDI R27 , HIGH ( _mycall + ( 6 ) )
                 	__POINTW2MN _mycall,6
000a9a d448      	RCALL __EEPROMRDB
000a9b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x24:
000a9c 5eab      	SUBI R26,LOW(-_mydigi1)
000a9d 4fbf      	SBCI R27,HIGH(-_mydigi1)
000a9e d444      	RCALL __EEPROMRDB
000a9f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x25:
                +
000aa0 e1ab     +LDI R26 , LOW ( _mydigi1 + ( 6 ) )
000aa1 e0b0     +LDI R27 , HIGH ( _mydigi1 + ( 6 ) )
                 	__POINTW2MN _mydigi1,6
000aa2 d440      	RCALL __EEPROMRDB
000aa3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x26:
000aa4 5ea3      	SUBI R26,LOW(-_mydigi2)
000aa5 4fbf      	SBCI R27,HIGH(-_mydigi2)
000aa6 d43c      	RCALL __EEPROMRDB
000aa7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x27:
                +
000aa8 e2a3     +LDI R26 , LOW ( _mydigi2 + ( 6 ) )
000aa9 e0b0     +LDI R27 , HIGH ( _mydigi2 + ( 6 ) )
                 	__POINTW2MN _mydigi2,6
000aaa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x28:
000aab 5dab      	SUBI R26,LOW(-_mydigi3)
000aac 4fbf      	SBCI R27,HIGH(-_mydigi3)
000aad d435      	RCALL __EEPROMRDB
000aae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29:
                +
000aaf e2ab     +LDI R26 , LOW ( _mydigi3 + ( 6 ) )
000ab0 e0b0     +LDI R27 , HIGH ( _mydigi3 + ( 6 ) )
                 	__POINTW2MN _mydigi3,6
000ab1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2A:
000ab2 0fee      	LSL  R30
000ab3 5fef      	SUBI R30,-LOW(1)
000ab4 93ea      	ST   -Y,R30
000ab5 c915      	RJMP _kirim_karakter
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x2B:
000ab6 93ea      	ST   -Y,R30
000ab7 c913      	RJMP _kirim_karakter
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2C:
000ab8 9a96      	SBI  0x12,6
000ab9 9897      	CBI  0x12,7
000aba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2D:
000abb e0e0      	LDI  R30,LOW(0)
000abc 93e0 038e 	STS  _bit_stuff_G000,R30
000abe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2E:
000abf e1a1      	LDI  R26,LOW(_timeIntv)
000ac0 e0b1      	LDI  R27,HIGH(_timeIntv)
000ac1 d41d      	RCALL __EEPROMRDW
000ac2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2F:
000ac3 e1a8      	LDI  R26,LOW(_statsize)
000ac4 e0b1      	LDI  R27,HIGH(_statsize)
000ac5 d41d      	RCALL __EEPROMRDB
000ac6 171e      	CP   R17,R30
000ac7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x30:
000ac8 e0e0      	LDI  R30,LOW(0)
000ac9 d42d      	RCALL __EEPROMWRB
000aca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x31:
000acb 2fe1      	MOV  R30,R17
000acc e0f0      	LDI  R31,0
000acd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x32:
000ace 81e0      	LD   R30,Z
000acf cfe6      	RJMP SUBOPT_0x2B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x33:
000ad0 e1a7      	LDI  R26,LOW(_commsize)
000ad1 e0b1      	LDI  R27,HIGH(_commsize)
000ad2 d410      	RCALL __EEPROMRDB
000ad3 171e      	CP   R17,R30
000ad4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x34:
000ad5 e0e0      	LDI  R30,0
000ad6 fc20      	SBRC R2,0
000ad7 e0e1      	LDI  R30,1
000ad8 93ea      	ST   -Y,R30
000ad9 c933      	RJMP _set_nada
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x35:
000ada e0f0      	LDI  R31,0
000adb fde7      	SBRC R30,7
000adc efff      	SER  R31
000add 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x36:
                +
000ade e881     +LDI R24 , LOW ( 1153 )
000adf e094     +LDI R25 , HIGH ( 1153 )
                +__DELAY_USW_LOOP :
000ae0 9701     +SBIW R24 , 1
000ae1 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 1153
000ae2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x37:
                +
000ae3 e38f     +LDI R24 , LOW ( 575 )
000ae4 e092     +LDI R25 , HIGH ( 575 )
                +__DELAY_USW_LOOP :
000ae5 9701     +SBIW R24 , 1
000ae6 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 575
000ae7 9ac4      	SBI  0x18,4
                +
000ae8 e482     +LDI R24 , LOW ( 578 )
000ae9 e092     +LDI R25 , HIGH ( 578 )
                +__DELAY_USW_LOOP :
000aea 9701     +SBIW R24 , 1
000aeb f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 578
000aec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x38:
000aed e0ed      	LDI  R30,LOW(13)
000aee 93ea      	ST   -Y,R30
000aef cd5c      	RJMP _putchar
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:32 WORDS
                 SUBOPT_0x39:
000af0 e2ec      	LDI  R30,LOW(44)
000af1 93ea      	ST   -Y,R30
000af2 cd59      	RJMP _putchar
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 22 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x3A:
000af3 93ea      	ST   -Y,R30
000af4 cd57      	RJMP _putchar
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B:
000af5 e2ed      	LDI  R30,LOW(45)
000af6 cffc      	RJMP SUBOPT_0x3A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:40 WORDS
                 SUBOPT_0x3C:
000af7 e0f0      	LDI  R31,0
000af8 93fa      	ST   -Y,R31
000af9 93ea      	ST   -Y,R30
000afa 01fe      	MOVW R30,R28
000afb 9633      	ADIW R30,3
000afc 93fa      	ST   -Y,R31
000afd 93ea      	ST   -Y,R30
000afe dda6      	RCALL _itoa
000aff 01fe      	MOVW R30,R28
000b00 9631      	ADIW R30,1
000b01 93fa      	ST   -Y,R31
000b02 93ea      	ST   -Y,R30
000b03 cd4e      	RJMP _puts
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3D:
000b04 d3de      	RCALL __EEPROMRDB
000b05 30e0      	CPI  R30,0
000b06 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x3E:
000b07 93fa      	ST   -Y,R31
000b08 93ea      	ST   -Y,R30
000b09 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3F:
000b0a 01fe      	MOVW R30,R28
000b0b 9633      	ADIW R30,3
000b0c dffa      	RCALL SUBOPT_0x3E
000b0d dd97      	RCALL _itoa
000b0e 01fe      	MOVW R30,R28
000b0f 9631      	ADIW R30,1
000b10 dff6      	RCALL SUBOPT_0x3E
000b11 dd40      	RCALL _puts
000b12 cfdd      	RJMP SUBOPT_0x39
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x40:
000b13 d3cf      	RCALL __EEPROMRDB
000b14 cfde      	RJMP SUBOPT_0x3A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x41:
                +
000b15 e000     +LDI R16 , LOW ( 0 )
000b16 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
000b17 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x42:
000b18 dfee      	RCALL SUBOPT_0x3E
000b19 cd45      	RJMP _putsf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 60 TIMES, CODE SIZE REDUCTION:57 WORDS
                 SUBOPT_0x43:
000b1a 01de      	MOVW R26,R28
000b1b 961d      	ADIW R26,13
000b1c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x44:
000b1d 0fea      	ADD  R30,R26
000b1e 1ffb      	ADC  R31,R27
000b1f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:46 WORDS
                 SUBOPT_0x45:
000b20 dff9      	RCALL SUBOPT_0x43
000b21 0fa0      	ADD  R26,R16
000b22 1fb1      	ADC  R27,R17
000b23 91ac      	LD   R26,X
000b24 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 22 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x46:
                +
000b25 5f0f     +SUBI R16 , LOW ( - 1 )
000b26 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000b27 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 22 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x47:
                +
000b28 e040     +LDI R20 , LOW ( 0 )
000b29 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
000b2a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:34 WORDS
                 SUBOPT_0x48:
000b2b 01fa      	MOVW R30,R20
000b2c dfed      	RCALL SUBOPT_0x43
000b2d dfef      	RCALL SUBOPT_0x44
000b2e 010f      	MOVW R0,R30
000b2f dfea      	RCALL SUBOPT_0x43
000b30 0fa0      	ADD  R26,R16
000b31 1fb1      	ADC  R27,R17
000b32 91ec      	LD   R30,X
000b33 01d0      	MOVW R26,R0
000b34 93ec      	ST   X,R30
                +
000b35 5f4f     +SUBI R20 , LOW ( - 1 )
000b36 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
000b37 cfed      	RJMP SUBOPT_0x46
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x49:
000b38 01f8      	MOVW R30,R16
000b39 9631      	ADIW R30,1
000b3a 019f      	MOVW R18,R30
                +
000b3b 834e     +STD Y + 6 , R20
000b3c 835f     +STD Y + 6 + 1 , R21
                 	__PUTWSR 20,21,6
000b3d cfea      	RJMP SUBOPT_0x47
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x4A:
000b3e 0fa4      	ADD  R26,R20
000b3f 1fb5      	ADC  R27,R21
000b40 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4B:
000b41 e2e0      	LDI  R30,LOW(32)
000b42 d3b4      	RCALL __EEPROMWRB
000b43 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x4C:
                +
000b44 5f4f     +SUBI R20 , LOW ( - 1 )
000b45 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
000b46 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4D:
000b47 e3e0      	LDI  R30,LOW(48)
000b48 d3ae      	RCALL __EEPROMWRB
000b49 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x4E:
000b4a 81ee      	LDD  R30,Y+6
000b4b 81ff      	LDD  R31,Y+6+1
000b4c 174e      	CP   R20,R30
000b4d 075f      	CPC  R21,R31
000b4e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4F:
000b4f dfca      	RCALL SUBOPT_0x43
000b50 cfed      	RJMP SUBOPT_0x4A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x50:
000b51 91ac      	LD   R26,X
000b52 32ad      	CPI  R26,LOW(0x2D)
000b53 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x51:
000b54 81ae      	LDD  R26,Y+6
000b55 81bf      	LDD  R27,Y+6+1
000b56 1ba4      	SUB  R26,R20
000b57 0bb5      	SBC  R27,R21
000b58 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x52:
000b59 010f      	MOVW R0,R30
000b5a 01fa      	MOVW R30,R20
000b5b 9631      	ADIW R30,1
000b5c dfbd      	RCALL SUBOPT_0x43
000b5d 0fae      	ADD  R26,R30
000b5e 1fbf      	ADC  R27,R31
000b5f 91ec      	LD   R30,X
000b60 01d0      	MOVW R26,R0
000b61 d395      	RCALL __EEPROMWRB
000b62 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x53:
000b63 01fa      	MOVW R30,R20
000b64 9631      	ADIW R30,1
000b65 dfb4      	RCALL SUBOPT_0x43
000b66 0fae      	ADD  R26,R30
000b67 1fbf      	ADC  R27,R31
000b68 91ec      	LD   R30,X
000b69 53e0      	SUBI R30,LOW(48)
000b6a ce86      	RJMP SUBOPT_0x7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x54:
000b6b 01fa      	MOVW R30,R20
000b6c 9632      	ADIW R30,2
000b6d dfac      	RCALL SUBOPT_0x43
000b6e 0fae      	ADD  R26,R30
000b6f 1fbf      	ADC  R27,R31
000b70 91ec      	LD   R30,X
000b71 2da0      	MOV  R26,R0
000b72 0fae      	ADD  R26,R30
000b73 e3e0      	LDI  R30,LOW(48)
000b74 d366      	RCALL __SWAPB12
000b75 1bea      	SUB  R30,R26
000b76 5de0      	SUBI R30,-LOW(48)
000b77 01db      	MOVW R26,R22
000b78 d37e      	RCALL __EEPROMWRB
000b79 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x55:
000b7a 010f      	MOVW R0,R30
000b7b cfd3      	RJMP SUBOPT_0x4F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x56:
000b7c 91ec      	LD   R30,X
000b7d 01d0      	MOVW R26,R0
000b7e d378      	RCALL __EEPROMWRB
000b7f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x57:
000b80 0189      	MOVW R16,R18
000b81 cfa6      	RJMP SUBOPT_0x47
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x58:
000b82 01de      	MOVW R26,R28
000b83 9618      	ADIW R26,8
000b84 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x59:
000b85 01fa      	MOVW R30,R20
000b86 dffb      	RCALL SUBOPT_0x58
000b87 df95      	RCALL SUBOPT_0x44
000b88 010f      	MOVW R0,R30
000b89 df90      	RCALL SUBOPT_0x43
000b8a 0fa0      	ADD  R26,R16
000b8b 1fb1      	ADC  R27,R17
000b8c 91ec      	LD   R30,X
000b8d 01d0      	MOVW R26,R0
000b8e 93ec      	ST   X,R30
000b8f cfb4      	RJMP SUBOPT_0x4C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x5A:
000b90 01f8      	MOVW R30,R16
000b91 9631      	ADIW R30,1
000b92 019f      	MOVW R18,R30
000b93 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5B:
000b94 01fe      	MOVW R30,R28
000b95 9638      	ADIW R30,8
000b96 df70      	RCALL SUBOPT_0x3E
000b97 ccda      	RJMP _atoi
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5C:
000b98 d356      	RCALL __EEPROMWRW
000b99 0189      	MOVW R16,R18
000b9a df7f      	RCALL SUBOPT_0x43
000b9b 0fa0      	ADD  R26,R16
000b9c 1fb1      	ADC  R27,R17
000b9d 91ec      	LD   R30,X
000b9e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x5D:
000b9f d357      	RCALL __EEPROMWRB
000ba0 01f8      	MOVW R30,R16
000ba1 9632      	ADIW R30,2
000ba2 019f      	MOVW R18,R30
000ba3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x5E:
000ba4 0189      	MOVW R16,R18
000ba5 df74      	RCALL SUBOPT_0x43
000ba6 0fa0      	ADD  R26,R16
000ba7 1fb1      	ADC  R27,R17
000ba8 91ec      	LD   R30,X
000ba9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x5F:
000baa d338      	RCALL __EEPROMRDB
000bab 01da      	MOVW R26,R20
000bac df2d      	RCALL SUBOPT_0x35
000bad 17ae      	CP   R26,R30
000bae 07bf      	CPC  R27,R31
000baf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x60:
000bb0 010f      	MOVW R0,R30
000bb1 df68      	RCALL SUBOPT_0x43
000bb2 0fa0      	ADD  R26,R16
000bb3 1fb1      	ADC  R27,R17
000bb4 cfc7      	RJMP SUBOPT_0x56
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x61:
                +
000bb5 3008     +CPI R16 , LOW ( 8 )
000bb6 e0e0     +LDI R30 , HIGH ( 8 )
000bb7 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
000bb8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x62:
                +
000bb9 3009     +CPI R16 , LOW ( 9 )
000bba e0e0     +LDI R30 , HIGH ( 9 )
000bbb 071e     +CPC R17 , R30
                 	__CPWRN 16,17,9
000bbc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x63:
000bbd 0fa0      	ADD  R26,R16
000bbe 1fb1      	ADC  R27,R17
000bbf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x64:
                +
000bc0 3006     +CPI R16 , LOW ( 6 )
000bc1 e0e0     +LDI R30 , HIGH ( 6 )
000bc2 071e     +CPC R17 , R30
                 	__CPWRN 16,17,6
000bc3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x65:
000bc4 01de      	MOVW R26,R28
000bc5 9616      	ADIW R26,6
000bc6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x66:
000bc7 eba2      	LDI  R26,LOW(_buff_altitude_S0000014000)
000bc8 e0b3      	LDI  R27,HIGH(_buff_altitude_S0000014000)
000bc9 dff3      	RCALL SUBOPT_0x63
000bca 91ac      	LD   R26,X
000bcb 32ae      	CPI  R26,LOW(0x2E)
000bcc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x67:
000bcd eba2      	LDI  R26,LOW(_buff_altitude_S0000014000)
000bce e0b3      	LDI  R27,HIGH(_buff_altitude_S0000014000)
000bcf dfed      	RCALL SUBOPT_0x63
000bd0 91ac      	LD   R26,X
000bd1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x68:
000bd2 02ea      	MULS R30,R26
000bd3 01f0      	MOVW R30,R0
000bd4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x69:
000bd5 01bf      	MOVW R22,R30
000bd6 81e0      	LD   R30,Z
000bd7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x6A:
000bd8 dff9      	RCALL SUBOPT_0x68
000bd9 01db      	MOVW R26,R22
000bda 93ec      	ST   X,R30
000bdb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6B:
000bdc 01fe      	MOVW R30,R28
000bdd 963b      	ADIW R30,11
000bde 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x6C:
000bdf 01db      	MOVW R26,R22
000be0 93ec      	ST   X,R30
000be1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x6D:
000be2 85ab      	LDD  R26,Y+11
000be3 d217      	RCALL __CBD2
                +
000be4 eae0     +LDI R30 , LOW ( 0x186A0 )
000be5 e8f6     +LDI R31 , HIGH ( 0x186A0 )
000be6 e061     +LDI R22 , BYTE3 ( 0x186A0 )
000be7 e070     +LDI R23 , BYTE4 ( 0x186A0 )
                 	__GETD1N 0x186A0
000be8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6E:
000be9 85ab      	LDD  R26,Y+11
000bea e0b0      	LDI  R27,0
000beb fda7      	SBRC R26,7
000bec efbf      	SER  R27
000bed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6F:
000bee dfed      	RCALL SUBOPT_0x6B
000bef 01bf      	MOVW R22,R30
000bf0 81a0      	LD   R26,Z
000bf1 e0b0      	LDI  R27,0
000bf2 fda7      	SBRC R26,7
000bf3 efbf      	SER  R27
000bf4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x70:
000bf5 d2c3      	RCALL __GETD1S0
000bf6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x71:
000bf7 d2d0      	RCALL __PUTPARD1
000bf8 dcd8      	RCALL _ftrunc
000bf9 d2c9      	RCALL __PUTD1S0
000bfa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x72:
                +
000bfb 81ec     +LDD R30 , Y + 4
000bfc 81fd     +LDD R31 , Y + 4 + 1
000bfd 816e     +LDD R22 , Y + 4 + 2
000bfe 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
000bff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x73:
                +
000c00 e0e0     +LDI R30 , LOW ( 0x0 )
000c01 e0f0     +LDI R31 , HIGH ( 0x0 )
000c02 e060     +LDI R22 , BYTE3 ( 0x0 )
000c03 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
000c04 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x74:
                +
000c05 81ee     +LDD R30 , Y + 6
000c06 81ff     +LDD R31 , Y + 6 + 1
000c07 8568     +LDD R22 , Y + 6 + 2
000c08 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
000c09 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x75:
                +
000c0a 83ee     +STD Y + 6 , R30
000c0b 83ff     +STD Y + 6 + 1 , R31
000c0c 8768     +STD Y + 6 + 2 , R22
000c0d 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
000c0e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x76:
                +
000c0f 81ea     +LDD R30 , Y + 2
000c10 81fb     +LDD R31 , Y + 2 + 1
000c11 816c     +LDD R22 , Y + 2 + 2
000c12 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
000c13 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000c14 91e9      	ld   r30,y+
000c15 91f9      	ld   r31,y+
000c16 9630      	adiw r30,0
000c17 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000c18 ec8d     +LDI R24 , LOW ( 0xACD )
000c19 e09a     +LDI R25 , HIGH ( 0xACD )
                +__DELAY_USW_LOOP :
000c1a 9701     +SBIW R24 , 1
000c1b f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xACD
000c1c 95a8      	wdr
000c1d 9731      	sbiw r30,1
000c1e f7c9      	brne __delay_ms0
                 __delay_ms1:
000c1f 9508      	ret
                 
                 _frexp:
000c20 91a9      	LD   R26,Y+
000c21 91b9      	LD   R27,Y+
000c22 91e9      	LD   R30,Y+
000c23 91f9      	LD   R31,Y+
000c24 9169      	LD   R22,Y+
000c25 9179      	LD   R23,Y+
000c26 fb77      	BST  R23,7
000c27 0f66      	LSL  R22
000c28 1f77      	ROL  R23
000c29 2788      	CLR  R24
000c2a 577e      	SUBI R23,0x7E
000c2b 0b88      	SBC  R24,R24
000c2c 937d      	ST   X+,R23
000c2d 938c      	ST   X,R24
000c2e e77e      	LDI  R23,0x7E
000c2f 9576      	LSR  R23
000c30 9567      	ROR  R22
000c31 f00e      	BRTS __ANEGF1
000c32 9508      	RET
                 
                 __ANEGF1:
000c33 9730      	SBIW R30,0
000c34 4060      	SBCI R22,0
000c35 4070      	SBCI R23,0
000c36 f009      	BREQ __ANEGF10
000c37 5870      	SUBI R23,0x80
                 __ANEGF10:
000c38 9508      	RET
                 
                 __ROUND_REPACK:
000c39 2355      	TST  R21
000c3a f442      	BRPL __REPACK
000c3b 3850      	CPI  R21,0x80
000c3c f411      	BRNE __ROUND_REPACK0
000c3d ffe0      	SBRS R30,0
000c3e c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000c3f 9631      	ADIW R30,1
000c40 1f69      	ADC  R22,R25
000c41 1f79      	ADC  R23,R25
000c42 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000c43 e850      	LDI  R21,0x80
000c44 2757      	EOR  R21,R23
000c45 f411      	BRNE __REPACK0
000c46 935f      	PUSH R21
000c47 c0cf      	RJMP __ZERORES
                 __REPACK0:
000c48 3f5f      	CPI  R21,0xFF
000c49 f031      	BREQ __REPACK1
000c4a 0f66      	LSL  R22
000c4b 0c00      	LSL  R0
000c4c 9557      	ROR  R21
000c4d 9567      	ROR  R22
000c4e 2f75      	MOV  R23,R21
000c4f 9508      	RET
                 __REPACK1:
000c50 935f      	PUSH R21
000c51 2000      	TST  R0
000c52 f00a      	BRMI __REPACK2
000c53 c0cf      	RJMP __MAXRES
                 __REPACK2:
000c54 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000c55 e850      	LDI  R21,0x80
000c56 2e19      	MOV  R1,R25
000c57 2215      	AND  R1,R21
000c58 0f88      	LSL  R24
000c59 1f99      	ROL  R25
000c5a 2795      	EOR  R25,R21
000c5b 0f55      	LSL  R21
000c5c 9587      	ROR  R24
                 
                 __UNPACK1:
000c5d e850      	LDI  R21,0x80
000c5e 2e07      	MOV  R0,R23
000c5f 2205      	AND  R0,R21
000c60 0f66      	LSL  R22
000c61 1f77      	ROL  R23
000c62 2775      	EOR  R23,R21
000c63 0f55      	LSL  R21
000c64 9567      	ROR  R22
000c65 9508      	RET
                 
                 __CFD1U:
000c66 9468      	SET
000c67 c001      	RJMP __CFD1U0
                 __CFD1:
000c68 94e8      	CLT
                 __CFD1U0:
000c69 935f      	PUSH R21
000c6a dff2      	RCALL __UNPACK1
000c6b 3870      	CPI  R23,0x80
000c6c f018      	BRLO __CFD10
000c6d 3f7f      	CPI  R23,0xFF
000c6e f408      	BRCC __CFD10
000c6f c0a7      	RJMP __ZERORES
                 __CFD10:
000c70 e156      	LDI  R21,22
000c71 1b57      	SUB  R21,R23
000c72 f4aa      	BRPL __CFD11
000c73 9551      	NEG  R21
000c74 3058      	CPI  R21,8
000c75 f40e      	BRTC __CFD19
000c76 3059      	CPI  R21,9
                 __CFD19:
000c77 f030      	BRLO __CFD17
000c78 efef      	SER  R30
000c79 efff      	SER  R31
000c7a ef6f      	SER  R22
000c7b e77f      	LDI  R23,0x7F
000c7c f977      	BLD  R23,7
000c7d c01a      	RJMP __CFD15
                 __CFD17:
000c7e 2777      	CLR  R23
000c7f 2355      	TST  R21
000c80 f0b9      	BREQ __CFD15
                 __CFD18:
000c81 0fee      	LSL  R30
000c82 1fff      	ROL  R31
000c83 1f66      	ROL  R22
000c84 1f77      	ROL  R23
000c85 955a      	DEC  R21
000c86 f7d1      	BRNE __CFD18
000c87 c010      	RJMP __CFD15
                 __CFD11:
000c88 2777      	CLR  R23
                 __CFD12:
000c89 3058      	CPI  R21,8
000c8a f028      	BRLO __CFD13
000c8b 2fef      	MOV  R30,R31
000c8c 2ff6      	MOV  R31,R22
000c8d 2f67      	MOV  R22,R23
000c8e 5058      	SUBI R21,8
000c8f cff9      	RJMP __CFD12
                 __CFD13:
000c90 2355      	TST  R21
000c91 f031      	BREQ __CFD15
                 __CFD14:
000c92 9576      	LSR  R23
000c93 9567      	ROR  R22
000c94 95f7      	ROR  R31
000c95 95e7      	ROR  R30
000c96 955a      	DEC  R21
000c97 f7d1      	BRNE __CFD14
                 __CFD15:
000c98 2000      	TST  R0
000c99 f40a      	BRPL __CFD16
000c9a d145      	RCALL __ANEGD1
                 __CFD16:
000c9b 915f      	POP  R21
000c9c 9508      	RET
                 
                 __CDF1U:
000c9d 9468      	SET
000c9e c001      	RJMP __CDF1U0
                 __CDF1:
000c9f 94e8      	CLT
                 __CDF1U0:
000ca0 9730      	SBIW R30,0
000ca1 4060      	SBCI R22,0
000ca2 4070      	SBCI R23,0
000ca3 f0b1      	BREQ __CDF10
000ca4 2400      	CLR  R0
000ca5 f026      	BRTS __CDF11
000ca6 2377      	TST  R23
000ca7 f412      	BRPL __CDF11
000ca8 9400      	COM  R0
000ca9 d136      	RCALL __ANEGD1
                 __CDF11:
000caa 2e17      	MOV  R1,R23
000cab e17e      	LDI  R23,30
000cac 2011      	TST  R1
                 __CDF12:
000cad f032      	BRMI __CDF13
000cae 957a      	DEC  R23
000caf 0fee      	LSL  R30
000cb0 1fff      	ROL  R31
000cb1 1f66      	ROL  R22
000cb2 1c11      	ROL  R1
000cb3 cff9      	RJMP __CDF12
                 __CDF13:
000cb4 2fef      	MOV  R30,R31
000cb5 2ff6      	MOV  R31,R22
000cb6 2d61      	MOV  R22,R1
000cb7 935f      	PUSH R21
000cb8 df8a      	RCALL __REPACK
000cb9 915f      	POP  R21
                 __CDF10:
000cba 9508      	RET
                 
                 __SWAPACC:
000cbb 934f      	PUSH R20
000cbc 01af      	MOVW R20,R30
000cbd 01fd      	MOVW R30,R26
000cbe 01da      	MOVW R26,R20
000cbf 01ab      	MOVW R20,R22
000cc0 01bc      	MOVW R22,R24
000cc1 01ca      	MOVW R24,R20
000cc2 2d40      	MOV  R20,R0
000cc3 2c01      	MOV  R0,R1
000cc4 2e14      	MOV  R1,R20
000cc5 914f      	POP  R20
000cc6 9508      	RET
                 
                 __UADD12:
000cc7 0fea      	ADD  R30,R26
000cc8 1ffb      	ADC  R31,R27
000cc9 1f68      	ADC  R22,R24
000cca 9508      	RET
                 
                 __NEGMAN1:
000ccb 95e0      	COM  R30
000ccc 95f0      	COM  R31
000ccd 9560      	COM  R22
000cce 5fef      	SUBI R30,-1
000ccf 4fff      	SBCI R31,-1
000cd0 4f6f      	SBCI R22,-1
000cd1 9508      	RET
                 
                 __SUBF12:
000cd2 935f      	PUSH R21
000cd3 df81      	RCALL __UNPACK
000cd4 3890      	CPI  R25,0x80
000cd5 f171      	BREQ __ADDF129
000cd6 e850      	LDI  R21,0x80
000cd7 2615      	EOR  R1,R21
                 
000cd8 c004      	RJMP __ADDF120
                 
                 __ADDF12:
000cd9 935f      	PUSH R21
000cda df7a      	RCALL __UNPACK
000cdb 3890      	CPI  R25,0x80
000cdc f139      	BREQ __ADDF129
                 
                 __ADDF120:
000cdd 3870      	CPI  R23,0x80
000cde f121      	BREQ __ADDF128
                 __ADDF121:
000cdf 2f57      	MOV  R21,R23
000ce0 1b59      	SUB  R21,R25
000ce1 f12b      	BRVS __ADDF1211
000ce2 f412      	BRPL __ADDF122
000ce3 dfd7      	RCALL __SWAPACC
000ce4 cffa      	RJMP __ADDF121
                 __ADDF122:
000ce5 3158      	CPI  R21,24
000ce6 f018      	BRLO __ADDF123
000ce7 27aa      	CLR  R26
000ce8 27bb      	CLR  R27
000ce9 2788      	CLR  R24
                 __ADDF123:
000cea 3058      	CPI  R21,8
000ceb f028      	BRLO __ADDF124
000cec 2fab      	MOV  R26,R27
000ced 2fb8      	MOV  R27,R24
000cee 2788      	CLR  R24
000cef 5058      	SUBI R21,8
000cf0 cff9      	RJMP __ADDF123
                 __ADDF124:
000cf1 2355      	TST  R21
000cf2 f029      	BREQ __ADDF126
                 __ADDF125:
000cf3 9586      	LSR  R24
000cf4 95b7      	ROR  R27
000cf5 95a7      	ROR  R26
000cf6 955a      	DEC  R21
000cf7 f7d9      	BRNE __ADDF125
                 __ADDF126:
000cf8 2d50      	MOV  R21,R0
000cf9 2551      	EOR  R21,R1
000cfa f072      	BRMI __ADDF127
000cfb dfcb      	RCALL __UADD12
000cfc f438      	BRCC __ADDF129
000cfd 9567      	ROR  R22
000cfe 95f7      	ROR  R31
000cff 95e7      	ROR  R30
000d00 9573      	INC  R23
000d01 f413      	BRVC __ADDF129
000d02 c020      	RJMP __MAXRES
                 __ADDF128:
000d03 dfb7      	RCALL __SWAPACC
                 __ADDF129:
000d04 df3e      	RCALL __REPACK
000d05 915f      	POP  R21
000d06 9508      	RET
                 __ADDF1211:
000d07 f7d8      	BRCC __ADDF128
000d08 cffb      	RJMP __ADDF129
                 __ADDF127:
000d09 1bea      	SUB  R30,R26
000d0a 0bfb      	SBC  R31,R27
000d0b 0b68      	SBC  R22,R24
000d0c f051      	BREQ __ZERORES
000d0d f410      	BRCC __ADDF1210
000d0e 9400      	COM  R0
000d0f dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000d10 2366      	TST  R22
000d11 f392      	BRMI __ADDF129
000d12 0fee      	LSL  R30
000d13 1fff      	ROL  R31
000d14 1f66      	ROL  R22
000d15 957a      	DEC  R23
000d16 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000d17 27ee      	CLR  R30
000d18 27ff      	CLR  R31
000d19 2766      	CLR  R22
000d1a 2777      	CLR  R23
000d1b 915f      	POP  R21
000d1c 9508      	RET
                 
                 __MINRES:
000d1d efef      	SER  R30
000d1e efff      	SER  R31
000d1f e76f      	LDI  R22,0x7F
000d20 ef7f      	SER  R23
000d21 915f      	POP  R21
000d22 9508      	RET
                 
                 __MAXRES:
000d23 efef      	SER  R30
000d24 efff      	SER  R31
000d25 e76f      	LDI  R22,0x7F
000d26 e77f      	LDI  R23,0x7F
000d27 915f      	POP  R21
000d28 9508      	RET
                 
                 __MULF12:
000d29 935f      	PUSH R21
000d2a df2a      	RCALL __UNPACK
000d2b 3870      	CPI  R23,0x80
000d2c f351      	BREQ __ZERORES
000d2d 3890      	CPI  R25,0x80
000d2e f341      	BREQ __ZERORES
000d2f 2401      	EOR  R0,R1
000d30 9408      	SEC
000d31 1f79      	ADC  R23,R25
000d32 f423      	BRVC __MULF124
000d33 f31c      	BRLT __ZERORES
                 __MULF125:
000d34 2000      	TST  R0
000d35 f33a      	BRMI __MINRES
000d36 cfec      	RJMP __MAXRES
                 __MULF124:
000d37 920f      	PUSH R0
000d38 931f      	PUSH R17
000d39 932f      	PUSH R18
000d3a 933f      	PUSH R19
000d3b 934f      	PUSH R20
000d3c 2711      	CLR  R17
000d3d 2722      	CLR  R18
000d3e 2799      	CLR  R25
000d3f 9f68      	MUL  R22,R24
000d40 01a0      	MOVW R20,R0
000d41 9f8f      	MUL  R24,R31
000d42 2d30      	MOV  R19,R0
000d43 0d41      	ADD  R20,R1
000d44 1f59      	ADC  R21,R25
000d45 9f6b      	MUL  R22,R27
000d46 0d30      	ADD  R19,R0
000d47 1d41      	ADC  R20,R1
000d48 1f59      	ADC  R21,R25
000d49 9f8e      	MUL  R24,R30
000d4a d027      	RCALL __MULF126
000d4b 9fbf      	MUL  R27,R31
000d4c d025      	RCALL __MULF126
000d4d 9f6a      	MUL  R22,R26
000d4e d023      	RCALL __MULF126
000d4f 9fbe      	MUL  R27,R30
000d50 d01d      	RCALL __MULF127
000d51 9faf      	MUL  R26,R31
000d52 d01b      	RCALL __MULF127
000d53 9fae      	MUL  R26,R30
000d54 0d11      	ADD  R17,R1
000d55 1f29      	ADC  R18,R25
000d56 1f39      	ADC  R19,R25
000d57 1f49      	ADC  R20,R25
000d58 1f59      	ADC  R21,R25
000d59 2fe3      	MOV  R30,R19
000d5a 2ff4      	MOV  R31,R20
000d5b 2f65      	MOV  R22,R21
000d5c 2f52      	MOV  R21,R18
000d5d 914f      	POP  R20
000d5e 913f      	POP  R19
000d5f 912f      	POP  R18
000d60 911f      	POP  R17
000d61 900f      	POP  R0
000d62 2366      	TST  R22
000d63 f02a      	BRMI __MULF122
000d64 0f55      	LSL  R21
000d65 1fee      	ROL  R30
000d66 1fff      	ROL  R31
000d67 1f66      	ROL  R22
000d68 c002      	RJMP __MULF123
                 __MULF122:
000d69 9573      	INC  R23
000d6a f24b      	BRVS __MULF125
                 __MULF123:
000d6b decd      	RCALL __ROUND_REPACK
000d6c 915f      	POP  R21
000d6d 9508      	RET
                 
                 __MULF127:
000d6e 0d10      	ADD  R17,R0
000d6f 1d21      	ADC  R18,R1
000d70 1f39      	ADC  R19,R25
000d71 c002      	RJMP __MULF128
                 __MULF126:
000d72 0d20      	ADD  R18,R0
000d73 1d31      	ADC  R19,R1
                 __MULF128:
000d74 1f49      	ADC  R20,R25
000d75 1f59      	ADC  R21,R25
000d76 9508      	RET
                 
                 __DIVF21:
000d77 935f      	PUSH R21
000d78 dedc      	RCALL __UNPACK
000d79 3870      	CPI  R23,0x80
000d7a f421      	BRNE __DIVF210
000d7b 2011      	TST  R1
                 __DIVF211:
000d7c f40a      	BRPL __DIVF219
000d7d cf9f      	RJMP __MINRES
                 __DIVF219:
000d7e cfa4      	RJMP __MAXRES
                 __DIVF210:
000d7f 3890      	CPI  R25,0x80
000d80 f409      	BRNE __DIVF218
                 __DIVF217:
000d81 cf95      	RJMP __ZERORES
                 __DIVF218:
000d82 2401      	EOR  R0,R1
000d83 9408      	SEC
000d84 0b97      	SBC  R25,R23
000d85 f41b      	BRVC __DIVF216
000d86 f3d4      	BRLT __DIVF217
000d87 2000      	TST  R0
000d88 cff3      	RJMP __DIVF211
                 __DIVF216:
000d89 2f79      	MOV  R23,R25
000d8a 931f      	PUSH R17
000d8b 932f      	PUSH R18
000d8c 933f      	PUSH R19
000d8d 934f      	PUSH R20
000d8e 2411      	CLR  R1
000d8f 2711      	CLR  R17
000d90 2722      	CLR  R18
000d91 2733      	CLR  R19
000d92 2744      	CLR  R20
000d93 2755      	CLR  R21
000d94 e290      	LDI  R25,32
                 __DIVF212:
000d95 17ae      	CP   R26,R30
000d96 07bf      	CPC  R27,R31
000d97 0786      	CPC  R24,R22
000d98 0741      	CPC  R20,R17
000d99 f030      	BRLO __DIVF213
000d9a 1bae      	SUB  R26,R30
000d9b 0bbf      	SBC  R27,R31
000d9c 0b86      	SBC  R24,R22
000d9d 0b41      	SBC  R20,R17
000d9e 9408      	SEC
000d9f c001      	RJMP __DIVF214
                 __DIVF213:
000da0 9488      	CLC
                 __DIVF214:
000da1 1f55      	ROL  R21
000da2 1f22      	ROL  R18
000da3 1f33      	ROL  R19
000da4 1c11      	ROL  R1
000da5 1faa      	ROL  R26
000da6 1fbb      	ROL  R27
000da7 1f88      	ROL  R24
000da8 1f44      	ROL  R20
000da9 959a      	DEC  R25
000daa f751      	BRNE __DIVF212
000dab 01f9      	MOVW R30,R18
000dac 2d61      	MOV  R22,R1
000dad 914f      	POP  R20
000dae 913f      	POP  R19
000daf 912f      	POP  R18
000db0 911f      	POP  R17
000db1 2366      	TST  R22
000db2 f032      	BRMI __DIVF215
000db3 0f55      	LSL  R21
000db4 1fee      	ROL  R30
000db5 1fff      	ROL  R31
000db6 1f66      	ROL  R22
000db7 957a      	DEC  R23
000db8 f243      	BRVS __DIVF217
                 __DIVF215:
000db9 de7f      	RCALL __ROUND_REPACK
000dba 915f      	POP  R21
000dbb 9508      	RET
                 
                 __CMPF12:
000dbc 2399      	TST  R25
000dbd f09a      	BRMI __CMPF120
000dbe 2377      	TST  R23
000dbf f042      	BRMI __CMPF121
000dc0 1797      	CP   R25,R23
000dc1 f048      	BRLO __CMPF122
000dc2 f429      	BRNE __CMPF121
000dc3 17ae      	CP   R26,R30
000dc4 07bf      	CPC  R27,R31
000dc5 0786      	CPC  R24,R22
000dc6 f020      	BRLO __CMPF122
000dc7 f031      	BREQ __CMPF123
                 __CMPF121:
000dc8 9498      	CLZ
000dc9 9488      	CLC
000dca 9508      	RET
                 __CMPF122:
000dcb 9498      	CLZ
000dcc 9408      	SEC
000dcd 9508      	RET
                 __CMPF123:
000dce 9418      	SEZ
000dcf 9488      	CLC
000dd0 9508      	RET
                 __CMPF120:
000dd1 2377      	TST  R23
000dd2 f7c2      	BRPL __CMPF122
000dd3 1797      	CP   R25,R23
000dd4 f398      	BRLO __CMPF121
000dd5 f7a9      	BRNE __CMPF122
000dd6 17ea      	CP   R30,R26
000dd7 07fb      	CPC  R31,R27
000dd8 0768      	CPC  R22,R24
000dd9 f388      	BRLO __CMPF122
000dda f399      	BREQ __CMPF123
000ddb cfec      	RJMP __CMPF121
                 
                 __ANEGW1:
000ddc 95f1      	NEG  R31
000ddd 95e1      	NEG  R30
000dde 40f0      	SBCI R31,0
000ddf 9508      	RET
                 
                 __ANEGD1:
000de0 95f0      	COM  R31
000de1 9560      	COM  R22
000de2 9570      	COM  R23
000de3 95e1      	NEG  R30
000de4 4fff      	SBCI R31,-1
000de5 4f6f      	SBCI R22,-1
000de6 4f7f      	SBCI R23,-1
000de7 9508      	RET
                 
                 __LSRB12:
000de8 23ee      	TST  R30
000de9 2e0e      	MOV  R0,R30
000dea 2fea      	MOV  R30,R26
000deb f019      	BREQ __LSRB12R
                 __LSRB12L:
000dec 95e6      	LSR  R30
000ded 940a      	DEC  R0
000dee f7e9      	BRNE __LSRB12L
                 __LSRB12R:
000def 9508      	RET
                 
                 __CBD1:
000df0 2ffe      	MOV  R31,R30
000df1 0fff      	ADD  R31,R31
000df2 0bff      	SBC  R31,R31
000df3 2f6f      	MOV  R22,R31
000df4 2f7f      	MOV  R23,R31
000df5 9508      	RET
                 
                 __CWD1:
000df6 2f6f      	MOV  R22,R31
000df7 0f66      	ADD  R22,R22
000df8 0b66      	SBC  R22,R22
000df9 2f76      	MOV  R23,R22
000dfa 9508      	RET
                 
                 __CBD2:
000dfb 2fba      	MOV  R27,R26
000dfc 0fbb      	ADD  R27,R27
000dfd 0bbb      	SBC  R27,R27
000dfe 2f8b      	MOV  R24,R27
000dff 2f9b      	MOV  R25,R27
000e00 9508      	RET
                 
                 __MULW12U:
000e01 9ffa      	MUL  R31,R26
000e02 2df0      	MOV  R31,R0
000e03 9feb      	MUL  R30,R27
000e04 0df0      	ADD  R31,R0
000e05 9fea      	MUL  R30,R26
000e06 2de0      	MOV  R30,R0
000e07 0df1      	ADD  R31,R1
000e08 9508      	RET
                 
                 __DIVB21U:
000e09 2400      	CLR  R0
000e0a e098      	LDI  R25,8
                 __DIVB21U1:
000e0b 0faa      	LSL  R26
000e0c 1c00      	ROL  R0
000e0d 1a0e      	SUB  R0,R30
000e0e f410      	BRCC __DIVB21U2
000e0f 0e0e      	ADD  R0,R30
000e10 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
000e11 60a1      	SBR  R26,1
                 __DIVB21U3:
000e12 959a      	DEC  R25
000e13 f7b9      	BRNE __DIVB21U1
000e14 2fea      	MOV  R30,R26
000e15 2da0      	MOV  R26,R0
000e16 9508      	RET
                 
                 __DIVB21:
000e17 d074      	RCALL __CHKSIGNB
000e18 dff0      	RCALL __DIVB21U
000e19 f40e      	BRTC __DIVB211
000e1a 95e1      	NEG  R30
                 __DIVB211:
000e1b 9508      	RET
                 
                 __DIVW21U:
000e1c 2400      	CLR  R0
000e1d 2411      	CLR  R1
000e1e e190      	LDI  R25,16
                 __DIVW21U1:
000e1f 0faa      	LSL  R26
000e20 1fbb      	ROL  R27
000e21 1c00      	ROL  R0
000e22 1c11      	ROL  R1
000e23 1a0e      	SUB  R0,R30
000e24 0a1f      	SBC  R1,R31
000e25 f418      	BRCC __DIVW21U2
000e26 0e0e      	ADD  R0,R30
000e27 1e1f      	ADC  R1,R31
000e28 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000e29 60a1      	SBR  R26,1
                 __DIVW21U3:
000e2a 959a      	DEC  R25
000e2b f799      	BRNE __DIVW21U1
000e2c 01fd      	MOVW R30,R26
000e2d 01d0      	MOVW R26,R0
000e2e 9508      	RET
                 
                 __DIVW21:
000e2f d068      	RCALL __CHKSIGNW
000e30 dfeb      	RCALL __DIVW21U
000e31 f40e      	BRTC __DIVW211
000e32 dfa9      	RCALL __ANEGW1
                 __DIVW211:
000e33 9508      	RET
                 
                 __DIVD21U:
000e34 933f      	PUSH R19
000e35 934f      	PUSH R20
000e36 935f      	PUSH R21
000e37 2400      	CLR  R0
000e38 2411      	CLR  R1
000e39 2744      	CLR  R20
000e3a 2755      	CLR  R21
000e3b e230      	LDI  R19,32
                 __DIVD21U1:
000e3c 0faa      	LSL  R26
000e3d 1fbb      	ROL  R27
000e3e 1f88      	ROL  R24
000e3f 1f99      	ROL  R25
000e40 1c00      	ROL  R0
000e41 1c11      	ROL  R1
000e42 1f44      	ROL  R20
000e43 1f55      	ROL  R21
000e44 1a0e      	SUB  R0,R30
000e45 0a1f      	SBC  R1,R31
000e46 0b46      	SBC  R20,R22
000e47 0b57      	SBC  R21,R23
000e48 f428      	BRCC __DIVD21U2
000e49 0e0e      	ADD  R0,R30
000e4a 1e1f      	ADC  R1,R31
000e4b 1f46      	ADC  R20,R22
000e4c 1f57      	ADC  R21,R23
000e4d c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000e4e 60a1      	SBR  R26,1
                 __DIVD21U3:
000e4f 953a      	DEC  R19
000e50 f759      	BRNE __DIVD21U1
000e51 01fd      	MOVW R30,R26
000e52 01bc      	MOVW R22,R24
000e53 01d0      	MOVW R26,R0
000e54 01ca      	MOVW R24,R20
000e55 915f      	POP  R21
000e56 914f      	POP  R20
000e57 913f      	POP  R19
000e58 9508      	RET
                 
                 __DIVD21:
000e59 d04c      	RCALL __CHKSIGND
000e5a dfd9      	RCALL __DIVD21U
000e5b f40e      	BRTC __DIVD211
000e5c df83      	RCALL __ANEGD1
                 __DIVD211:
000e5d 9508      	RET
                 
                 __MODB21:
000e5e 94e8      	CLT
000e5f ffa7      	SBRS R26,7
000e60 c002      	RJMP __MODB211
000e61 95a1      	NEG  R26
000e62 9468      	SET
                 __MODB211:
000e63 fde7      	SBRC R30,7
000e64 95e1      	NEG  R30
000e65 dfa3      	RCALL __DIVB21U
000e66 2fea      	MOV  R30,R26
000e67 f40e      	BRTC __MODB212
000e68 95e1      	NEG  R30
                 __MODB212:
000e69 9508      	RET
                 
                 __MODW21:
000e6a 94e8      	CLT
000e6b ffb7      	SBRS R27,7
000e6c c004      	RJMP __MODW211
000e6d 95a0      	COM  R26
000e6e 95b0      	COM  R27
000e6f 9611      	ADIW R26,1
000e70 9468      	SET
                 __MODW211:
000e71 fdf7      	SBRC R31,7
000e72 df69      	RCALL __ANEGW1
000e73 dfa8      	RCALL __DIVW21U
000e74 01fd      	MOVW R30,R26
000e75 f40e      	BRTC __MODW212
000e76 df65      	RCALL __ANEGW1
                 __MODW212:
000e77 9508      	RET
                 
                 __MODD21:
000e78 94e8      	CLT
000e79 ff97      	SBRS R25,7
000e7a c009      	RJMP __MODD211
000e7b 95a0      	COM  R26
000e7c 95b0      	COM  R27
000e7d 9580      	COM  R24
000e7e 9590      	COM  R25
000e7f 5faf      	SUBI R26,-1
000e80 4fbf      	SBCI R27,-1
000e81 4f8f      	SBCI R24,-1
000e82 4f9f      	SBCI R25,-1
000e83 9468      	SET
                 __MODD211:
000e84 fd77      	SBRC R23,7
000e85 df5a      	RCALL __ANEGD1
000e86 dfad      	RCALL __DIVD21U
000e87 01fd      	MOVW R30,R26
000e88 01bc      	MOVW R22,R24
000e89 f40e      	BRTC __MODD212
000e8a df55      	RCALL __ANEGD1
                 __MODD212:
000e8b 9508      	RET
                 
                 __CHKSIGNB:
000e8c 94e8      	CLT
000e8d ffe7      	SBRS R30,7
000e8e c002      	RJMP __CHKSB1
000e8f 95e1      	NEG  R30
000e90 9468      	SET
                 __CHKSB1:
000e91 ffa7      	SBRS R26,7
000e92 c004      	RJMP __CHKSB2
000e93 95a1      	NEG  R26
000e94 f800      	BLD  R0,0
000e95 9403      	INC  R0
000e96 fa00      	BST  R0,0
                 __CHKSB2:
000e97 9508      	RET
                 
                 __CHKSIGNW:
000e98 94e8      	CLT
000e99 fff7      	SBRS R31,7
000e9a c002      	RJMP __CHKSW1
000e9b df40      	RCALL __ANEGW1
000e9c 9468      	SET
                 __CHKSW1:
000e9d ffb7      	SBRS R27,7
000e9e c006      	RJMP __CHKSW2
000e9f 95a0      	COM  R26
000ea0 95b0      	COM  R27
000ea1 9611      	ADIW R26,1
000ea2 f800      	BLD  R0,0
000ea3 9403      	INC  R0
000ea4 fa00      	BST  R0,0
                 __CHKSW2:
000ea5 9508      	RET
                 
                 __CHKSIGND:
000ea6 94e8      	CLT
000ea7 ff77      	SBRS R23,7
000ea8 c002      	RJMP __CHKSD1
000ea9 df36      	RCALL __ANEGD1
000eaa 9468      	SET
                 __CHKSD1:
000eab ff97      	SBRS R25,7
000eac c00b      	RJMP __CHKSD2
000ead 2400      	CLR  R0
000eae 95a0      	COM  R26
000eaf 95b0      	COM  R27
000eb0 9580      	COM  R24
000eb1 9590      	COM  R25
000eb2 9611      	ADIW R26,1
000eb3 1d80      	ADC  R24,R0
000eb4 1d90      	ADC  R25,R0
000eb5 f800      	BLD  R0,0
000eb6 9403      	INC  R0
000eb7 fa00      	BST  R0,0
                 __CHKSD2:
000eb8 9508      	RET
                 
                 __GETD1S0:
000eb9 81e8      	LD   R30,Y
000eba 81f9      	LDD  R31,Y+1
000ebb 816a      	LDD  R22,Y+2
000ebc 817b      	LDD  R23,Y+3
000ebd 9508      	RET
                 
                 __GETD2S0:
000ebe 81a8      	LD   R26,Y
000ebf 81b9      	LDD  R27,Y+1
000ec0 818a      	LDD  R24,Y+2
000ec1 819b      	LDD  R25,Y+3
000ec2 9508      	RET
                 
                 __PUTD1S0:
000ec3 83e8      	ST   Y,R30
000ec4 83f9      	STD  Y+1,R31
000ec5 836a      	STD  Y+2,R22
000ec6 837b      	STD  Y+3,R23
000ec7 9508      	RET
                 
                 __PUTPARD1:
000ec8 937a      	ST   -Y,R23
000ec9 936a      	ST   -Y,R22
000eca 93fa      	ST   -Y,R31
000ecb 93ea      	ST   -Y,R30
000ecc 9508      	RET
                 
                 __CDF2U:
000ecd 9468      	SET
000ece c001      	RJMP __CDF2U0
                 __CDF2:
000ecf 94e8      	CLT
                 __CDF2U0:
000ed0 d001      	RCALL __SWAPD12
000ed1 ddce      	RCALL __CDF1U0
                 
                 __SWAPD12:
000ed2 2e18      	MOV  R1,R24
000ed3 2f86      	MOV  R24,R22
000ed4 2d61      	MOV  R22,R1
000ed5 2e19      	MOV  R1,R25
000ed6 2f97      	MOV  R25,R23
000ed7 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000ed8 2e1b      	MOV  R1,R27
000ed9 2fbf      	MOV  R27,R31
000eda 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000edb 2e1a      	MOV  R1,R26
000edc 2fae      	MOV  R26,R30
000edd 2de1      	MOV  R30,R1
000ede 9508      	RET
                 
                 __EEPROMRDW:
000edf 9611      	ADIW R26,1
000ee0 d002      	RCALL __EEPROMRDB
000ee1 2ffe      	MOV  R31,R30
000ee2 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
000ee3 99e1      	SBIC EECR,EEWE
000ee4 cffe      	RJMP __EEPROMRDB
000ee5 93ff      	PUSH R31
000ee6 b7ff      	IN   R31,SREG
000ee7 94f8      	CLI
000ee8 bbae      	OUT  EEARL,R26
000ee9 bbbf      	OUT  EEARH,R27
000eea 9ae0      	SBI  EECR,EERE
000eeb b3ed      	IN   R30,EEDR
000eec bfff      	OUT  SREG,R31
000eed 91ff      	POP  R31
000eee 9508      	RET
                 
                 __EEPROMWRW:
000eef d007      	RCALL __EEPROMWRB
000ef0 9611      	ADIW R26,1
000ef1 93ef      	PUSH R30
000ef2 2fef      	MOV  R30,R31
000ef3 d003      	RCALL __EEPROMWRB
000ef4 91ef      	POP  R30
000ef5 9711      	SBIW R26,1
000ef6 9508      	RET
                 
                 __EEPROMWRB:
000ef7 9be1      	SBIS EECR,EEWE
000ef8 c002      	RJMP __EEPROMWRB1
000ef9 95a8      	WDR
000efa cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
000efb b79f      	IN   R25,SREG
000efc 94f8      	CLI
000efd bbae      	OUT  EEARL,R26
000efe bbbf      	OUT  EEARH,R27
000eff 9ae0      	SBI  EECR,EERE
000f00 b38d      	IN   R24,EEDR
000f01 17e8      	CP   R30,R24
000f02 f019      	BREQ __EEPROMWRB0
000f03 bbed      	OUT  EEDR,R30
000f04 9ae2      	SBI  EECR,EEMWE
000f05 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
000f06 bf9f      	OUT  SREG,R25
000f07 9508      	RET
                 
                 __CPD10:
000f08 9730      	SBIW R30,0
000f09 4060      	SBCI R22,0
000f0a 4070      	SBCI R23,0
000f0b 9508      	RET
                 
                 __CPD02:
000f0c 2400      	CLR  R0
000f0d 160a      	CP   R0,R26
000f0e 060b      	CPC  R0,R27
000f0f 0608      	CPC  R0,R24
000f10 0609      	CPC  R0,R25
000f11 9508      	RET
                 
                 __SAVELOCR6:
000f12 935a      	ST   -Y,R21
                 __SAVELOCR5:
000f13 934a      	ST   -Y,R20
                 __SAVELOCR4:
000f14 933a      	ST   -Y,R19
                 __SAVELOCR3:
000f15 932a      	ST   -Y,R18
                 __SAVELOCR2:
000f16 931a      	ST   -Y,R17
000f17 930a      	ST   -Y,R16
000f18 9508      	RET
                 
                 __LOADLOCR6:
000f19 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000f1a 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000f1b 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000f1c 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000f1d 8119      	LDD  R17,Y+1
000f1e 8108      	LD   R16,Y
000f1f 9508      	RET
                 
                 __LOADLOCR2P:
000f20 9109      	LD   R16,Y+
000f21 9119      	LD   R17,Y+
000f22 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8 register use summary:
r0 :  87 r1 :  41 r2 :   3 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   4 
r8 :   5 r9 :   4 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   7 
r16:  46 r17: 125 r18:  33 r19:  29 r20:  63 r21:  93 r22: 152 r23: 126 
r24: 110 r25:  99 r26: 358 r27: 231 r28:  34 r29:   3 r30: 631 r31: 212 
x  :  44 y  : 221 z  :  17 
Registers used: 26 out of 35 (74.3%)

ATmega8 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  38 add   :  37 
adiw  :  44 and   :   5 andi  :   2 asr   :   0 bclr  :   0 bld   :   7 
brbc  :   0 brbs  :   0 brcc  :   8 brcs  :   1 break :   0 breq  :  61 
brge  :  52 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  31 
brlt  :   3 brmi  :   9 brne  :  82 brpl  :   8 brsh  :   2 brtc  :   9 
brts  :   4 brvc  :   4 brvs  :   4 bset  :   0 bst   :   7 cbi   :  17 
cbr   :   1 clc   :   3 clh   :   0 cli   :   5 cln   :   0 clr   :  55 
cls   :   0 clt   :  13 clv   :   0 clz   :   2 com   :  24 cp    :  15 
cpc   :  28 cpi   : 136 cpse  :   0 dec   :  14 des   :   0 eor   :  13 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 in    :  10 
inc   :   7 ld    :  72 ldd   :  79 ldi   : 566 lds   :   5 lpm   :   9 
lsl   :  21 lsr   :   6 mov   :  94 movw  : 118 mul   :  12 muls  :   2 
mulsu :   0 neg   :  10 nop   :   0 or    :   0 ori   :   0 out   :  35 
pop   :  82 push  :  82 rcall : 883 ret   : 170 reti  :   1 rjmp  : 223 
rol   :  39 ror   :  17 sbc   :  16 sbci  :  58 sbi   :  13 sbic  :   1 
sbis  :   5 sbiw  :  33 sbr   :   5 sbrc  :  11 sbrs  :  11 sec   :   5 
seh   :   0 sei   :   3 sen   :   0 ser   :  12 ses   :   0 set   :  12 
sev   :   0 sez   :   1 sleep :   0 spm   :   0 st    :  78 std   :  45 
sts   :  18 sub   :  10 subi  :  99 swap  :   0 tst   :  21 wdr   :   2 

Instructions used: 78 out of 114 (68.4%)

ATmega8 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001e46   7536    214   7750    8192  94.6%
[.dseg] 0x000060 0x0003bf      0     63     63    1119   5.6%
[.eseg] 0x000000 0x000119      0    281    281     512  54.9%

Assembly complete, 0 errors, 7 warnings
