;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.0 Professional
;Automatic Program Generator
;© Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 5/3/2012
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega32
;Program type            : Application
;AVR Core Clock frequency: 11.059200 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*****************************************************/
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <stdio.h>
;#define INDIKATOR_1 PORTC.2
;#define INDIKATOR_2 PORTC.3
;
;#define SEL_A	PORTC.1
;#define SEL_B	PORTC.0
;
;#define TOM_ENTER	PIND.4
;#define TOM_UP		PIND.5
;#define TOM_DOWN  	PIND.6
;#define TOM_CANCEL	PIND.7
;
;#define SENSE_1	1
;#define SENSE_2	2
;#define SENSE_3 3
;#define SENSE_4	4
;#define SENSE_5	5
;#define SENSE_6 6
;
;#define PTT		PORTA.0
;#define CARIER_DET	PIND.0
;
;void usart_init(void)
; 0000 0031 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0032 	UCSRA = 0x00;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0033 	UCSRB = 0xD8;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0034 	UCSRC = 0x86;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0035 	UBRRH = 0x02;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0036 	UBRRL = 0x3F;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0037 }
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;
;void switch_to_maxim(void)
; 0000 003A {
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 003B 	SEL_B = 0; SEL_A = 1;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 003C }
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;
;// Declare your global variables here
;char i=0;
;
;void main(void)
; 0000 0042 {
;PCODE: $00000023 VOL: 0
; 0000 0043 	PORTA=0x00;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0044 	DDRA=0x81;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0045         PORTB=0x00;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0046 	DDRB=0x00;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0047         PORTC=0x00;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0048         DDRC=0x00;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0049 	PORTD=0x01;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 004A 	DDRD=0x00;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 004B 
; 0000 004C 	usart_init();
;PCODE: $00000034 VOL: 0
; 0000 004D 	switch_to_maxim();
;PCODE: $00000035 VOL: 0
; 0000 004E 
; 0000 004F 	while (1)
;PCODE: $00000036 VOL: 0
; 0000 0050       	{
; 0000 0051       		if(getchar()=='$')
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0052         	{
; 0000 0053         		PORTA.0 = 1;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0054         	}
; 0000 0055 
; 0000 0056         	else if(getchar()=='~')
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0057         	{
; 0000 0058         		if(i==3)
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0059                         {
; 0000 005A                         	PORTA.0 = 0;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 005B                 		delay_ms(250);
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 005C                                 i=0;
;PCODE: $00000049 VOL: 0
; 0000 005D                         }
; 0000 005E                         i++;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 005F         	}
; 0000 0060       	}
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0061 }
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
