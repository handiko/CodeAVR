;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.0 Professional
;Automatic Program Generator
;© Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 9/8/2013
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega32A
;Program type            : Application
;AVR Core Clock frequency: 16.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*****************************************************/
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;// Alphanumeric LCD Module functions
;#include <stdlib.h>
;#include <stdint.h>
;#include <alcd.h>
;#include <delay.h>
;
;// Declare your global variables here
;
;#include <stdio.h>
;
;#define CLK     PORTB.1
;#define FUD     PORTB.2
;#define DAT     PORTB.3
;#define RST     PORTB.4
;#define DAT_2   PORTB.0
;
;#define T_DOWN  PINA.0
;#define T_UP    PINA.1
;#define S_DOWN  PINA.2
;#define S_UP    PINA.3
;
;#define LOW     0
;#define HIGH    1
;
;eeprom int channel_n = 9;
;flash char channel_f[30][15] =
;{
;" 1.800.000 Hz", // 1
;" 1.900.000 Hz", // 2
;" 2.000.000 Hz", // 3
;
;" 3.500.000 Hz", // 4
;" 3.600.000 Hz", // 5
;" 3.700.000 Hz", // 6
;" 3.800.000 Hz", // 7
;" 3.900.000 Hz", // 8
;" 4.000.000 Hz", // 9
;
;" 7.000.000 Hz", // 10
;" 7.100.000 Hz", // 11
;" 7.200.000 Hz", // 12
;" 7.300.000 Hz", // 13
;
;"10.000.000 Hz", // 14
;"10.100.000 Hz", // 15
;"10.200.000 Hz", // 16
;
;"14.000.000 Hz", // 17
;"14.100.000 Hz", // 18
;"14.200.000 Hz", // 19
;"14.300.000 Hz", // 20
;"14.400.000 Hz", // 21
;
;"18.000.000 Hz", // 22
;"18.100.000 Hz", // 23
;"18.200.000 Hz", // 24
;
;"21.000.000 Hz", // 25
;"21.100.000 Hz", // 26
;"21.200.000 Hz", // 27
;"21.300.000 Hz", // 28
;"21.400.000 Hz", // 29
;"21.500.000 Hz"  // 30
;};
;
;eeprom int mode = 1;
;
;flash char channel_a[30][30] =
;{
;0,0,0,0,1,1,1,0,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,0,1,0,0,1,  // 1800000
;0,0,0,0,1,1,1,1,1,0,0,1,0,0,0,0,1,0,0,1,0,1,1,0,1,0,1,1,1,0,  // 1900000
;0,0,0,1,0,0,0,0,0,1,1,0,0,0,1,0,0,1,0,0,1,1,0,1,1,1,0,1,0,0,  // 2000000
;
;0,0,0,1,1,1,0,0,1,0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,  // 3500000
;0,0,0,1,1,1,0,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,0,1,0,0,1,0,  // 3600000
;0,0,0,1,1,1,1,0,0,1,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,1,0,1,1,1,  // 3700000
;0,0,0,1,1,1,1,1,0,0,1,0,0,0,0,1,0,0,1,0,1,1,0,1,0,1,1,1,0,1,  // 3800000
;0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,0,1,1,1,0,0,1,0,0,1,0,0,0,1,1,  // 3900000
;0,0,1,0,0,0,0,0,1,1,0,0,0,1,0,0,1,0,0,1,1,0,1,1,1,0,1,0,0,1,  // 4000000
;
;0,0,1,1,1,0,0,1,0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,  // 7000000
;0,0,1,1,1,0,1,0,0,0,1,0,1,0,0,1,1,1,0,0,0,1,1,1,0,1,1,1,1,0,  // 7100000
;0,0,1,1,1,0,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,0,1,0,0,1,0,0,  // 7200000
;0,0,1,1,1,0,1,1,1,1,0,0,1,1,0,1,0,0,1,1,0,1,0,1,1,0,1,0,1,0,  // 7300000
;
;0,1,0,1,0,0,0,1,1,1,1,0,1,0,1,1,1,0,0,0,0,1,0,1,0,0,0,1,1,1,  // 10000000
;0,1,0,1,0,0,1,0,1,0,1,1,1,1,0,1,0,0,1,1,1,1,0,0,0,0,1,1,0,1,  // 10100000
;0,1,0,1,0,0,1,1,1,0,0,0,1,1,1,0,1,1,1,1,0,0,1,1,0,1,0,0,1,1,  // 10200000
;
;0,1,1,1,0,0,1,0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,1,  // 14000000
;0,1,1,1,0,0,1,1,1,0,0,0,0,0,0,1,1,1,0,1,0,1,1,1,1,1,0,1,1,0,  // 14100000
;0,1,1,1,0,1,0,0,0,1,0,1,0,0,1,1,1,0,0,0,1,1,1,0,1,1,1,1,0,0,  // 14200000
;0,1,1,1,0,1,0,1,0,0,1,0,0,1,0,1,0,1,0,0,0,1,1,0,0,0,0,0,1,0,  // 14300000
;0,1,1,1,0,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,0,1,0,0,1,0,0,0,  // 14400000
;
;1,0,0,1,0,0,1,1,0,1,1,1,0,1,0,0,1,0,1,1,1,1,0,0,0,1,1,0,1,0,  // 18000000
;1,0,0,1,0,1,0,0,0,1,0,0,0,1,1,0,0,1,1,1,0,0,1,1,1,0,0,0,0,0,  // 18100000
;1,0,0,1,0,1,0,1,0,0,0,1,1,0,0,0,0,0,1,0,1,0,1,0,1,0,0,1,1,0,  // 18200000
;
;1,0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,1,0,0,1,0,0,1,  // 21000000
;1,0,1,0,1,1,0,0,1,1,0,1,1,0,0,1,1,1,1,0,1,0,0,0,0,0,1,1,1,1,  // 21100000
;1,0,1,0,1,1,0,1,1,0,1,0,1,0,1,1,1,0,0,1,1,1,1,1,0,1,0,1,0,1,  // 21200000
;1,0,1,0,1,1,1,0,0,1,1,1,1,1,0,1,0,1,0,1,0,1,1,0,0,1,1,0,1,1,  // 21300000
;1,0,1,0,1,1,1,1,0,1,0,0,1,1,1,1,0,0,0,0,1,1,0,1,1,0,0,0,0,1,  // 21400000
;1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,1,0,0,1,0,0,1,1,0   // 21500000
;};
;
;flash char channel_b[30][31] =
;{
;0,0,0,0,1,1,1,0,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,0,1,0,0,1,0,  // 3600000
;0,0,0,0,1,1,1,1,1,0,0,1,0,0,0,0,1,0,0,1,0,1,1,0,1,0,1,1,1,0,1,  // 3800000
;0,0,0,1,0,0,0,0,0,1,1,0,0,0,1,0,0,1,0,0,1,1,0,1,1,1,0,1,0,0,1,  // 4000000
;
;0,0,0,1,1,1,0,0,1,0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,  // 7000000
;0,0,0,1,1,1,0,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,0,1,0,0,1,0,0,  // 7200000
;0,0,0,1,1,1,1,0,0,1,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,1,0,1,1,1,1,  // 7400000
;0,0,0,1,1,1,1,1,0,0,1,0,0,0,0,1,0,0,1,0,1,1,0,1,0,1,1,1,0,1,1,  // 7600000
;0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,0,1,1,1,0,0,1,0,0,1,0,0,0,1,1,1,  // 7800000
;0,0,1,0,0,0,0,0,1,1,0,0,0,1,0,0,1,0,0,1,1,0,1,1,1,0,1,0,0,1,0,  // 8000000
;
;0,0,1,1,1,0,0,1,0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,1,  // 14000000
;0,0,1,1,1,0,1,0,0,0,1,0,1,0,0,1,1,1,0,0,0,1,1,1,0,1,1,1,1,0,0,  // 14200000
;0,0,1,1,1,0,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,0,1,0,0,1,0,0,0,  // 14400000
;0,0,1,1,1,0,1,1,1,1,0,0,1,1,0,1,0,0,1,1,0,1,0,1,1,0,1,0,1,0,0,  // 14600000
;
;0,1,0,1,0,0,0,1,1,1,1,0,1,0,1,1,1,0,0,0,0,1,0,1,0,0,0,1,1,1,1,  // 20000000
;0,1,0,1,0,0,1,0,1,0,1,1,1,1,0,1,0,0,1,1,1,1,0,0,0,0,1,1,0,1,1,  // 20200000
;0,1,0,1,0,0,1,1,1,0,0,0,1,1,1,0,1,1,1,1,0,0,1,1,0,1,0,0,1,1,0,  // 20400000
;
;0,1,1,1,0,0,1,0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,1,0,  // 28000000
;0,1,1,1,0,0,1,1,1,0,0,0,0,0,0,1,1,1,0,1,0,1,1,1,1,1,0,1,1,0,1,  // 28200000
;0,1,1,1,0,1,0,0,0,1,0,1,0,0,1,1,1,0,0,0,1,1,1,0,1,1,1,1,0,0,1,  // 28400000
;0,1,1,1,0,1,0,1,0,0,1,0,0,1,0,1,0,1,0,0,0,1,1,0,0,0,0,0,1,0,1,  // 28600000
;0,1,1,1,0,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,0,1,0,0,1,0,0,0,0,  // 28800000
;
;1,0,0,1,0,0,1,1,0,1,1,1,0,1,0,0,1,0,1,1,1,1,0,0,0,1,1,0,1,0,1,  // 36000000
;1,0,0,1,0,1,0,0,0,1,0,0,0,1,1,0,0,1,1,1,0,0,1,1,1,0,0,0,0,0,0,  // 36200000
;1,0,0,1,0,1,0,1,0,0,0,1,1,0,0,0,0,0,1,0,1,0,1,0,1,0,0,1,1,0,0,  // 36400000
;
;1,0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,1,0,0,1,0,0,1,1,  // 42000000
;1,0,1,0,1,1,0,0,1,1,0,1,1,0,0,1,1,1,1,0,1,0,0,0,0,0,1,1,1,1,1,  // 42200000
;1,0,1,0,1,1,0,1,1,0,1,0,1,0,1,1,1,0,0,1,1,1,1,1,0,1,0,1,0,1,0,  // 42400000
;1,0,1,0,1,1,1,0,0,1,1,1,1,1,0,1,0,1,0,1,0,1,1,0,0,1,1,0,1,1,0,  // 42600000
;1,0,1,0,1,1,1,1,0,1,0,0,1,1,1,1,0,0,0,0,1,1,0,1,1,0,0,0,0,1,0,  // 42800000
;1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,1,0,0,1,0,0,1,1,0,1,  // 43000000
;};
;
;char d_channel_n;
;char lcd_buff[32];
;
;void display (void);
;
;void dds_reset(void)
; 0000 00B3 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 00B4         CLK = LOW;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 00B5         FUD = LOW;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 00B6 
; 0000 00B7         RST = LOW;      delay_us(5);
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 00B8         RST = HIGH;     delay_us(5);
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 00B9         RST = LOW;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 00BA 
; 0000 00BB         CLK = LOW;      delay_us(5);
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 00BC         CLK = HIGH;     delay_us(5);
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 00BD         CLK = LOW;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 00BE 
; 0000 00BF         DAT = LOW;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 00C0 
; 0000 00C1         FUD = LOW;      delay_us(5);
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 00C2         FUD = HIGH;     delay_us(5);
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 00C3         FUD = LOW;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 00C4 }
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;
;void send_data(void)
; 0000 00C7 {
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 00C8         int i;
; 0000 00C9 
; 0000 00CA         FUD = HIGH;     delay_us(5);
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;	i -> R16,R17
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 00CB         FUD = LOW;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 00CC 
; 0000 00CD         if(mode == 1)
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 00CE         {
; 0000 00CF                 for(i=0; i<30; i++)
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 00D0                 {
; 0000 00D1                         DAT = channel_a[channel_n][29-i];
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 00D2                         CLK = HIGH;     delay_us(5);
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 00D3                         CLK = LOW;
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 00D4                 }
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 00D5 
; 0000 00D6                 for(i=0; i<10; i++)
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 00D7                 {
; 0000 00D8                         DAT = 0;
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 00D9                         CLK = HIGH;     delay_us(5);
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 00DA                         CLK = LOW;
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 00DB                 }
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 00DC         }
; 0000 00DD         else
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 00DE         {
; 0000 00DF                 for(i=0; i<31; i++)
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 00E0                 {
; 0000 00E1                         DAT = channel_b[channel_n][30-i];
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 00E2                         CLK = HIGH;     delay_us(5);
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 00E3                         CLK = LOW;
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 00E4                 }
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 00E5 
; 0000 00E6                 for(i=0; i<9; i++)
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 00E7                 {
; 0000 00E8                         DAT = 0;
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 00E9                         CLK = HIGH;     delay_us(5);
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 00EA                         CLK = LOW;
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 00EB                 }
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 00EC         }
;PCODE: $000000B4 VOL: 0
; 0000 00ED 
; 0000 00EE         FUD = HIGH;     delay_us(5);
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 00EF         FUD = LOW;
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0000 00F0 }
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;
;void tuning (void)
; 0000 00F3 {
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 00F4         if(!T_UP)
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 00F5         {
; 0000 00F6                 delay_ms(125);
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 00F7 
; 0000 00F8                 d_channel_n = channel_n;
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 00F9                 channel_n++;
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 00FA                 if(channel_n > 29) channel_n = 0;
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 00FB         }
;PCODE: $000000D4 VOL: 0
; 0000 00FC 
; 0000 00FD         if(!T_DOWN)
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 00FE         {
; 0000 00FF                 delay_ms(125);
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0000 0100 
; 0000 0101                 d_channel_n = channel_n;
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 0102                 channel_n--;
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0000 0103                 if(channel_n < 0) channel_n = 29;
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 0104         }
;PCODE: $000000EA VOL: 0
; 0000 0105 
; 0000 0106         if(!S_UP)
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0000 0107         {
; 0000 0108                 delay_ms(125);
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
; 0000 0109 
; 0000 010A                 if(mode == 1)
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0000 010B                 {
; 0000 010C                         mode = 2;
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 010D                         d_channel_n++;
;PCODE: $000000F9 VOL: 0
; 0000 010E                 }
; 0000 010F                 else
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
; 0000 0110                 {
; 0000 0111                         mode = 1;
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 0112                         d_channel_n++;
;PCODE: $000000FF VOL: 0
; 0000 0113                 }
;PCODE: $00000100 VOL: 0
; 0000 0114         }
; 0000 0115 
; 0000 0116 
; 0000 0117         if(d_channel_n != channel_n)
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
; 0000 0118         {
; 0000 0119                 send_data();
;PCODE: $00000108 VOL: 0
; 0000 011A                 display();
;PCODE: $00000109 VOL: 0
; 0000 011B                 d_channel_n = channel_n;
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0000 011C         }
; 0000 011D }
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;
;
;void display (void)
; 0000 0121 {
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
; 0000 0122         int i;
; 0000 0123 
; 0000 0124         lcd_clear();
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;	i -> R16,R17
;PCODE: $00000114 VOL: 0
; 0000 0125         lcd_gotoxy(0,0);
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 0126         if(mode == 1)
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
; 0000 0127         {
; 0000 0128                 sprintf(lcd_buff,"Channel: %2i A", channel_n + 1);
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
; 0000 0129         }
; 0000 012A         else
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
; 0000 012B         {
; 0000 012C                 sprintf(lcd_buff,"Channel: %2i B", channel_n + 1);
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 012D         }
;PCODE: $0000013C VOL: 0
; 0000 012E         lcd_puts(lcd_buff);
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
; 0000 012F 
; 0000 0130         lcd_gotoxy(0,1);
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0000 0131         lcd_putsf("F: ");
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0000 0132         for(i=0;i<15;i++)
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
; 0000 0133         {
; 0000 0134                 sprintf(lcd_buff,"%c",channel_f[channel_n][i]);
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
; 0000 0135                 lcd_puts(lcd_buff);
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
; 0000 0136         }
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
; 0000 0137 
; 0000 0138         delay_ms(50);
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0000 0139 }
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;
;void main(void)
; 0000 013C {
;PCODE: $00000172 VOL: 0
; 0000 013D         PORTA=0xFF;
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
; 0000 013E         DDRA=0x00;
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
; 0000 013F         PORTB=0x00;
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
; 0000 0140         DDRB=0xFF;
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
; 0000 0141         PORTC=0xFF;
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
; 0000 0142         DDRC=0x00;
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
; 0000 0143         PORTD=0x00;
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
; 0000 0144         DDRD=0xFF;
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
; 0000 0145 
; 0000 0146         ACSR=0x80;
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0000 0147         SFIOR=0x00;
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
; 0000 0148 
; 0000 0149         lcd_init(16);
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
; 0000 014A         lcd_clear();
;PCODE: $0000018A VOL: 0
; 0000 014B 
; 0000 014C         dds_reset();
;PCODE: $0000018B VOL: 0
; 0000 014D         send_data();
;PCODE: $0000018C VOL: 0
; 0000 014E         display();
;PCODE: $0000018D VOL: 0
; 0000 014F         delay_ms(150);
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
; 0000 0150 
; 0000 0151         while (1)
;PCODE: $00000191 VOL: 0
; 0000 0152         {
; 0000 0153                 tuning();
;PCODE: $00000192 VOL: 0
; 0000 0154         }
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
; 0000 0155 }
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
