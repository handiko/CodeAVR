;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.0 Professional
;Automatic Program Generator
;© Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 12/5/2012
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 12.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*****************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <stdio.h>
;
;// Alphanumeric LCD Module functions
;#include <alcd.h>
;
;#define BL PORTB.3
;
;#define sw_up           PIND.4
;#define sw_down         PIND.6
;#define sw_enter        PIND.5
;#define sw_cancel       PIND.3
;
;// Declare your global variables here
;char lcd_buff[33];
;eeprom int c = 0;
;
;void main(void)
; 0000 002B {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 002C // Declare your local variables here
; 0000 002D 
; 0000 002E // Input/Output Ports initialization
; 0000 002F // Port A initialization
; 0000 0030 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0031 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0032 PORTA=0x00;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0033 DDRA=0x00;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0034 
; 0000 0035 // Port B initialization
; 0000 0036 // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 0037 // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 0038 PORTB=0x00;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0039 DDRB=0xFF;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 003A 
; 0000 003B // Port C initialization
; 0000 003C // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 003D // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 003E PORTC=0x00;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 003F DDRC=0x00;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0040 
; 0000 0041 // Port D initialization
; 0000 0042 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0043 // State7=P State6=P State5=P State4=P State3=P State2=P State1=P State0=P
; 0000 0044 PORTD=0xFF;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0045 DDRD=0x00;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0046 
; 0000 0047 // Timer/Counter 0 initialization
; 0000 0048 // Clock source: System Clock
; 0000 0049 // Clock value: Timer 0 Stopped
; 0000 004A // Mode: Normal top=0xFF
; 0000 004B // OC0 output: Disconnected
; 0000 004C TCCR0=0x00;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 004D TCNT0=0x00;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 004E OCR0=0x00;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 004F 
; 0000 0050 // Timer/Counter 1 initialization
; 0000 0051 // Clock source: System Clock
; 0000 0052 // Clock value: Timer1 Stopped
; 0000 0053 // Mode: Normal top=0xFFFF
; 0000 0054 // OC1A output: Discon.
; 0000 0055 // OC1B output: Discon.
; 0000 0056 // Noise Canceler: Off
; 0000 0057 // Input Capture on Falling Edge
; 0000 0058 // Timer1 Overflow Interrupt: Off
; 0000 0059 // Input Capture Interrupt: Off
; 0000 005A // Compare A Match Interrupt: Off
; 0000 005B // Compare B Match Interrupt: Off
; 0000 005C TCCR1A=0x00;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 005D TCCR1B=0x00;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 005E TCNT1H=0x00;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 005F TCNT1L=0x00;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0060 ICR1H=0x00;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0061 ICR1L=0x00;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0062 OCR1AH=0x00;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0063 OCR1AL=0x00;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0064 OCR1BH=0x00;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0065 OCR1BL=0x00;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0066 
; 0000 0067 // Timer/Counter 2 initialization
; 0000 0068 // Clock source: System Clock
; 0000 0069 // Clock value: Timer2 Stopped
; 0000 006A // Mode: Normal top=0xFF
; 0000 006B // OC2 output: Disconnected
; 0000 006C ASSR=0x00;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 006D TCCR2=0x00;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 006E TCNT2=0x00;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 006F OCR2=0x00;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0070 
; 0000 0071 // External Interrupt(s) initialization
; 0000 0072 // INT0: Off
; 0000 0073 // INT1: Off
; 0000 0074 // INT2: Off
; 0000 0075 MCUCR=0x00;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0076 MCUCSR=0x00;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0077 
; 0000 0078 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0079 TIMSK=0x00;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 007A 
; 0000 007B // USART initialization
; 0000 007C // USART disabled
; 0000 007D UCSRB=0x00;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 007E 
; 0000 007F // Analog Comparator initialization
; 0000 0080 // Analog Comparator: Off
; 0000 0081 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 0082 ACSR=0x80;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0083 SFIOR=0x00;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0084 
; 0000 0085 // ADC initialization
; 0000 0086 // ADC disabled
; 0000 0087 ADCSRA=0x00;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0088 
; 0000 0089 // SPI initialization
; 0000 008A // SPI disabled
; 0000 008B SPCR=0x00;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 008C 
; 0000 008D // TWI initialization
; 0000 008E // TWI disabled
; 0000 008F TWCR=0x00;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0090 
; 0000 0091 // Alphanumeric LCD initialization
; 0000 0092 // Connections specified in the
; 0000 0093 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 0094 // RS - PORTB Bit 0
; 0000 0095 // RD - PORTB Bit 1
; 0000 0096 // EN - PORTB Bit 2
; 0000 0097 // D4 - PORTB Bit 4
; 0000 0098 // D5 - PORTB Bit 5
; 0000 0099 // D6 - PORTB Bit 6
; 0000 009A // D7 - PORTB Bit 7
; 0000 009B // Characters/line: 8
; 0000 009C lcd_init(16);
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 009D 
; 0000 009E BL = 1;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 009F delay_ms(1000);
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 00A0 BL = 0;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 00A1 delay_ms(1000);
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 00A2 BL = 1;
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 00A3 
; 0000 00A4         while (1)
;PCODE: $00000061 VOL: 0
; 0000 00A5         {
; 0000 00A6                 // Place your code here
; 0000 00A7                 if(!sw_up)
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 00A8                 {
; 0000 00A9                         delay_ms(250);
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 00AA                         lcd_clear();
;PCODE: $00000068 VOL: 0
; 0000 00AB                         lcd_gotoxy(0,0);
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 00AC                         sprintf(lcd_buff,"sw up  %d",c++);
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 00AD                         lcd_puts(lcd_buff);
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 00AE                 }
; 0000 00AF 
; 0000 00B0                 if(!sw_down)
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 00B1                 {
; 0000 00B2                         delay_ms(250);
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 00B3                         lcd_clear();
;PCODE: $00000088 VOL: 0
; 0000 00B4                         lcd_gotoxy(0,0);
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 00B5                         sprintf(lcd_buff,"sw dowm  %d",c++);
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 00B6                         lcd_puts(lcd_buff);
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 00B7                 }
; 0000 00B8 
; 0000 00B9                 if(!sw_enter)
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 00BA                 {
; 0000 00BB                         delay_ms(250);
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 00BC                         lcd_clear();
;PCODE: $000000A8 VOL: 0
; 0000 00BD                         lcd_gotoxy(0,0);
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 00BE                         sprintf(lcd_buff,"sw enter  %d",c++);
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 00BF                         lcd_puts(lcd_buff);
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 00C0                 }
; 0000 00C1 
; 0000 00C2                 if(!sw_cancel)
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 00C3                 {
; 0000 00C4                         delay_ms(250);
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 00C5                         lcd_clear();
;PCODE: $000000C8 VOL: 0
; 0000 00C6                         lcd_gotoxy(0,0);
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0000 00C7                         sprintf(lcd_buff,"sw cancel  %d",c++);
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0000 00C8                         lcd_puts(lcd_buff);
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 00C9                 }
; 0000 00CA         }
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0000 00CB }
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
